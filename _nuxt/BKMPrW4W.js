import{_ as f,x as v,y as _,z as C,i as A,W as m,l as T,m as $,j as D,n as x,c as d,o as p,a as o,t as c,p as N,v as W,g as h,d as b,r as y,b as r,w,T as M,M as S,H as R,G as k,F as j}from"#entry";const U={name:"AirdropDomainHolders",data(){return{domainName:null,waiting:!1,domainChatRewardWei:0,fetchingData:!1}},computed:{domainChatReward(){return Math.floor(Number(x(this.domainChatRewardWei)))}},mounted(){this.address&&this.fetchAirdropData()},methods:{async fetchAirdropData(){this.fetchingData=!0;try{const t=await D({address:this.$config.public.airdropClaimDomainsAddress,abi:[{name:"chatReward",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256",name:""}]}],functionName:"chatReward"});t&&(this.domainChatRewardWei=t)}catch(t){console.error("Error fetching airdrop data:",t)}finally{this.fetchingData=!1}},async claim(){const t=this.toast({component:m,props:{text:"Please confirm the transaction."}},{type:"info"});this.waiting=!0;const i=this.domainName.replace(this.$config.public.tldName,"").trim().toLowerCase();console.log(i);const n={address:this.$config.public.airdropClaimDomainsAddress,abi:[{name:"claim",type:"function",inputs:[{name:"_domainName",type:"string"}],outputs:[],stateMutability:"nonpayable"}]};let s;try{const e=await T({...n,functionName:"claim",args:[i]});this.toast.dismiss(t),s=this.toast({component:m,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e,"_blank").focus()});const a=await $(e);a.status==="success"?(this.toast.dismiss(s),this.toast("Airdrop for "+i+this.$config.public.tldName+" has been successfully claimed!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e,"_blank").focus()}),this.addToChatTokenBalanceWei(this.domainChatRewardWei),this.waiting=!1):(this.toast.dismiss(s),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e,"_blank").focus()}),console.log(a))}catch(e){console.error(e);try{let a=e.message.split("Details:")[1];a=a.split("Version: viem")[0],a=a.replace(/"/g,""),a=a.replace("execution reverted:","Error:"),a=a.replace("ChatTokenClaimDomains: ",""),console.log(a),this.toast(a,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(t),this.toast.dismiss(s),this.waiting=!1}}},setup(){const t=v(),{address:i}=_({config:t}),{addToChatTokenBalanceWei:n}=C(),s=A();return{addToChatTokenBalanceWei:n,address:i,toast:s}},watch:{address(){this.address&&this.fetchAirdropData()}}},V={class:"text-center"},H={class:"input-group mt-5"},I={class:"btn btn-primary",type:"button","aria-expanded":"false"},F={class:"d-flex justify-content-center mt-4 mb-4"},z=["disabled"],G={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},L={class:"text-center"};function Y(t,i,n,s,e,a){return p(),d("div",null,[o("p",V," Claim "+c(a.domainChatReward)+" "+c(t.$config.public.chatTokenSymbol)+" airdrop for each "+c(t.$config.public.tldName)+" domain that you hold. ",1),o("div",H,[N(o("input",{"onUpdate:modelValue":i[0]||(i[0]=l=>e.domainName=l),type:"text",placeholder:"Enter domain name",class:"form-control"},null,512),[[W,e.domainName]]),o("button",I,c(t.$config.public.tldName),1)]),o("div",F,[o("button",{disabled:e.waiting||!e.domainName,class:"btn btn-outline-primary",type:"button",onClick:i[1]||(i[1]=(...l)=>a.claim&&a.claim(...l))},[e.waiting?(p(),d("span",G)):h("",!0),i[2]||(i[2]=b(" Claim ",-1))],8,z)]),i[3]||(i[3]=o("hr",null,null,-1)),o("p",L,[o("small",null," Note that someone else can claim tokens (for a given domain) for you and save you on gas fees. You will still receive the same amount of "+c(t.$config.public.chatTokenSymbol)+" tokens as if you've made the claim yourself. ",1)])])}const q=f(U,[["render",Y]]),J={name:"AirdropActivityPoints",data(){return{waiting:!1,loadingData:!1,airdropApWei:0}},computed:{airdropAp(){return this.airdropApWei?Math.round(Number(x(this.airdropApWei))):0}},mounted(){this.address&&this.fetchAirdropData()},methods:{async fetchAirdropData(){this.loadingData=!0;try{const t=await D({address:this.$config.public.airdropApAddress,abi:[{name:"claimPreview",type:"function",stateMutability:"view",inputs:[{type:"address",name:"_address"}],outputs:[{type:"uint256",name:""}]}],functionName:"claimPreview",args:[this.address]});t&&(this.airdropApWei=t)}catch(t){console.error("Error fetching airdrop data:",t)}finally{this.loadingData=!1}},async claim(){const t=this.toast({component:m,props:{text:"Please confirm the transaction."}},{type:"info"});this.waiting=!0;const i={address:this.$config.public.airdropApAddress,abi:[{name:"claim",type:"function",stateMutability:"nonpayable",inputs:[],outputs:[]}],functionName:"claim",args:[]};let n;try{const s=await T(i);this.toast.dismiss(t),n=this.toast({component:m,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()});const e=await $(s);e.status==="success"?(this.toast.dismiss(n),this.addToChatTokenBalanceWei(this.airdropApWei),this.airdropApWei=0,this.toast("Airdrop for past APs has been successfully claimed!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()}),this.waiting=!1):(this.toast.dismiss(n),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()}),console.log(e))}catch(s){console.error(s);try{let e=s.message.split("Details:")[1];e=e.split("Version: viem")[0],e=e.replace(/"/g,""),e=e.replace("execution reverted:","Error:"),e=e.replace("ChatTokenClaimActivityPoints: ",""),console.log(e),this.toast(e,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(t),this.toast.dismiss(n),this.waiting=!1}}},setup(){const t=v(),{address:i}=_({config:t}),{addToChatTokenBalanceWei:n}=C(),s=A();return{addToChatTokenBalanceWei:n,address:i,toast:s}},watch:{address(){this.address&&this.fetchAirdropData()}}},K={class:"text-center"},O={class:"input-group mt-5"},Q={class:"btn btn-primary",type:"button","aria-expanded":"false"},X={class:"d-flex justify-content-center mt-4 mb-4"},Z=["disabled"],tt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},et={class:"text-center"};function it(t,i,n,s,e,a){return p(),d("div",null,[o("p",K,"Claim "+c(a.airdropAp)+" "+c(t.$config.public.chatTokenSymbol)+" airdrop for past activity points.",1),o("div",O,[N(o("input",{"onUpdate:modelValue":i[0]||(i[0]=l=>a.airdropAp=l),type:"text",class:"form-control",disabled:""},null,512),[[W,a.airdropAp]]),o("button",Q,c(t.$config.public.chatTokenSymbol),1)]),o("div",X,[o("button",{disabled:e.waiting||e.loadingData||a.airdropAp==0||a.airdropAp==null,class:"btn btn-outline-primary",type:"button",onClick:i[1]||(i[1]=(...l)=>a.claim&&a.claim(...l))},[e.loadingData||e.waiting?(p(),d("span",tt)):h("",!0),i[2]||(i[2]=b(" Claim ",-1))],8,Z)]),i[3]||(i[3]=o("hr",null,null,-1)),o("p",et,[o("small",null," If you're not eligible, or have already claimed the airdrop, the amount of "+c(t.$config.public.chatTokenSymbol)+" tokens shown is 0. ",1)])])}const ot=f(J,[["render",it]]),at={name:"Airdrop",data(){return{currentTab:"domain"}},components:{AirdropDomainHolders:q,AirdropActivityPoints:ot},mounted(){this.currentTab=localStorage.getItem("airdropCurrentTab"),this.currentTab||(this.currentTab="domain")},methods:{changeCurrentTab(t){this.currentTab=t,localStorage.setItem("airdropCurrentTab",t)}}},st={class:"card border scroll-500"},nt={class:"card-body"},rt={class:"fs-3"},ct={class:"nav nav-tabs nav-fill"},lt={class:"nav-item"},dt={class:"nav-item"},pt={class:"tab-content mt-3"},ut={key:0},mt={class:"d-flex justify-content-center mt-5"},ht={class:"col-12 col-lg-8"},ft={key:1},bt={class:"d-flex justify-content-center mt-5"},gt={class:"col-12 col-lg-8"};function yt(t,i,n,s,e,a){const l=M,u=S,P=R,B=y("AirdropDomainHolders"),E=y("AirdropActivityPoints");return p(),d(j,null,[r(P,null,{default:w(()=>[r(l,null,{default:w(()=>[b("Airdrop | "+c(t.$config.public.projectMetadataTitle),1)]),_:1}),r(u,{property:"og:title",content:"Airdrop"}),r(u,{name:"description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"]),r(u,{property:"og:image",content:t.$config.public.projectUrl+t.$config.public.previewImageAirdrop},null,8,["content"]),r(u,{property:"og:description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"]),r(u,{name:"twitter:image",content:t.$config.public.projectUrl+t.$config.public.previewImageAirdrop},null,8,["content"]),r(u,{name:"twitter:description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"])]),_:1}),o("div",st,[o("div",nt,[o("p",rt,[o("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:i[0]||(i[0]=g=>t.$router.back())})]),o("ul",ct,[o("li",lt,[o("button",{class:k(["nav-link",e.currentTab==="domain"?"active":""]),onClick:i[1]||(i[1]=g=>a.changeCurrentTab("domain"))}," Domain holders ",2)]),o("li",dt,[o("button",{class:k(["nav-link",e.currentTab==="ap"?"active":""]),onClick:i[2]||(i[2]=g=>a.changeCurrentTab("ap"))}," Activity Points ",2)])]),o("div",pt,[e.currentTab==="domain"?(p(),d("div",ut,[o("div",mt,[o("div",ht,[r(B)])])])):h("",!0),e.currentTab==="ap"?(p(),d("div",ft,[o("div",bt,[o("div",gt,[r(E)])])])):h("",!0)])])])],64)}const kt=f(at,[["render",yt]]);export{kt as default};
