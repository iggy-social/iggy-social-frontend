import{_ as b,j as k,i as _,W as y,r as g,c as l,o as r,a as s,g as c,p as w,b as h,v,f as I,d as p,m as T,t as m,F,R as W,a6 as Z,X as B,A as N,a4 as P,a7 as U,a5 as C,a8 as tt,I as et,S as st,C as it,w as D,T as ot,M as nt,H as at,e as rt,k as lt,E as M,Y as L,G as E,V as dt,a9 as R,n as ct,J as ut,L as O}from"#entry";import{a as pt}from"./CwBYHHte.js";import{I as x}from"./C628wGYq.js";import{F as $}from"./DunJuDhm.js";import"./nMfmJDAB.js";const mt={name:"AddImageToCollectionModal",props:["cAddress","mdAddress"],components:{FileUploadInput:$,Image:x},data(){return{componentId:null,imageUrl:null,waiting:!1}},mounted(){this.componentId=this.$.uid},methods:{async addNewImage(){this.waiting=!0;let o;try{const t={address:this.mdAddress,abi:[{name:"addImageToCollection",type:"function",stateMutability:"nonpayable",inputs:[{name:"nftAddress_",type:"address"},{name:"imageUrl_",type:"string"}],outputs:[]}],functionName:"addImageToCollection",args:[this.cAddress,this.imageUrl]},i=await this.writeData(t);o=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const n=await this.waitForTxReceipt(i);n.status==="success"?(this.toast.dismiss(o),this.toast("You have successfully added new image URL to the NFT collection.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.imageUrl=null,document.getElementById("closeModal-"+this.componentId).click(),this.waiting=!1):(this.toast.dismiss(o),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(n))}catch(t){console.error(t);try{let i=t.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(o),this.waiting=!1}},insertImageLink(o){this.imageUrl=o}},setup(){const{writeData:o,waitForTxReceipt:t}=k(),i=_();return{writeData:o,waitForTxReceipt:t,toast:i}}},ht=["aria-labelledby"],ft={class:"modal-dialog"},gt={class:"modal-content"},yt={class:"modal-header"},bt=["id"],wt=["id"],vt={class:"modal-body"},kt={class:"mt-2"},_t={key:0},It={key:1},At={key:2,class:"mt-3"},Ct={class:"modal-footer"},Ut=["disabled"],Tt={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"};function xt(o,t,i,n,e,a){const d=g("FileUploadInput"),u=g("Image");return r(),l("div",{class:"modal fade",id:"addImageToCollectionModal",tabindex:"-1","aria-labelledby":"modalLabel-"+e.componentId,"aria-hidden":"true"},[s("div",ft,[s("div",gt,[s("div",yt,[s("h1",{class:"modal-title fs-5",id:"modalLabel-"+e.componentId},"Add Image To Collection",8,bt),s("button",{id:"closeModal-"+e.componentId,type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,8,wt)]),s("div",vt,[s("div",kt,[!e.imageUrl&&o.$config.public.fileUploadEnabled?(r(),l("div",_t,[t[2]||(t[2]=s("p",null,"Upload additional image (and then click Submit below):",-1)),h(d,{btnCls:"btn btn-primary",storageType:o.$config.public.fileUploadStorageType,maxFileSize:o.$config.public.fileUploadSizeLimit,onProcessUploadedFileUrl:a.insertImageLink},null,8,["storageType","maxFileSize","onProcessUploadedFileUrl"]),t[3]||(t[3]=s("p",{class:"mt-3"},"Or paste image link here:",-1))])):c("",!0),o.$config.public.fileUploadEnabled?c("",!0):(r(),l("p",It,"Paste image link here:")),w(s("input",{"onUpdate:modelValue":t[0]||(t[0]=f=>e.imageUrl=f),type:"text",class:"form-control",id:"addImageToCollectionInput"},null,512),[[v,e.imageUrl]]),e.imageUrl?(r(),l("div",At,[(r(),I(u,{url:e.imageUrl,key:e.imageUrl,cls:"img-thumbnail img-fluid",style:{"max-width":"100px"}},null,8,["url"])),t[4]||(t[4]=s("br",null,null,-1)),t[5]||(t[5]=s("small",null,"If image didn't appear above, then something is wrong with the link you added (wait until the loading indicator completes). If you have an IPFS link, it also helps to cut/paste the same link a couple of times.",-1))])):c("",!0)])]),s("div",Ct,[s("button",{onClick:t[1]||(t[1]=(...f)=>a.addNewImage&&a.addNewImage(...f)),type:"button",class:"btn btn-primary",disabled:!e.imageUrl||e.waiting},[e.waiting?(r(),l("span",Tt)):c("",!0),t[6]||(t[6]=p(" Submit to blockchain ",-1))],8,Ut)])])])],8,ht)}const Nt=b(mt,[["render",xt]]),Dt={name:"ChangeCollectionPreviewModal",props:["cAddress","mdAddress"],emits:["saveCollection"],components:{FileUploadInput:$,Image:x},data(){return{componentId:null,imageUrl:null,waiting:!1}},mounted(){this.componentId=this.$.uid},methods:{async updateImage(){if(!this.isActivated){this.toast("Please connect your wallet first.",{type:"error"});return}this.waiting=!0;let o;try{const t={address:this.mdAddress,abi:[{name:"setCollectionPreview",type:"function",stateMutability:"nonpayable",inputs:[{name:"nftAddress_",type:"address"},{name:"collectionPreview_",type:"string"}],outputs:[]}],functionName:"setCollectionPreview",args:[this.cAddress,this.imageUrl]},i=await this.writeData(t);o=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const n=await this.waitForTxReceipt(i);n.status==="success"?(this.toast.dismiss(o),this.toast("You have updated the NFT collection preview image.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.$emit("saveCollection",{image:this.imageUrl}),this.imageUrl=null,document.getElementById("closeModal-"+this.componentId).click(),this.waiting=!1):(this.toast.dismiss(o),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(n))}catch(t){console.error(t);try{let i=t.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(o),this.waiting=!1}},insertImageLink(o){this.imageUrl=o}},setup(){const{writeData:o,waitForTxReceipt:t}=k(),{isActivated:i}=T(),n=_();return{writeData:o,waitForTxReceipt:t,isActivated:i,toast:n}}},Mt=["aria-labelledby"],Ft={class:"modal-dialog"},St={class:"modal-content"},Bt={class:"modal-header"},Pt=["id"],Lt=["id"],Et={class:"modal-body"},Rt={class:"mt-4"},Ot={key:0},Wt={key:1},$t={key:2,class:"mt-3"},Vt={class:"modal-footer"},jt=["disabled"],Gt={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"};function Yt(o,t,i,n,e,a){const d=g("FileUploadInput"),u=g("Image");return r(),l("div",{class:"modal fade",id:"changeCollectionPreviewModal",tabindex:"-1","aria-labelledby":"modalLabel-"+e.componentId,"aria-hidden":"true"},[s("div",Ft,[s("div",St,[s("div",Bt,[s("h1",{class:"modal-title fs-5",id:"modalLabel-"+e.componentId},"Change Collection Preview Image",8,Pt),s("button",{id:"closeModal-"+e.componentId,type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,8,Lt)]),s("div",Et,[t[6]||(t[6]=s("p",null,"Change your collection preview image.",-1)),s("div",Rt,[!e.imageUrl&&o.$config.public.fileUploadEnabled?(r(),l("div",Ot,[t[2]||(t[2]=s("p",null,"Upload new image (and then click Submit below):",-1)),h(d,{btnCls:"btn btn-primary",storageType:o.$config.public.fileUploadStorageType,maxFileSize:o.$config.public.fileUploadSizeLimit,onProcessUploadedFileUrl:a.insertImageLink},null,8,["storageType","maxFileSize","onProcessUploadedFileUrl"]),t[3]||(t[3]=s("p",{class:"mt-3"},"Or paste image link here:",-1))])):c("",!0),o.$config.public.fileUploadEnabled?c("",!0):(r(),l("p",Wt,"Paste image link here:")),w(s("input",{"onUpdate:modelValue":t[0]||(t[0]=f=>e.imageUrl=f),type:"text",class:"form-control"},null,512),[[v,e.imageUrl]]),e.imageUrl?(r(),l("div",$t,[h(u,{url:e.imageUrl,cls:"img-thumbnail img-fluid",style:{"max-width":"100px"}},null,8,["url"]),t[4]||(t[4]=s("br",null,null,-1)),t[5]||(t[5]=s("small",null,"If image didn't appear above, then something is wrong with the link you added (wait until the loading indicator completes). If you have an IPFS link, it also helps to cut/paste the same link a couple of times.",-1))])):c("",!0)])]),s("div",Vt,[s("button",{onClick:t[1]||(t[1]=(...f)=>a.updateImage&&a.updateImage(...f)),type:"button",class:"btn btn-primary",disabled:!e.imageUrl||e.waiting},[e.waiting?(r(),l("span",Gt)):c("",!0),t[7]||(t[7]=p(" Submit to blockchain ",-1))],8,jt)])])])],8,Mt)}const zt=b(Dt,[["render",Yt]]),Ht={name:"ChangeDescriptionModal",props:["cAddress","cDescription","mdAddress"],emits:["saveCollection"],data(){return{componentId:null,editDescription:null,waiting:!1}},mounted(){this.componentId=this.$.uid,this.editDescription=this.cDescription},methods:{async update(){this.waiting=!0;let o;try{const t=await this.writeData({address:this.mdAddress,abi:[{name:"setDescription",type:"function",stateMutability:"nonpayable",inputs:[{name:"nftAddress_",type:"address"},{name:"description_",type:"string"}],outputs:[]}],functionName:"setDescription",args:[this.cAddress,this.editDescription.replace(/"/g,"'")]});o=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t,"_blank").focus()});const i=await this.waitForTxReceipt(t);i.status==="success"?(this.toast.dismiss(o),this.toast("You have updated the NFT description.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t,"_blank").focus()}),this.$emit("saveCollection",{description:this.editDescription.replace(/"/g,"'")}),this.editDescription=null,document.getElementById("closeModal-"+this.componentId).click(),this.waiting=!1):(this.toast.dismiss(o),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t,"_blank").focus()}),console.log(i))}catch(t){console.error(t);try{let i=t.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(o),this.waiting=!1}}},setup(){const{writeData:o,waitForTxReceipt:t}=k(),{isActivated:i}=T(),n=_();return{writeData:o,waitForTxReceipt:t,isActivated:i,toast:n}},watch:{cDescription(){this.editDescription=this.cDescription}}},Jt=["aria-labelledby"],qt={class:"modal-dialog"},Kt={class:"modal-content"},Xt={class:"modal-header"},Qt=["id"],Zt=["id"],te={class:"modal-body"},ee={class:"mt-4"},se=["for"],ie=["id"],oe={class:"modal-footer"},ne=["disabled"],ae={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"};function re(o,t,i,n,e,a){return r(),l("div",{class:"modal fade",id:"changeDescriptionModal",tabindex:"-1","aria-labelledby":"modalLabel-"+e.componentId,"aria-hidden":"true"},[s("div",qt,[s("div",Kt,[s("div",Xt,[s("h1",{class:"modal-title fs-5",id:"modalLabel-"+e.componentId},"Change description",8,Qt),s("button",{id:"closeModal-"+e.componentId,type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,8,Zt)]),s("div",te,[t[3]||(t[3]=s("p",null,"Change your collection description.",-1)),s("div",ee,[s("label",{for:"input-"+e.componentId,class:"form-label"},[...t[2]||(t[2]=[s("strong",null," Enter new description: ",-1)])],8,se),w(s("input",{"onUpdate:modelValue":t[0]||(t[0]=d=>e.editDescription=d),type:"text",class:"form-control",id:"input-"+e.componentId},null,8,ie),[[v,e.editDescription]])])]),s("div",oe,[t[5]||(t[5]=s("button",{type:"button",class:"btn btn-secondary","data-bs-dismiss":"modal"},"Close",-1)),s("button",{onClick:t[1]||(t[1]=(...d)=>a.update&&a.update(...d)),type:"button",class:"btn btn-primary",disabled:!e.editDescription||e.waiting},[e.waiting?(r(),l("span",ae)):c("",!0),t[4]||(t[4]=p(" Submit ",-1))],8,ne)])])])],8,Jt)}const le=b(Ht,[["render",re]]),de={name:"ChangeNftTypeModal",props:["cAddress","cType","mdAddress"],emits:["saveCollection"],data(){return{componentId:null,editImageMetadataUrl:null,editImageOptions:[{description:"0) Onchain image(s)"},{description:"1) Static metadata URL"},{description:"2) Generative metadata (.json)"},{description:"3) Generative metadata"}],editImagePreviewUrl:"",typeChoice:0,waitingMetadata:!1}},mounted(){this.componentId=this.$.uid},methods:{async updateMetadata(){this.waitingMetadata=!0,this.typeChoice===0&&(this.editImagePreviewUrl=this.editImageMetadataUrl),this.editImagePreviewUrl===null&&(this.editImagePreviewUrl="");let o;try{const t={address:this.mdAddress,abi:[{name:"setMdTypeAndUrlOrImage",type:"function",stateMutability:"nonpayable",inputs:[{name:"nftAddress_",type:"address"},{name:"mdType_",type:"uint256"},{name:"mdUrlOrImage_",type:"string"},{name:"collectionImage_",type:"string"}],outputs:[]}],functionName:"setMdTypeAndUrlOrImage",args:[this.cAddress,BigInt(this.typeChoice),this.editImageMetadataUrl,this.editImagePreviewUrl]},i=await this.writeData(t);o=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const n=await this.waitForTxReceipt(i);n.status==="success"?(this.toast.dismiss(o),this.toast("You have updated the NFT image and/or metadata URL.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.$emit("saveCollection",{type:this.typeChoice,image:this.editImagePreviewUrl}),this.editImageMetadataUrl=null,this.editImagePreviewUrl="",document.getElementById("closeModal-"+this.componentId).click(),this.waitingMetadata=!1):(this.toast.dismiss(o),this.waitingMetadata=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(n))}catch(t){console.error(t);try{let i=t.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingMetadata=!1}finally{this.toast.dismiss(o),this.waitingMetadata=!1}}},setup(){const{writeData:o,waitForTxReceipt:t}=k(),i=_();return{writeData:o,waitForTxReceipt:t,toast:i}}},ce={class:"modal fade",id:"changeNftTypeModal",tabindex:"-1","aria-labelledby":"changeNftTypeModalLabel","aria-hidden":"true"},ue={class:"modal-dialog"},pe={class:"modal-content"},me={class:"modal-header"},he=["id"],fe={class:"modal-body"},ge={class:"dropdown"},ye={class:"btn btn-primary dropdown-toggle",type:"button","data-bs-toggle":"dropdown","aria-expanded":"false"},be={class:"dropdown-menu text-break"},we=["onClick"],ve={class:"mt-3"},ke={key:0},_e={key:1},Ie={key:2},Ae={key:3},Ce={class:"mt-4"},Ue={for:"imageMetadataUrl",class:"form-label"},Te={key:0},xe={key:1},Ne={key:2},De={key:3},Me={key:0,class:"mt-4"},Fe={class:"modal-footer"},Se=["disabled"],Be={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"};function Pe(o,t,i,n,e,a){return r(),l("div",ce,[s("div",ue,[s("div",pe,[s("div",me,[t[3]||(t[3]=s("h1",{class:"modal-title fs-5",id:"changeNftTypeModalLabel"},"Change NFT Type",-1)),s("button",{id:"closeModal-"+e.componentId,type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,8,he)]),s("div",fe,[s("p",null,"Current type of this NFT collection is: "+m(e.editImageOptions[i.cType].description)+".",1),t[10]||(t[10]=s("p",null,[s("strong",null,"Pick one of these options:")],-1)),s("div",ge,[s("button",ye,m(e.editImageOptions[e.typeChoice].description),1),s("div",be,[(r(!0),l(F,null,W(e.editImageOptions,(d,u)=>(r(),l("span",{key:u,onClick:f=>e.typeChoice=u,class:"dropdown-item cursor-pointer"},m(d.description),9,we))),128))])]),s("div",ve,[e.typeChoice==0?(r(),l("p",ke,' The "Onchain image(s)" option means that metadata is stored onchain (within the smart contract itself). Use this option if you want to add an image URL in the field below (not a metadata file). This is the default option for NFTs created through this launchpad. ')):c("",!0),e.typeChoice==1?(r(),l("p",_e,[...t[4]||(t[4]=[p(' The "Static metadata URL" option means that all the NFTs in the collection have the same (static) image and meta data. The metadata is stored offchain, usually on Arweave, IPFS or on a centralized server. Use this option if you have a URL of a single metadata ',-1),s("strong",null,"file",-1),p(" (all NFTs have the same metadata and image). ",-1)])])):c("",!0),e.typeChoice==2?(r(),l("p",Ie,[...t[5]||(t[5]=[p(' The "Generative metadata (.json)" option means that all the NFTs in the collection have a different image and different meta data. The metadata is stored offchain, usually on Arweave, IPFS or on a centralized server. Use this option if you have a metadata ',-1),s("strong",null,"folder",-1),p(" URL with multiple metadata files in it, where these files HAVE a .json extension. ",-1)])])):c("",!0),e.typeChoice==3?(r(),l("p",Ae,[...t[6]||(t[6]=[p(' The "Generative metadata" option means that all the NFTs in the collection have a different image and different meta data. The metadata is stored offchain, usually on Arweave, IPFS or on a centralized server. Use this option if you have a metadata ',-1),s("strong",null,"folder",-1),p(" URL with multiple metadata files in it, where these files DO NOT HAVE a .json extension. ",-1)])])):c("",!0)]),s("div",Ce,[s("label",Ue,[s("strong",null,[t[7]||(t[7]=p(" Enter ",-1)),e.typeChoice==0?(r(),l("span",Te,"image URL:")):c("",!0),e.typeChoice==1?(r(),l("span",xe,"metadata file URL:")):c("",!0),e.typeChoice==2?(r(),l("span",Ne,"metadata folder URL:")):c("",!0),e.typeChoice==3?(r(),l("span",De,"metadata folder URL:")):c("",!0)])]),w(s("input",{"onUpdate:modelValue":t[0]||(t[0]=d=>e.editImageMetadataUrl=d),type:"text",class:"form-control",id:"imageMetadataUrl"},null,512),[[v,e.editImageMetadataUrl]])]),e.typeChoice>0?(r(),l("div",Me,[t[8]||(t[8]=s("label",{for:"collectionPreviewUrl",class:"form-label"},[s("strong",null," Change collection preview image (optional): ")],-1)),w(s("input",{"onUpdate:modelValue":t[1]||(t[1]=d=>e.editImagePreviewUrl=d),type:"text",class:"form-control",id:"collectionPreviewUrl","aria-describedby":"previewImageHelp"},null,512),[[v,e.editImagePreviewUrl]]),t[9]||(t[9]=s("div",{id:"previewImageHelp",class:"form-text"}," This is a preview image for the whole collection, not for individual NFTs. ",-1))])):c("",!0)]),s("div",Fe,[t[12]||(t[12]=s("button",{type:"button",class:"btn btn-secondary","data-bs-dismiss":"modal"},"Close",-1)),s("button",{onClick:t[2]||(t[2]=(...d)=>a.updateMetadata&&a.updateMetadata(...d)),type:"button",class:"btn btn-primary",disabled:!e.editImageMetadataUrl||e.waitingMetadata},[e.waitingMetadata?(r(),l("span",Be)):c("",!0),t[11]||(t[11]=p(" Submit ",-1))],8,Se)])])])])}const Le=b(de,[["render",Pe]]),Ee={name:"CollectionMediaSection",props:["audioUrl","videoUrl","youtubeUrl"],data(){return{aFormat:null,aUrl:null,currentTab:"audio",vFormat:null,vUrl:null,yUrl:null}},mounted(){this.fetchMetadata()},methods:{youtubeParsing:Z,async fetchMetadata(){try{if(this.youtubeUrl&&(this.yUrl=this.youtubeUrl),this.audioUrl){const o=await B(this.audioUrl);o?.success&&(this.aUrl=o.url,this.aFormat=o.format)}if(this.videoUrl){const o=await B(this.videoUrl);o?.success&&(this.vUrl=o.url,this.vFormat=o.format)}}catch(o){console.log(o)}this.yUrl?this.currentTab="youtube":this.aUrl?this.currentTab="audio":this.vUrl&&(this.currentTab="video")}}},Re={class:"card border mt-3"},Oe={class:"card-body"},We={class:"nav nav-tabs nav-fill"},$e={key:0,class:"nav-item"},Ve={key:1,class:"nav-item"},je={key:2,class:"nav-item"},Ge={class:"tab-content mt-3 d-flex justify-content-center"},Ye={key:0,class:"col-12 col-lg-8"},ze={class:"text-center mt-3"},He={class:"ratio ratio-16x9",controls:""},Je=["src","type"],qe={key:1,class:"col-12 col-lg-8"},Ke={class:"ratio ratio-16x9 rounded",controls:""},Xe=["src","type"],Qe={key:2,class:"col-12 col-lg-8"},Ze=["innerHTML"];function ts(o,t,i,n,e,a){return r(),l("div",Re,[s("div",Oe,[s("ul",We,[e.aUrl?(r(),l("li",$e,[s("button",{class:N(["nav-link",e.currentTab==="audio"?"active":""]),onClick:t[0]||(t[0]=d=>e.currentTab="audio")},"Audio",2)])):c("",!0),e.vUrl?(r(),l("li",Ve,[s("button",{class:N(["nav-link",e.currentTab==="video"?"active":""]),onClick:t[1]||(t[1]=d=>e.currentTab="video")},"Video",2)])):c("",!0),e.yUrl?(r(),l("li",je,[s("button",{class:N(["nav-link",e.currentTab==="youtube"?"active":""]),onClick:t[2]||(t[2]=d=>e.currentTab="youtube")},"YouTube",2)])):c("",!0)]),s("div",Ge,[e.currentTab==="audio"&&e.aUrl?(r(),l("div",Ye,[s("p",ze,[s("audio",He,[s("source",{src:e.aUrl,type:e.aFormat},null,8,Je),t[3]||(t[3]=p(" Your browser does not support mp3 audio player. ",-1))])])])):c("",!0),e.currentTab==="video"&&e.vUrl?(r(),l("div",qe,[s("video",Ke,[s("source",{src:e.vUrl,type:e.vFormat},null,8,Xe),t[4]||(t[4]=p(" Your browser does not support mp4 video player. ",-1))])])):c("",!0),e.currentTab==="youtube"&&e.yUrl?(r(),l("div",Qe,[s("span",{innerHTML:a.youtubeParsing(e.yUrl)},null,8,Ze)])):c("",!0)])])])}const es=b(Ee,[["render",ts]]),ss={name:"RemoveImageFromCollectionModal",props:["cAddress","mdAddress"],data(){return{componentId:null,images:[],imageUrl:null,waitingLoad:!1,waitingRemove:!1}},components:{Image:x},mounted(){this.componentId=this.$.uid},methods:{async loadImages(){this.waitingLoad=!0;const o={address:this.mdAddress,abi:[{inputs:[{name:"nftAddress_",type:"address"}],name:"getCollectionImages",outputs:[{name:"",type:"string[]"}],stateMutability:"view",type:"function"}],functionName:"getCollectionImages",args:[this.cAddress]};try{const t=await this.readData(o);t&&(this.images=t),this.waitingLoad=!1}catch(t){console.error(t),this.waitingLoad=!1}},async removeImage(o){this.waitingRemove=!0;const t={address:this.mdAddress,abi:[{inputs:[{name:"nftAddress_",type:"address"},{name:"index_",type:"uint256"}],name:"removeImageFromCollectionByIndex",outputs:[],stateMutability:"nonpayable",type:"function"}],functionName:"removeImageFromCollectionByIndex",args:[this.cAddress,BigInt(o)]};let i;try{const n=await this.writeData(t);i=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+n,"_blank").focus()});const e=await this.waitForTxReceipt(n);if(e.status==="success"){this.toast.dismiss(i),this.toast("You have successfully removed an image from the NFT collection.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+n,"_blank").focus()}),this.imageUrl=null;const a=[...this.images];a.splice(o,1),this.images=a,this.waitingRemove=!1}else this.toast.dismiss(i),this.waitingRemove=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+n,"_blank").focus()}),console.log(e)}catch(n){console.error(n);try{let e=n.message.split("Details:")[1];e=e.split("Version: viem")[0],e=e.replace(/"/g,""),e=e.replace("execution reverted:","Error:"),console.log(e),this.toast(e,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingRemove=!1}finally{this.toast.dismiss(i),this.waitingRemove=!1}}},setup(){const{readData:o,writeData:t,waitForTxReceipt:i}=k(),n=_();return{readData:o,writeData:t,waitForTxReceipt:i,toast:n}}},is=["aria-labelledby"],os={class:"modal-dialog"},ns={class:"modal-content"},as={class:"modal-header"},rs=["id"],ls=["id"],ds={class:"modal-body"},cs={class:"row"},us=["for"],ps=["disabled"],ms={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},hs={key:0,class:"row mt-3"},fs={class:"card"},gs={class:"card-body"},ys={class:"row"},bs=["onClick","disabled"];function ws(o,t,i,n,e,a){const d=g("Image");return r(),l("div",{class:"modal fade",id:"removeImageFromCollectionModal",tabindex:"-1","aria-labelledby":"modalLabel-"+e.componentId,"aria-hidden":"true"},[s("div",os,[s("div",ns,[s("div",as,[s("h1",{class:"modal-title fs-5",id:"modalLabel-"+e.componentId},"Remove Image From Collection",8,rs),s("button",{id:"closeModal-"+e.componentId,type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,8,ls)]),s("div",ds,[s("div",cs,[s("label",{for:"input-"+e.componentId,class:"form-label"},[...t[1]||(t[1]=[s("strong",null," Load images from collection: ",-1)])],8,us)]),s("div",null,[s("button",{class:"btn btn-primary",onClick:t[0]||(t[0]=(...u)=>a.loadImages&&a.loadImages(...u)),disabled:e.waitingLoad},[e.waitingLoad?(r(),l("span",ms)):c("",!0),t[2]||(t[2]=p(" Load images ",-1))],8,ps)]),e.images?(r(),l("div",hs,[(r(!0),l(F,null,W(e.images,(u,f)=>(r(),l("div",{key:u,class:"col-md-4 mb-3"},[s("div",fs,[h(d,{url:u,alt:"Image",cls:"card-img-top"},null,8,["url"]),s("div",gs,[s("div",ys,[s("button",{class:"btn btn-danger",onClick:S=>a.removeImage(f),disabled:e.waitingRemove||e.images.length==1}," Delete ",8,bs)])])])]))),128))])):c("",!0)]),t[3]||(t[3]=s("div",{class:"modal-footer"},[s("button",{type:"button",class:"btn btn-secondary","data-bs-dismiss":"modal"},"Close")],-1))])])],8,is)}const vs=b(ss,[["render",ws]]),ks={name:"SendNftModal",props:["address","cAddress"],data(){return{componentId:null,editDescription:null,hasBlankCharacter:!1,nftDataLoaded:!1,nftImage:null,recipientAddress:null,recipientInput:null,tokenId:null,userSecondTokenId:null,waiting:!1,waitingFetchNft:!1}},mounted(){this.componentId=this.$.uid},methods:{hasTextBlankCharacters:P,findBlankCharacter(){this.hasBlankCharacter=!1,this.hasBlankCharacter=P(this.recipientInput)},async fetchUsersNft(){if(console.log("Fetching user's NFT ID..."),this.waitingFetchNft=!0,console.log("User's address: ",this.address),console.log("NFT contract address: ",this.cAddress),this.cAddress&&this.address){const o=U(["function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256)"]);try{const t=await this.readData({address:this.cAddress,abi:o,functionName:"tokenOfOwnerByIndex",args:[this.address,0n]});t&&(this.tokenId=t.toString())}catch{console.log("Could not fetch NFT ID for user.")}}this.waitingFetchNft=!1},async loadNftData(){this.waiting=!0;const o=U(["function ownerOf(uint256 tokenId) external view returns (address)","function tokenURI(uint256 tokenId) external view returns (string)"]);try{const t=await this.readData({address:this.cAddress,abi:o,functionName:"ownerOf",args:[BigInt(this.tokenId)]});if(console.log("NFT holder: ",t),String(t).toLowerCase()!==String(this.address).toLowerCase()){this.toast(`You are not the owner of NFT with ID ${this.tokenId}. Try some other ID number.`,{type:"error"}),this.waiting=!1;return}let i=await this.readData({address:this.cAddress,abi:o,functionName:"tokenURI",args:[BigInt(this.tokenId)]});i.startsWith("ipfs://")?i=i.replace("ipfs://",this.$config.public.ipfsGateway):i.startsWith("ar://")&&(i=i.replace("ar://",this.$config.public.arweaveGateway));let n;if(i.startsWith("https://"))try{n=await(await tt.get(i)).data}catch{console.log("error fetching metadata for token id: ",String(this.tokenId))}else{const e=atob(i.substring(29));n=JSON.parse(e)}n.image.startsWith("ipfs://")?n.image=n.image.replace("ipfs://",this.$config.public.ipfsGateway):n.image.startsWith("ar://")&&(n.image=n.image.replace("ar://",this.$config.public.arweaveGateway)),this.nftImage=n.image,this.nftDataLoaded=!0,this.waiting=!1}catch(t){console.error(t),this.waiting=!1}},async processRecipient(o){if(o)if(C(o))this.recipientAddress=o;else{const t=String(o).trim().toLowerCase().replace(this.$config.public.tldName,""),i=U(["function getDomainHolder(string) view returns (address)"]);try{this.recipientAddress=await this.readData({address:this.$config.public.punkTldAddress,abi:i,functionName:"getDomainHolder",args:[t]})}catch(n){console.error("Error fetching domain holder:",n),this.toast("Could not resolve domain name to address.",{type:"error"})}}},async transferNft(){if(this.waiting=!0,await this.processRecipient(this.recipientInput),!this.recipientAddress){this.toast("Could not resolve recipient address.",{type:"error"}),this.waiting=!1;return}const o=U(["function transferFrom(address from, address to, uint256 tokenId) external"]);let t;try{const i=await this.writeData({address:this.cAddress,abi:o,functionName:"transferFrom",args:[this.address,this.recipientAddress,BigInt(this.tokenId)]});t=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const n=await this.waitForTxReceipt(i);n.status==="success"?(this.toast.dismiss(t),this.toast("You have successfully transferred the NFT.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.recipientAddress=null,this.recipientInput=null,this.tokenId=null,this.nftDataLoaded=!1,document.getElementById("closeModal-"+this.componentId).click(),this.waiting=!1):(this.toast.dismiss(t),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(n))}catch(i){console.error(i);try{let n=i.message.split("Details:")[1];n=n.split("Version: viem")[0],n=n.replace(/"/g,""),n=n.replace("execution reverted:","Error:"),console.log(n),this.toast(n,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(t),this.waiting=!1}}},setup(){const{readData:o,writeData:t,waitForTxReceipt:i}=k(),{address:n,chainId:e,isActivated:a}=T(),d=_();return{readData:o,writeData:t,waitForTxReceipt:i,address:n,chainId:e,isActivated:a,toast:d}},watch:{tokenId(){this.nftDataLoaded=!1}}},_s=["aria-labelledby"],Is={class:"modal-dialog"},As={class:"modal-content"},Cs={class:"modal-header"},Us=["id"],Ts=["id"],xs={class:"modal-body"},Ns=["disabled"],Ds={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},Ms={key:1,class:"mt-4 row"},Fs={class:"col-md-4 col-6"},Ss=["src"],Bs={class:"mt-4"},Ps=["for"],Ls=["id"],Es=["disabled"],Rs={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},Os={key:3,class:"mt-4"},Ws=["for"],$s=["id"],Vs={key:0,class:"form-text",id:"basic-addon4"},js={class:"modal-footer"},Gs=["disabled"],Ys={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"};function zs(o,t,i,n,e,a){return r(),l("div",{class:"modal fade",id:"sendNftModal",tabindex:"-1","aria-labelledby":"modalLabel-"+e.componentId,"aria-hidden":"true"},[s("div",Is,[s("div",As,[s("div",Cs,[s("h1",{class:"modal-title fs-5",id:"modalLabel-"+e.componentId},"Transfer NFT",8,Us),s("button",{id:"closeModal-"+e.componentId,type:"button",class:"btn-close","data-bs-dismiss":"modal","aria-label":"Close"},null,8,Ts)]),s("div",xs,[t[10]||(t[10]=s("p",null," Send/transfer NFT to another address. ",-1)),e.tokenId?c("",!0):(r(),l("button",{key:0,onClick:t[0]||(t[0]=(...d)=>a.fetchUsersNft&&a.fetchUsersNft(...d)),type:"button",class:"btn btn-primary mt-2",disabled:e.waitingFetchNft},[e.waitingFetchNft?(r(),l("span",Ds)):c("",!0),t[6]||(t[6]=p(" Find your NFT ID ",-1))],8,Ns)),e.nftDataLoaded?(r(),l("div",Ms,[s("div",Fs,[s("img",{src:e.nftImage,class:"img-fluid",alt:"NFT image",height:"100"},null,8,Ss)])])):c("",!0),s("div",Bs,[s("label",{for:"inputTokenId-"+e.componentId,class:"form-label"},[...t[7]||(t[7]=[s("strong",null," NFT (token) ID to send: ",-1)])],8,Ps),w(s("input",{"onUpdate:modelValue":t[1]||(t[1]=d=>e.tokenId=d),type:"text",class:"form-control",id:"inputTokenId-"+e.componentId},null,8,Ls),[[v,e.tokenId]])]),!e.nftDataLoaded&&e.tokenId?(r(),l("button",{key:2,onClick:t[2]||(t[2]=(...d)=>a.loadNftData&&a.loadNftData(...d)),type:"button",class:"btn btn-primary mt-2",disabled:!e.tokenId||e.waiting},[e.waiting?(r(),l("span",Rs)):c("",!0),t[8]||(t[8]=p(" Load NFT image ",-1))],8,Es)):c("",!0),e.nftDataLoaded?(r(),l("div",Os,[s("label",{for:"inputAddress-"+e.componentId,class:"form-label"},[s("strong",null," Recipient address or "+m(o.$config.public.tldName)+" name: ",1)],8,Ws),w(s("input",{"onUpdate:modelValue":t[3]||(t[3]=d=>e.recipientInput=d),onKeyup:t[4]||(t[4]=(...d)=>a.findBlankCharacter&&a.findBlankCharacter(...d)),type:"text",class:"form-control",id:"inputAddress-"+e.componentId},null,40,$s),[[v,e.recipientInput]]),e.hasBlankCharacter?(r(),l("div",Vs,[t[9]||(t[9]=s("i",{class:"bi bi-exclamation-triangle-fill"},null,-1)),p(" This domain name contains a blank character: "+m(encodeURIComponent(e.recipientInput))+". Proceed with caution. ",1)])):c("",!0)])):c("",!0)]),s("div",js,[t[12]||(t[12]=s("button",{type:"button",class:"btn btn-secondary","data-bs-dismiss":"modal"},"Close",-1)),e.nftDataLoaded?(r(),l("button",{key:0,onClick:t[5]||(t[5]=(...d)=>a.transferNft&&a.transferNft(...d)),type:"button",class:"btn btn-primary",disabled:!e.recipientInput||!e.tokenId||e.waiting},[e.waiting?(r(),l("span",Ys)):c("",!0),t[11]||(t[11]=p(" Transfer NFT ",-1))],8,Gs)):c("",!0)])])])],8,_s)}const Hs=b(ks,[["render",zs]]),Js={name:"NftCollection",data(){return{audioUrl:null,cAuthorAddress:null,cAuthorDomain:null,cDescription:null,cImage:null,cName:null,cSupply:null,cType:0,mdAddress:null,mediaMetadataContract:!1,nativeNft:!0,priceBuyWei:null,priceSellWei:null,userTokenId:null,videoUrl:null,waitingBuy:!1,waitingData:!1,waitingMedia:!1,waitingSell:!1,youtubeUrl:null}},components:{AddImageToCollectionModal:Nt,ChangeCollectionPreviewModal:zt,ChangeDescriptionModal:le,ChangeNftTypeModal:Le,ChatFeed:pt,CollectionMediaSection:es,ConnectWalletButton:it,Image:x,RemoveImageFromCollectionModal:vs,SendNftModal:Hs,SwitchChainButton:st,WaitingToast:y},mounted(){this.$nextTick(()=>{this.cAddress&&C(this.cAddress)?this.getCollectionDetails():(this._.provides[M]||this.$route).query?.id?(console.error("Route has query param but cAddress is null or invalid"),this.toast("Invalid NFT address.",{type:"error"}),this.$router.push({path:"/"})):console.log("No valid address found in mounted")})},computed:{cAddress(){const o=(this._.provides[M]||this.$route).query?.id;return o||null},collectionExplorerLink(){return this.$config.public.blockExplorerBaseUrl+"/token/"+this.cAddress},collectionMarketplaceLink(){return this.$config.public.marketplaceNftCollectionBaseUrl+this.cAddress},getUsernameOrFullAddress(){if(this.cAuthorDomain){let o=String(this.cAuthorDomain).replace(this.$config.public.tldName,"");return O(o)+this.$config.public.tldName}else return this.cAuthorAddress},getUsernameOrShortAddress(){if(this.cAuthorAddress)if(this.cAuthorDomain){let o=String(this.cAuthorDomain).replace(this.$config.public.tldName,"");return O(o)+this.$config.public.tldName}else return this.shortenAddress(this.cAuthorAddress);return null},isCurrentAddressOwner(){return this.cAuthorAddress&&this.address?String(this.cAuthorAddress).toLowerCase()===String(this.address).toLowerCase():!1},isSupportedChain(){return this.chainId===this.$config.public.supportedChainId}},methods:{getDomainName:et,async buyNft(){this.waitingBuy=!0;const o=[{name:"getBurnPrice",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"getMintPrice",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"mint",type:"function",stateMutability:"payable",inputs:[{name:"to",type:"address"}],outputs:[{type:"uint256"}]},{name:"tokenOfOwnerByIndex",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"index",type:"uint256"}],outputs:[{type:"uint256"}]},{name:"totalSupply",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]}];try{const i=await this.readData({address:this.cAddress,abi:o,functionName:"getMintPrice"});this.priceBuyWei=i}catch(i){console.error("Failed to get mint price:",i),this.waitingBuy=!1,this.toast("Failed to get mint price.",{type:"error"});return}let t;try{const i=await this.writeData({address:this.cAddress,abi:o,functionName:"mint",args:[this.address],value:BigInt(this.priceBuyWei)});if(t=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),(await this.waitForTxReceipt(i)).status==="success"){this.toast.dismiss(t),this.toast("You have successfully bought the NFT! Congrats!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});try{const[e,a]=await Promise.all([this.readData({address:this.cAddress,abi:o,functionName:"getMintPrice"}),this.readData({address:this.cAddress,abi:o,functionName:"getBurnPrice"})]);this.priceBuyWei=e,this.priceSellWei=a;try{this.userTokenId=Number(await this.readData({address:this.cAddress,abi:o,functionName:"tokenOfOwnerByIndex",args:[this.address,BigInt(0)]}))}catch{this.userTokenId=null}this.cSupply=await this.readData({address:this.cAddress,abi:o,functionName:"totalSupply"})}catch(e){console.error("Failed to update data after purchase:",e)}this.waitingBuy=!1}else this.toast.dismiss(t),this.waitingBuy=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()})}catch(i){console.error(i);try{let n=i.message.split("Details:")[1];n=n.split("Version: viem")[0],n=n.replace(/"/g,""),n=n.replace("execution reverted:","Error:"),console.log(n),this.toast(n,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingBuy=!1}finally{this.toast.dismiss(t),this.waitingBuy=!1}},async fetchUserDomain(){if(this.cAuthorAddress){const o=await this.getDomainName(this.cAuthorAddress);o&&(this.cAuthorDomain=o,ut(window,this.cAuthorAddress,o+this.$config.public.tldName))}},formatPrice(o){if(o===null)return null;const t=Number(ct(o));return t>100?t.toFixed(0):t>1?t.toFixed(2):t>.1?t.toFixed(4):t>.01?t.toFixed(5):t>.001?t.toFixed(6):t>1e-4?t.toFixed(7):t>1e-5?t.toFixed(8):t>1e-6?t.toFixed(9):t},async getCollectionDetails(o=!1){if(!this.cAddress||!C(this.cAddress)){console.warn("cAddress is null or invalid:",this.cAddress,"cannot fetch collection details"),this.waitingData=!1;return}this.waitingData=!0;let t=dt(window,this.cAddress);o&&(t=null);const i=[{name:"getBurnPrice",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"getMintPrice",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"metadataAddress",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"address"}]},{name:"name",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"string"}]},{name:"owner",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"address"}]},{name:"tokenOfOwnerByIndex",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"index",type:"uint256"}],outputs:[{type:"uint256"}]},{name:"totalSupply",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]}];if(t?.mdAddress)this.mdAddress=t.mdAddress;else try{this.mdAddress=await this.readData({address:this.cAddress,abi:i,functionName:"metadataAddress"})}catch{return this.getCollectionDetailsFallback()}const n=[{name:"getCollectionDescription",type:"function",stateMutability:"view",inputs:[{name:"nftAddress",type:"address"}],outputs:[{type:"string"}]},{name:"getCollectionMetadataType",type:"function",stateMutability:"view",inputs:[{name:"nftAddress_",type:"address"}],outputs:[{type:"uint256"}]},{name:"getCollectionName",type:"function",stateMutability:"view",inputs:[{name:"nftAddress_",type:"address"}],outputs:[{type:"string"}]},{name:"getCollectionPreviewImage",type:"function",stateMutability:"view",inputs:[{name:"nftAddress",type:"address"}],outputs:[{type:"string"}]},{name:"getMetadata",type:"function",stateMutability:"view",inputs:[{name:"nftAddress_",type:"address"},{name:"tokenId_",type:"uint256"}],outputs:[{type:"string"}]},{name:"mdContractType",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"string"}]}];try{const[u,f]=await Promise.all([this.readData({address:this.cAddress,abi:i,functionName:"getMintPrice"}),this.readData({address:this.cAddress,abi:i,functionName:"getBurnPrice"})]);this.priceBuyWei=u,this.priceSellWei=f}catch{return this.getCollectionDetailsFallback()}t?.image?this.cImage=t.image:this.cImage=await this.readData({address:this.mdAddress,abi:n,functionName:"getCollectionPreviewImage",args:[this.cAddress]});const e=R(this.cImage);e&&(this.cImage=e),t?.description&&t.description!==""&&t.description!==null?this.cDescription=t.description:this.cDescription=await this.readData({address:this.mdAddress,abi:n,functionName:"getCollectionDescription",args:[this.cAddress]}),t?.type>=0?this.cType=t.type:this.cType=Number(await this.readData({address:this.mdAddress,abi:n,functionName:"getCollectionMetadataType",args:[this.cAddress]})),t?.name?this.cName=t.name:this.cName=await this.readData({address:this.cAddress,abi:i,functionName:"name"});try{this.address&&C(this.address)?this.userTokenId=await this.readData({address:this.cAddress,abi:i,functionName:"tokenOfOwnerByIndex",args:[this.address,BigInt(0)]}):this.userTokenId=null}catch(u){console.warn("Error getting user token ID:",u),this.userTokenId=null}this.waitingData=!1,this.cSupply=await this.readData({address:this.cAddress,abi:i,functionName:"totalSupply"}),t?.authorAddress?(this.cAuthorAddress=t.authorAddress,this.cAuthorDomain=t.authorDomain):this.cAuthorAddress=await this.readData({address:this.cAddress,abi:i,functionName:"owner"}),this.cAuthorDomain=E(window,this.cAuthorAddress),this.cAuthorDomain||this.fetchUserDomain(),t={address:this.cAddress,authorAddress:this.cAuthorAddress,authorDomain:this.cAuthorDomain,description:this.cDescription,image:this.cImage,mdAddress:this.mdAddress,name:this.cName,type:this.cType},L(window,this.cAddress,t),this.waitingMedia=!0;let a=this.userTokenId?this.userTokenId:1,d=await this.readData({address:this.mdAddress,abi:n,functionName:"getMetadata",args:[this.cAddress,BigInt(a)]});if(String(d).startsWith("http")&&(d=R(d)),String(d).startsWith("ipfs://")&&(d=String(d).replace("ipfs://",this.$config.public.ipfsGateway)),String(d).startsWith("http"))try{d=(await this.$axios.get(d)).data}catch(u){if(console.error(u),d.startsWith(this.$config.public.ipfsGateway))try{d=String(d).replace(this.$config.public.ipfsGateway,this.$config.public.ipfsGateway2),d=(await this.$axios.get(d)).data}catch(f){console.error(f);return}}else d=atob(String(d).replace("data:application/json;base64,",""));if(typeof d!="object"&&typeof d=="string"&&(d=JSON.parse(d)),d?.audio_url&&(this.audioUrl=d.audio_url),d?.animation_url&&(this.videoUrl=d.animation_url),d?.youtube_url&&(this.youtubeUrl=d.youtube_url),this.waitingMedia=!1,this.cType==0&&this.isCurrentAddressOwner)try{await this.readData({address:this.mdAddress,abi:n,functionName:"mdContractType"})=="media"&&(this.mediaMetadataContract=!0)}catch{console.log("Not media metadata contract.")}},async getCollectionDetailsFallback(){if(!this.cAddress){console.warn("cAddress is null, cannot fetch collection details via fallback");return}this.nativeNft=!1;const o=[{name:"name",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"string"}]},{name:"owner",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"address"}]},{name:"tokenURI",type:"function",stateMutability:"view",inputs:[{name:"tokenId",type:"uint256"}],outputs:[{type:"string"}]},{name:"totalSupply",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"uri",type:"function",stateMutability:"view",inputs:[{name:"tokenId",type:"uint256"}],outputs:[{type:"string"}]}];this.cName=await this.readData({address:this.cAddress,abi:o,functionName:"name"});let t;try{t=await this.readData({address:this.cAddress,abi:o,functionName:"tokenURI",args:[BigInt(1)]})}catch{t=await this.readData({address:this.cAddress,abi:o,functionName:"uri",args:[BigInt(1)]})}if(t.startsWith("data:application/json;")){const i=JSON.parse(atob(t.replace("data:application/json;base64,","")));!this.cName&&i?.name&&(this.cName=i.name.replace("#1","")),i?.description&&(this.cDescription=i.description),i?.image&&(this.cImage=i.image),i?.external_url&&(this.cExternalUrl=i.external_url),i?.audio_url&&(this.audioUrl=i.audio_url),i?.animation_url&&(this.videoUrl=i.animation_url),i?.youtube_url&&(this.youtubeUrl=i.youtube_url)}else try{const n=(await this.$axios.get(t)).data;!this.cName&&n?.name&&(this.cName=n.name.replace("#1","")),n?.description&&(this.cDescription=n.description),n?.image&&(this.cImage=n.image),n?.external_url&&(this.cExternalUrl=n.external_url),n?.audio_url&&(this.audioUrl=n.audio_url),n?.animation_url&&(this.videoUrl=n.animation_url),n?.youtube_url&&(this.youtubeUrl=n.youtube_url)}catch(i){console.error(i)}try{this.cSupply=await this.readData({address:this.cAddress,abi:o,functionName:"totalSupply"})}catch{console.log("No totalSupply function in the contract.")}try{this.cAuthorAddress=await this.readData({address:this.cAddress,abi:o,functionName:"owner"}),this.cAuthorDomain=E(window,this.cAuthorAddress),this.cAuthorDomain||this.fetchUserDomain()}catch{console.log("No owner variable in the contract.")}this.waitingData=!1},saveCollection(o){o?.type&&(this.cType=o.type),o?.description&&(this.cDescription=o.description),o?.image&&(this.cImage=o.image);const t={address:this.cAddress,authorAddress:this.cAuthorAddress,authorDomain:this.cAuthorDomain,description:this.cDescription,image:this.cImage,mdAddress:this.mdAddress,name:this.cName,type:this.cType};L(window,this.cAddress,t)},async sellNft(){this.waitingSell=!0;const o=[{name:"getBurnPrice",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"getMintPrice",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]},{name:"burn",type:"function",stateMutability:"nonpayable",inputs:[{name:"tokenId",type:"uint256"}],outputs:[{type:"uint256"}]},{name:"tokenOfOwnerByIndex",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"index",type:"uint256"}],outputs:[{type:"uint256"}]},{name:"totalSupply",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256"}]}];let t;try{const i=await this.writeData({address:this.cAddress,abi:o,functionName:"burn",args:[BigInt(this.userTokenId)]});t=this.toast({component:y,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const n=await this.waitForTxReceipt(i);if(n.status==="success"){this.toast.dismiss(t),this.toast("You have dumped the NFT.",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});try{const[e,a]=await Promise.all([this.readData({address:this.cAddress,abi:o,functionName:"getMintPrice"}),this.readData({address:this.cAddress,abi:o,functionName:"getBurnPrice"})]);this.priceBuyWei=e,this.priceSellWei=a;try{this.address&&(this.userTokenId=await this.readData({address:this.cAddress,abi:o,functionName:"tokenOfOwnerByIndex",args:[this.address,BigInt(0)]}))}catch{this.userTokenId=null}this.cSupply=await this.readData({address:this.cAddress,abi:o,functionName:"totalSupply"})}catch(e){console.error("Failed to update data after sale:",e)}this.waitingSell=!1}else this.toast.dismiss(t),this.waitingSell=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(n)}catch(i){console.error(i);try{let n=i.message.split("Details:")[1];n=n.split("Version: viem")[0],n=n.replace(/"/g,""),n=n.replace("execution reverted:","Error:"),console.log(n),this.toast(n,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingSell=!1}finally{this.toast.dismiss(t),this.waitingSell=!1}}},setup(){const{readData:o,writeData:t,waitForTxReceipt:i}=k(),{address:n,chainId:e,isActivated:a,shortenAddress:d}=T(),u=_();return{address:n,chainId:e,isActivated:a,shortenAddress:d,readData:o,writeData:t,waitForTxReceipt:i,toast:u}},watch:{address(o,t){t&&t!==o&&!this.waitingData&&this.getCollectionDetails()},chainId(o,t){o==this.$config.public.supportedChainId&&t!==o&&!this.waitingData&&this.getCollectionDetails()},cAddress(o,t){if(o&&(this._.provides[M]||this.$route).path==="/nft/collection"){if(!C(o))return this.toast("Invalid NFT address.",{type:"error"}),this.$router.push({path:"/"});this.waitingData||this.getCollectionDetails()}}}},qs={class:"card border"},Ks={class:"card-body"},Xs={class:"fs-3"},Qs={key:0,class:"mb-3 mt-3"},Zs={key:1,class:"mb-3 mt-3"},ti={key:2,class:"d-flex justify-content-center mb-3"},ei={class:"row"},si={class:"col-md-5 text-center mb-3"},ii={key:1,class:"dropdown mt-3"},oi={class:"dropdown-menu"},ni={key:0},ai={key:1},ri={key:2},li={key:3},di={key:4},ci={key:5},ui={class:"col-md-7"},pi={class:"mt-1 mb-4 muted-text",style:{"font-size":"14px"}},mi={class:"me-4"},hi={key:0,class:"me-4"},fi={class:"me-4"},gi={class:"me-4"},yi=["href"],bi={key:0},wi={key:1,class:"dropdown"},vi={class:"dropdown-menu dropdown-menu-end"},ki=["href"],_i=["href"],Ii={key:0,class:"row mb-3"},Ai={key:0,class:"d-grid gap-2 col"},Ci={key:1,class:"d-grid gap-2 col"},Ui=["disabled"],Ti={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},xi={key:2,class:"d-grid gap-2 col"},Ni=["disabled"],Di={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},Mi={key:1},Fi={key:0,class:"card border mt-3 scroll-500"};function Si(o,t,i,n,e,a){const d=ot,u=nt,f=at,S=g("Image"),V=rt,j=g("ConnectWalletButton"),G=g("SwitchChainButton"),Y=g("CollectionMediaSection"),z=g("ChatFeed"),H=g("AddImageToCollectionModal"),J=g("ChangeCollectionPreviewModal"),q=g("ChangeDescriptionModal"),K=g("ChangeNftTypeModal"),X=g("RemoveImageFromCollectionModal"),Q=g("SendNftModal");return r(),l(F,null,[h(f,null,{default:D(()=>[h(d,null,{default:D(()=>[p("NFT Collection Details | "+m(o.$config.public.projectMetadataTitle),1)]),_:1}),h(u,{property:"og:title",content:"NFT Collection Details | "+o.$config.public.projectMetadataTitle},null,8,["content"]),h(u,{name:"description",content:"Check this NFT collection on "+o.$config.public.projectName+"!"},null,8,["content"]),h(u,{property:"og:image",content:o.$config.public.projectUrl+o.$config.public.previewImageNftCollection},null,8,["content"]),h(u,{property:"og:description",content:"Check this NFT collection on "+o.$config.public.projectName+"!"},null,8,["content"]),h(u,{name:"twitter:image",content:o.$config.public.projectUrl+o.$config.public.previewImageNftCollection},null,8,["content"]),h(u,{name:"twitter:description",content:"Check this NFT collection on "+o.$config.public.projectName+"!"},null,8,["content"])]),_:1}),s("div",qs,[s("div",Ks,[s("p",Xs,[s("i",{onClick:t[0]||(t[0]=A=>o.$router.push({path:"/nft"})),class:"bi bi-arrow-left-circle cursor-pointer"})]),e.cName?c("",!0):(r(),l("h3",Qs,"NFT Collection Details")),e.cName?(r(),l("h3",Zs,m(e.cName),1)):c("",!0),e.waitingData?(r(),l("div",ti,[...t[4]||(t[4]=[s("span",{class:"spinner-border spinner-border-lg",role:"status","aria-hidden":"true"},null,-1)])])):c("",!0),s("div",ei,[s("div",si,[e.cImage?(r(),I(S,{url:e.cImage,cls:"img-fluid img-thumbnail rounded col-12",alt:e.cName,key:e.cImage},null,8,["url","alt"])):c("",!0),e.nativeNft?(r(),l("div",ii,[t[11]||(t[11]=s("button",{class:"btn btn-outline-primary btn-sm dropdown-toggle",type:"button","data-bs-toggle":"dropdown","aria-expanded":"false"}," Actions ",-1)),s("ul",oi,[a.isCurrentAddressOwner?(r(),l("li",ni,[...t[5]||(t[5]=[s("span",{class:"dropdown-item cursor-pointer","data-bs-toggle":"modal","data-bs-target":"#changeDescriptionModal"}," Change description ",-1)])])):c("",!0),a.isCurrentAddressOwner?(r(),l("li",ai,[...t[6]||(t[6]=[s("span",{class:"dropdown-item cursor-pointer","data-bs-toggle":"modal","data-bs-target":"#changeCollectionPreviewModal"}," Change collection preview image ",-1)])])):c("",!0),a.isCurrentAddressOwner&&e.cType==0?(r(),l("li",ri,[...t[7]||(t[7]=[s("span",{class:"dropdown-item cursor-pointer","data-bs-toggle":"modal","data-bs-target":"#addImageToCollectionModal"}," Add additional image to collection ",-1)])])):c("",!0),a.isCurrentAddressOwner&&e.cType==0?(r(),l("li",li,[...t[8]||(t[8]=[s("span",{class:"dropdown-item cursor-pointer","data-bs-toggle":"modal","data-bs-target":"#removeImageFromCollectionModal"}," Remove image from collection ",-1)])])):c("",!0),a.isCurrentAddressOwner?(r(),l("li",di,[...t[9]||(t[9]=[s("span",{class:"dropdown-item cursor-pointer","data-bs-toggle":"modal","data-bs-target":"#changeNftTypeModal"}," Change collection type ",-1)])])):c("",!0),n.address?(r(),l("li",ci,[...t[10]||(t[10]=[s("span",{class:"dropdown-item cursor-pointer","data-bs-toggle":"modal","data-bs-target":"#sendNftModal"}," Send your NFT to another address ",-1)])])):c("",!0),s("li",null,[s("span",{class:"dropdown-item cursor-pointer",onClick:t[1]||(t[1]=A=>a.getCollectionDetails(!0))},"Refresh metadata")])])])):c("",!0)]),s("div",ui,[s("div",pi,[s("p",mi,[t[12]||(t[12]=s("i",{class:"bi bi-file-earmark-text-fill me-1"},null,-1)),p(" "+m(e.cDescription),1)]),e.nativeNft?(r(),l("p",hi,[t[13]||(t[13]=s("i",{class:"bi bi-coin me-1"},null,-1)),p(" Buy/Sell price: "+m(a.formatPrice(e.priceBuyWei))+" "+m(o.$config.public.tokenSymbol)+" / "+m(a.formatPrice(e.priceSellWei))+" "+m(o.$config.public.tokenSymbol),1)])):c("",!0),s("p",fi,[t[14]||(t[14]=s("i",{class:"bi bi-file-earmark-binary me-1"},null,-1)),p(" "+m(e.cSupply)+" NFTs minted ",1)]),s("p",gi,[t[16]||(t[16]=s("i",{class:"bi bi-box-arrow-up-right me-2"},null,-1)),s("a",{href:o.$config.public.blockExplorerBaseUrl+"/address/"+a.cAddress,target:"_blank",style:{"text-decoration":"none"}},m(n.shortenAddress(a.cAddress)),9,yi),a.getUsernameOrShortAddress?(r(),l("span",bi,[t[15]||(t[15]=p(" by ",-1)),h(V,{to:"/profile/?id="+String(a.getUsernameOrFullAddress)},{default:D(()=>[p(m(a.getUsernameOrShortAddress),1)]),_:1},8,["to"])])):c("",!0)]),a.cAddress?(r(),l("div",wi,[t[19]||(t[19]=s("i",{class:"bi bi-box-arrow-up-right me-2"},null,-1)),t[20]||(t[20]=s("span",{class:"dropdown-toggle","data-bs-toggle":"dropdown",role:"button","aria-haspopup":"true","aria-expanded":"false"},[s("span",null,"See all NFTs in the collection")],-1)),s("div",vi,[s("a",{class:"dropdown-item cursor-pointer",target:"_blank",href:a.collectionMarketplaceLink},[...t[17]||(t[17]=[s("i",{class:"bi bi-box-arrow-up-right me-1"},null,-1),p(" See NFTs on NFT marketplace ",-1)])],8,ki),s("a",{class:"dropdown-item cursor-pointer",target:"_blank",href:a.collectionExplorerLink},[...t[18]||(t[18]=[s("i",{class:"bi bi-box-arrow-up-right me-1"},null,-1),p(" See NFTs on block explorer ",-1)])],8,_i)])])):c("",!0)]),e.nativeNft?(r(),l("div",Ii,[!n.isActivated||!a.isSupportedChain?(r(),l("div",Ai,[n.isActivated?c("",!0):(r(),I(j,{key:0,class:"btn-primary",btnText:"Connect wallet"})),n.isActivated&&!a.isSupportedChain?(r(),I(G,{key:1})):c("",!0)])):c("",!0),n.isActivated&&a.isSupportedChain?(r(),l("div",Ci,[s("button",{onClick:t[2]||(t[2]=(...A)=>a.buyNft&&a.buyNft(...A)),class:"btn btn-primary",type:"button",disabled:e.waitingData||e.waitingBuy},[e.waitingBuy?(r(),l("span",Ti)):c("",!0),p(" Buy for "+m(a.formatPrice(e.priceBuyWei))+" "+m(o.$config.public.tokenSymbol),1)],8,Ui)])):c("",!0),n.isActivated&&a.isSupportedChain?(r(),l("div",xi,[s("button",{onClick:t[3]||(t[3]=(...A)=>a.sellNft&&a.sellNft(...A)),class:"btn btn-primary",type:"button",disabled:e.waitingData||e.waitingSell||!e.userTokenId||e.priceSellWei==0},[e.waitingSell?(r(),l("span",Di)):c("",!0),p(" Sell for "+m(a.formatPrice(e.priceSellWei))+" "+m(o.$config.public.tokenSymbol),1)],8,Ni)])):c("",!0)])):c("",!0),n.isActivated&&a.isSupportedChain&&e.nativeNft?(r(),l("small",Mi,[s("em",null," (Price may still change after pressing the button, so make sure to check the "+m(o.$config.public.tokenSymbol)+" amount in wallet.) ",1)])):c("",!0)])])])]),!e.userTokenId&&e.nativeNft?(r(),l("div",Fi,[...t[21]||(t[21]=[lt('<div class="card-body"><h5 class="mb-2 mt-3 text-center">Buy an NFT to see the chat</h5><div class="d-flex justify-content-center"><div class="col-12 col-lg-8"><p class="text-break text-center mt-3 mb-4"> This NFT&#39;s chat is open only for NFT holders. Buy an NFT to see the chat and talk with the NFT creator and other NFT holders. </p></div></div></div>',1)])])):c("",!0),e.userTokenId||a.isCurrentAddressOwner?(r(),l("div",{key:e.userTokenId},[e.audioUrl||e.videoUrl||e.youtubeUrl?(r(),I(Y,{key:0,audioUrl:e.audioUrl,videoUrl:e.videoUrl,youtubeUrl:e.youtubeUrl},null,8,["audioUrl","videoUrl","youtubeUrl"])):c("",!0),h(z,{hideCommentBox:!1,class:"mt-3 scroll-500",chatContext:o.$config.public.chat.contexts.nftLaunchpad,mainItemId:a.cAddress},null,8,["chatContext","mainItemId"])])):c("",!0),h(H,{cAddress:a.cAddress,mdAddress:e.mdAddress},null,8,["cAddress","mdAddress"]),h(J,{cAddress:a.cAddress,mdAddress:e.mdAddress,onSaveCollection:a.saveCollection},null,8,["cAddress","mdAddress","onSaveCollection"]),h(q,{cAddress:a.cAddress,cDescription:e.cDescription,mdAddress:e.mdAddress,onSaveCollection:a.saveCollection},null,8,["cAddress","cDescription","mdAddress","onSaveCollection"]),h(K,{mdAddress:e.mdAddress,cType:e.cType,cAddress:a.cAddress,onSaveCollection:a.saveCollection},null,8,["mdAddress","cType","cAddress","onSaveCollection"]),h(X,{mdAddress:e.mdAddress,cAddress:a.cAddress},null,8,["mdAddress","cAddress"]),n.address?(r(),I(Q,{key:2,address:n.address,cAddress:a.cAddress},null,8,["address","cAddress"])):c("",!0)],64)}const Oi=b(Js,[["render",Si]]);export{Oi as default};
