import{_ as h,x as k,y as v,z as _,i as C,l as A,W as T,m as $,j as D,n as N,c as d,o as p,a as i,t as l,p as x,v as W,g as m,d as f,r as g,b as r,w as y,T as P,M as R,H as j,G as w,F as S}from"#entry";const U={name:"AirdropDomainHolders",data(){return{domainName:null,waiting:!1,domainChatRewardWei:0,fetchingData:!1}},computed:{domainChatReward(){return Math.floor(Number(N(this.domainChatRewardWei)))}},mounted(){this.address&&this.fetchAirdropData()},methods:{async fetchAirdropData(){this.fetchingData=!0;try{const t=await D({address:this.$config.public.airdropClaimDomainsAddress,abi:[{name:"chatReward",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256",name:""}]}],functionName:"chatReward"});t&&(this.domainChatRewardWei=t)}catch(t){console.error("Error fetching airdrop data:",t)}finally{this.fetchingData=!1}},async claim(){this.waiting=!0;const t=this.domainName.replace(this.$config.public.tldName,"").trim().toLowerCase();console.log(t);const e={address:this.$config.public.airdropClaimDomainsAddress,abi:[{name:"claim",type:"function",inputs:[{name:"_domainName",type:"string"}],outputs:[],stateMutability:"nonpayable"}]};let s;try{const a=await A({...e,functionName:"claim",args:[t]});s=this.toast({component:T,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+a,"_blank").focus()});const o=await $(a);o.status==="success"?(this.toast.dismiss(s),this.toast("Airdrop for "+t+this.$config.public.tldName+" has been successfully claimed!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+a,"_blank").focus()}),this.addToChatTokenBalanceWei(this.domainChatRewardWei),this.waiting=!1):(this.toast.dismiss(s),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+a,"_blank").focus()}),console.log(o))}catch(a){console.error(a);try{let o=a.message.split("Details:")[1];o=o.split("Version: viem")[0],o=o.replace(/"/g,""),o=o.replace("execution reverted:","Error:"),o=o.replace("ChatTokenClaimDomains: ",""),console.log(o),this.toast(o,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(s),this.waiting=!1}}},setup(){const t=k(),{address:e}=v({config:t}),{addToChatTokenBalanceWei:s}=_(),a=C();return{addToChatTokenBalanceWei:s,address:e,toast:a}},watch:{address(){this.address&&this.fetchAirdropData()}}},V={class:"text-center"},H={class:"input-group mt-5"},I={class:"btn btn-primary",type:"button","aria-expanded":"false"},F={class:"d-flex justify-content-center mt-4 mb-4"},z=["disabled"],G={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},L={class:"text-center"};function Y(t,e,s,a,o,n){return p(),d("div",null,[i("p",V," Claim "+l(n.domainChatReward)+" "+l(t.$config.public.chatTokenSymbol)+" airdrop for each "+l(t.$config.public.tldName)+" domain that you hold. ",1),i("div",H,[x(i("input",{"onUpdate:modelValue":e[0]||(e[0]=c=>o.domainName=c),type:"text",placeholder:"Enter domain name",class:"form-control"},null,512),[[W,o.domainName]]),i("button",I,l(t.$config.public.tldName),1)]),i("div",F,[i("button",{disabled:o.waiting||!o.domainName,class:"btn btn-outline-primary",type:"button",onClick:e[1]||(e[1]=(...c)=>n.claim&&n.claim(...c))},[o.waiting?(p(),d("span",G)):m("",!0),e[2]||(e[2]=f(" Claim ",-1))],8,z)]),e[3]||(e[3]=i("hr",null,null,-1)),i("p",L,[i("small",null," Note that someone else can claim tokens (for a given domain) for you and save you on gas fees. You will still receive the same amount of "+l(t.$config.public.chatTokenSymbol)+" tokens as if you've made the claim yourself. ",1)])])}const q=h(U,[["render",Y]]),J={name:"AirdropActivityPoints",data(){return{waiting:!1,loadingData:!1,airdropApWei:0}},computed:{airdropAp(){return this.airdropApWei?Math.round(Number(N(this.airdropApWei))):0}},mounted(){this.address&&this.fetchAirdropData()},methods:{async fetchAirdropData(){this.loadingData=!0;try{const t=await D({address:this.$config.public.airdropApAddress,abi:[{name:"claimPreview",type:"function",stateMutability:"view",inputs:[{type:"address",name:"_address"}],outputs:[{type:"uint256",name:""}]}],functionName:"claimPreview",args:[this.address]});t&&(this.airdropApWei=t)}catch(t){console.error("Error fetching airdrop data:",t)}finally{this.loadingData=!1}},async claim(){this.waiting=!0;const t={address:this.$config.public.airdropApAddress,abi:[{name:"claim",type:"function",stateMutability:"nonpayable",inputs:[],outputs:[]}],functionName:"claim",args:[]};let e;try{const s=await A(t);e=this.toast({component:T,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()});const a=await $(s);a.status==="success"?(this.toast.dismiss(e),this.addToChatTokenBalanceWei(this.airdropApWei),this.airdropApWei=0,this.toast("Airdrop for past APs has been successfully claimed!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()}),this.waiting=!1):(this.toast.dismiss(e),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()}),console.log(a))}catch(s){console.error(s);try{let a=s.message.split("Details:")[1];a=a.split("Version: viem")[0],a=a.replace(/"/g,""),a=a.replace("execution reverted:","Error:"),a=a.replace("ChatTokenClaimActivityPoints: ",""),console.log(a),this.toast(a,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(e),this.waiting=!1}}},setup(){const t=k(),{address:e}=v({config:t}),{addToChatTokenBalanceWei:s}=_(),a=C();return{addToChatTokenBalanceWei:s,address:e,toast:a}},watch:{address(){this.address&&this.fetchAirdropData()}}},K={class:"text-center"},O={class:"input-group mt-5"},Q={class:"btn btn-primary",type:"button","aria-expanded":"false"},X={class:"d-flex justify-content-center mt-4 mb-4"},Z=["disabled"],tt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},et={class:"text-center"};function it(t,e,s,a,o,n){return p(),d("div",null,[i("p",K,"Claim "+l(n.airdropAp)+" "+l(t.$config.public.chatTokenSymbol)+" airdrop for past activity points.",1),i("div",O,[x(i("input",{"onUpdate:modelValue":e[0]||(e[0]=c=>n.airdropAp=c),type:"text",class:"form-control",disabled:""},null,512),[[W,n.airdropAp]]),i("button",Q,l(t.$config.public.chatTokenSymbol),1)]),i("div",X,[i("button",{disabled:o.waiting||o.loadingData||n.airdropAp==0||n.airdropAp==null,class:"btn btn-outline-primary",type:"button",onClick:e[1]||(e[1]=(...c)=>n.claim&&n.claim(...c))},[o.loadingData||o.waiting?(p(),d("span",tt)):m("",!0),e[2]||(e[2]=f(" Claim ",-1))],8,Z)]),e[3]||(e[3]=i("hr",null,null,-1)),i("p",et,[i("small",null," If you're not eligible, or have already claimed the airdrop, the amount of "+l(t.$config.public.chatTokenSymbol)+" tokens shown is 0. ",1)])])}const ot=h(J,[["render",it]]),at={name:"Airdrop",data(){return{currentTab:"domain"}},components:{AirdropDomainHolders:q,AirdropActivityPoints:ot},mounted(){this.currentTab=localStorage.getItem("airdropCurrentTab"),this.currentTab||(this.currentTab="domain")},methods:{changeCurrentTab(t){this.currentTab=t,localStorage.setItem("airdropCurrentTab",t)}}},st={class:"card border scroll-500"},nt={class:"card-body"},rt={class:"fs-3"},lt={class:"nav nav-tabs nav-fill"},ct={class:"nav-item"},dt={class:"nav-item"},pt={class:"tab-content mt-3"},ut={key:0},mt={class:"d-flex justify-content-center mt-5"},ht={class:"col-12 col-lg-8"},ft={key:1},bt={class:"d-flex justify-content-center mt-5"},gt={class:"col-12 col-lg-8"};function yt(t,e,s,a,o,n){const c=P,u=R,B=j,E=g("AirdropDomainHolders"),M=g("AirdropActivityPoints");return p(),d(S,null,[r(B,null,{default:y(()=>[r(c,null,{default:y(()=>[f("Airdrop | "+l(t.$config.public.projectMetadataTitle),1)]),_:1}),r(u,{property:"og:title",content:"Airdrop"}),r(u,{name:"description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"]),r(u,{property:"og:image",content:t.$config.public.projectUrl+t.$config.public.previewImageAirdrop},null,8,["content"]),r(u,{property:"og:description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"]),r(u,{name:"twitter:image",content:t.$config.public.projectUrl+t.$config.public.previewImageAirdrop},null,8,["content"]),r(u,{name:"twitter:description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"])]),_:1}),i("div",st,[i("div",nt,[i("p",rt,[i("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:e[0]||(e[0]=b=>t.$router.back())})]),i("ul",lt,[i("li",ct,[i("button",{class:w(["nav-link",o.currentTab==="domain"?"active":""]),onClick:e[1]||(e[1]=b=>n.changeCurrentTab("domain"))}," Domain holders ",2)]),i("li",dt,[i("button",{class:w(["nav-link",o.currentTab==="ap"?"active":""]),onClick:e[2]||(e[2]=b=>n.changeCurrentTab("ap"))}," Activity Points ",2)])]),i("div",pt,[o.currentTab==="domain"?(p(),d("div",ut,[i("div",mt,[i("div",ht,[r(E)])])])):m("",!0),o.currentTab==="ap"?(p(),d("div",ft,[i("div",bt,[i("div",gt,[r(M)])])])):m("",!0)])])])],64)}const kt=h(at,[["render",yt]]);export{kt as default};
