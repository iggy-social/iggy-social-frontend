import{_ as h,j as k,m as v,i as _,W as C,n as T,c as d,o as p,a,t as l,p as A,v as $,g as m,d as f,r as g,b as r,w as y,T as W,M as R,H as B,B as w,F as E}from"#entry";const M={name:"AirdropDomainHolders",data(){return{domainName:null,waiting:!1,domainChatRewardWei:0,fetchingData:!1}},computed:{domainChatReward(){return Math.floor(Number(T(this.domainChatRewardWei)))}},mounted(){this.address&&this.fetchAirdropData()},methods:{async fetchAirdropData(){this.fetchingData=!0;try{const t=await this.readData({address:this.$config.public.airdropClaimDomainsAddress,abi:[{name:"chatReward",type:"function",stateMutability:"view",inputs:[],outputs:[{type:"uint256",name:""}]}],functionName:"chatReward"});t&&(this.domainChatRewardWei=t)}catch(t){console.error("Error fetching airdrop data:",t)}finally{this.fetchingData=!1}},async claim(){this.waiting=!0;const t=this.domainName.replace(this.$config.public.tldName,"").trim().toLowerCase();console.log(t);const e={address:this.$config.public.airdropClaimDomainsAddress,abi:[{name:"claim",type:"function",inputs:[{name:"_domainName",type:"string"}],outputs:[],stateMutability:"nonpayable"}]};let s;try{const o=await this.writeData({...e,functionName:"claim",args:[t]});s=this.toast({component:C,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+o,"_blank").focus()});const i=await this.waitForTxReceipt(o);i.status==="success"?(this.toast.dismiss(s),this.toast("Airdrop for "+t+this.$config.public.tldName+" has been successfully claimed!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+o,"_blank").focus()}),this.addToChatTokenBalanceWei(this.domainChatRewardWei),this.waiting=!1):(this.toast.dismiss(s),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+o,"_blank").focus()}),console.log(i))}catch(o){console.error(o);try{let i=o.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),i=i.replace("ChatTokenClaimDomains: ",""),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(s),this.waiting=!1}}},setup(){const{readData:t,writeData:e,waitForTxReceipt:s}=k(),{addToChatTokenBalanceWei:o,address:i}=v(),n=_();return{readData:t,writeData:e,waitForTxReceipt:s,addToChatTokenBalanceWei:o,address:i,toast:n}},watch:{address(){this.address&&this.fetchAirdropData()}}},P={class:"text-center"},j={class:"input-group mt-5"},S={class:"btn btn-primary",type:"button","aria-expanded":"false"},U={class:"d-flex justify-content-center mt-4 mb-4"},V=["disabled"],H={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},F={class:"text-center"};function I(t,e,s,o,i,n){return p(),d("div",null,[a("p",P," Claim "+l(n.domainChatReward)+" "+l(t.$config.public.chatTokenSymbol)+" airdrop for each "+l(t.$config.public.tldName)+" domain that you hold. ",1),a("div",j,[A(a("input",{"onUpdate:modelValue":e[0]||(e[0]=c=>i.domainName=c),type:"text",placeholder:"Enter domain name",class:"form-control"},null,512),[[$,i.domainName]]),a("button",S,l(t.$config.public.tldName),1)]),a("div",U,[a("button",{disabled:i.waiting||!i.domainName,class:"btn btn-outline-primary",type:"button",onClick:e[1]||(e[1]=(...c)=>n.claim&&n.claim(...c))},[i.waiting?(p(),d("span",H)):m("",!0),e[2]||(e[2]=f(" Claim ",-1))],8,V)]),e[3]||(e[3]=a("hr",null,null,-1)),a("p",F,[a("small",null," Note that someone else can claim tokens (for a given domain) for you and save you on gas fees. You will still receive the same amount of "+l(t.$config.public.chatTokenSymbol)+" tokens as if you've made the claim yourself. ",1)])])}const z=h(M,[["render",I]]),L={name:"AirdropActivityPoints",data(){return{waiting:!1,loadingData:!1,airdropApWei:0}},computed:{airdropAp(){return this.airdropApWei?Math.round(Number(T(this.airdropApWei))):0}},mounted(){this.address&&this.fetchAirdropData()},methods:{async fetchAirdropData(){this.loadingData=!0;try{const t=await this.readData({address:this.$config.public.airdropApAddress,abi:[{name:"claimPreview",type:"function",stateMutability:"view",inputs:[{type:"address",name:"_address"}],outputs:[{type:"uint256",name:""}]}],functionName:"claimPreview",args:[this.address]});t&&(this.airdropApWei=t)}catch(t){console.error("Error fetching airdrop data:",t)}finally{this.loadingData=!1}},async claim(){this.waiting=!0;const t={address:this.$config.public.airdropApAddress,abi:[{name:"claim",type:"function",stateMutability:"nonpayable",inputs:[],outputs:[]}],functionName:"claim",args:[]};let e;try{const s=await this.writeData(t);e=this.toast({component:C,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()});const o=await this.waitForTxReceipt(s);o.status==="success"?(this.toast.dismiss(e),this.addToChatTokenBalanceWei(this.airdropApWei),this.airdropApWei=0,this.toast("Airdrop for past APs has been successfully claimed!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()}),this.waiting=!1):(this.toast.dismiss(e),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+s,"_blank").focus()}),console.log(o))}catch(s){console.error(s);try{let o=s.message.split("Details:")[1];o=o.split("Version: viem")[0],o=o.replace(/"/g,""),o=o.replace("execution reverted:","Error:"),o=o.replace("ChatTokenClaimActivityPoints: ",""),console.log(o),this.toast(o,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(e),this.waiting=!1}}},setup(){const{readData:t,writeData:e,waitForTxReceipt:s}=k(),{addToChatTokenBalanceWei:o,address:i}=v(),n=_();return{readData:t,writeData:e,waitForTxReceipt:s,addToChatTokenBalanceWei:o,address:i,toast:n}},watch:{address(){this.address&&this.fetchAirdropData()}}},Y={class:"text-center"},q={class:"input-group mt-5"},G={class:"btn btn-primary",type:"button","aria-expanded":"false"},J={class:"d-flex justify-content-center mt-4 mb-4"},K=["disabled"],O={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Q={class:"text-center"};function X(t,e,s,o,i,n){return p(),d("div",null,[a("p",Y,"Claim "+l(n.airdropAp)+" "+l(t.$config.public.chatTokenSymbol)+" airdrop for past activity points.",1),a("div",q,[A(a("input",{"onUpdate:modelValue":e[0]||(e[0]=c=>n.airdropAp=c),type:"text",class:"form-control",disabled:""},null,512),[[$,n.airdropAp]]),a("button",G,l(t.$config.public.chatTokenSymbol),1)]),a("div",J,[a("button",{disabled:i.waiting||i.loadingData||n.airdropAp==0||n.airdropAp==null,class:"btn btn-outline-primary",type:"button",onClick:e[1]||(e[1]=(...c)=>n.claim&&n.claim(...c))},[i.loadingData||i.waiting?(p(),d("span",O)):m("",!0),e[2]||(e[2]=f(" Claim ",-1))],8,K)]),e[3]||(e[3]=a("hr",null,null,-1)),a("p",Q,[a("small",null," If you're not eligible, or have already claimed the airdrop, the amount of "+l(t.$config.public.chatTokenSymbol)+" tokens shown is 0. ",1)])])}const Z=h(L,[["render",X]]),tt={name:"Airdrop",data(){return{currentTab:"domain"}},components:{AirdropDomainHolders:z,AirdropActivityPoints:Z},mounted(){this.currentTab=localStorage.getItem("airdropCurrentTab"),this.currentTab||(this.currentTab="domain")},methods:{changeCurrentTab(t){this.currentTab=t,localStorage.setItem("airdropCurrentTab",t)}}},et={class:"card border scroll-500"},it={class:"card-body"},at={class:"fs-3"},ot={class:"nav nav-tabs nav-fill"},st={class:"nav-item"},nt={class:"nav-item"},rt={class:"tab-content mt-3"},lt={key:0},ct={class:"d-flex justify-content-center mt-5"},dt={class:"col-12 col-lg-8"},pt={key:1},ut={class:"d-flex justify-content-center mt-5"},mt={class:"col-12 col-lg-8"};function ht(t,e,s,o,i,n){const c=W,u=R,D=B,x=g("AirdropDomainHolders"),N=g("AirdropActivityPoints");return p(),d(E,null,[r(D,null,{default:y(()=>[r(c,null,{default:y(()=>[f("Airdrop | "+l(t.$config.public.projectMetadataTitle),1)]),_:1}),r(u,{property:"og:title",content:"Airdrop"}),r(u,{name:"description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"]),r(u,{property:"og:image",content:t.$config.public.projectUrl+t.$config.public.previewImageAirdrop},null,8,["content"]),r(u,{property:"og:description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"]),r(u,{name:"twitter:image",content:t.$config.public.projectUrl+t.$config.public.previewImageAirdrop},null,8,["content"]),r(u,{name:"twitter:description",content:"Claim your "+t.$config.public.chatTokenSymbol+" token airdrop on "+t.$config.public.projectName+"!"},null,8,["content"])]),_:1}),a("div",et,[a("div",it,[a("p",at,[a("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:e[0]||(e[0]=b=>t.$router.back())})]),a("ul",ot,[a("li",st,[a("button",{class:w(["nav-link",i.currentTab==="domain"?"active":""]),onClick:e[1]||(e[1]=b=>n.changeCurrentTab("domain"))}," Domain holders ",2)]),a("li",nt,[a("button",{class:w(["nav-link",i.currentTab==="ap"?"active":""]),onClick:e[2]||(e[2]=b=>n.changeCurrentTab("ap"))}," Activity Points ",2)])]),a("div",rt,[i.currentTab==="domain"?(p(),d("div",lt,[a("div",ct,[a("div",dt,[r(x)])])])):m("",!0),i.currentTab==="ap"?(p(),d("div",pt,[a("div",ut,[a("div",mt,[r(N)])])])):m("",!0)])])])],64)}const bt=h(tt,[["render",ht]]);export{bt as default};
