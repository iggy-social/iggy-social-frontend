import{_ as v,W as b,j as C,m as D,i as L,n as w,c as u,o as d,a,t as r,p as T,v as A,g as p,q as $,s as _,d as m,x as E,y,z as W,F as R,A as P,r as B,b as h,w as I,T as U,M as q,H as F,B as M}from"#entry";const H={name:"StakingClaim",props:["loadingStakingData","claimAmountWei","claimRewardsTotalWei","futureRewardsWei","lastClaimPeriod","minDepositWei","periodLength"],emits:["clearClaimAmount","updateLastClaimPeriod"],data(){return{claimers:[],waiting:!1}},components:{WaitingToast:b},computed:{claimAmount(){return this.claimAmountWei===null||this.claimAmountWei===void 0||this.claimAmountWei===""||this.claimAmountWei==0?0:w(BigInt(this.claimAmountWei))},claimRewardsTotal(){return this.claimRewardsTotalWei===null||this.claimRewardsTotalWei===void 0||this.claimRewardsTotalWei===""||this.claimRewardsTotalWei==0?0:w(BigInt(this.claimRewardsTotalWei))},futureRewards(){return this.futureRewardsWei===null||this.futureRewardsWei===void 0||this.futureRewardsWei===""||this.futureRewardsWei==0?0:w(BigInt(this.futureRewardsWei))},lastPeriodDateTime(){if(this.lastClaimPeriod===null||this.lastClaimPeriod===void 0||this.lastClaimPeriod===""||this.lastClaimPeriod==0)return"Not available";try{const t=Number(this.lastClaimPeriod),e=new Date(t*1e3),i=new Intl.DateTimeFormat("en",{month:"short"}).format(e);return e.getDate()+" "+i+" "+e.getFullYear()+" "+e.getHours()+":"+e.getMinutes().toString().padStart(2,"0")}catch(t){return console.error("Error formatting lastPeriodDateTime:",t),"Invalid date"}},lastPeriodUpdateNeeded(){if(this.lastClaimPeriod===null||this.lastClaimPeriod===void 0||this.lastClaimPeriod===""||this.lastClaimPeriod==0||this.periodLength===null||this.periodLength===void 0||this.periodLength===""||this.periodLength==0)return!1;try{const t=Number(this.lastClaimPeriod),e=Number(this.periodLength);return Math.floor(Date.now()/1e3)-(t+e)>0}catch(t){return console.error("Error calculating lastPeriodUpdateNeeded:",t),!1}},minDeposit(){return this.minDepositWei===null||this.minDepositWei===void 0||this.minDepositWei===""||this.minDepositWei==0?0:w(BigInt(this.minDepositWei))},periodLengthHumanReadable(){if(this.periodLength===null||this.periodLength===void 0||this.periodLength===""||this.periodLength==0)return null;const t=Number(this.periodLength),e=Math.floor(t/60),i=Math.floor(e/60),c=Math.floor(i/24);return c>0?`${c} days`:i>0?`${i} hours`:e>0?`${e} minutes`:`${t} seconds`},stakeTokenBalance(){return 0}},methods:{async claim(){this.waiting=!0;let t;try{const e={address:this.$config.public.stakingContractAddress,abi:[{name:"claimRewards",type:"function",stateMutability:"nonpayable",inputs:[],outputs:[{name:"",type:"uint256",internalType:"uint256"}]}],functionName:"claimRewards",args:[]},i=await this.writeData(e);t=this.toast({component:b,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const c=await this.waitForTxReceipt(i);c.status==="success"?(this.$emit("clearClaimAmount"),this.$emit("updateLastClaimPeriod"),this.toast.dismiss(t),this.toast("You have successfully claimed rewards!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waiting=!1):(this.toast.dismiss(t),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(c))}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(t),this.waiting=!1}}},setup(){const{writeData:t,waitForTxReceipt:e}=C(),{address:i,chainId:c,isActivated:s}=D(),n=L();return{address:i,chainId:c,isActivated:s,toast:n,writeData:t,waitForTxReceipt:e}}},V={class:"text-center"},j={class:"input-group mt-5"},Y={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},O={class:"d-flex justify-content-center mt-4 mb-4"},X=["disabled"],z={key:0,class:"spinner-border spinner-border-sm me-2",role:"status","aria-hidden":"true"},G={key:1},K={key:2};function J(t,e,i,c,s,n){return d(),u("div",null,[a("p",V," Claim "+r(t.$config.public.tokenSymbol)+" rewards for the previous period. Make sure to visit this page once per week to claim your rewards! ",1),a("div",j,[a("button",Y,r(t.$config.public.tokenSymbol),1),T(a("input",{"onUpdate:modelValue":e[0]||(e[0]=o=>n.claimAmount=o),type:"text",class:"form-control",disabled:""},null,512),[[A,n.claimAmount]])]),a("div",O,[a("button",{disabled:s.waiting,class:"btn btn-outline-primary",type:"button",onClick:e[1]||(e[1]=(...o)=>n.claim&&n.claim(...o))},[i.loadingStakingData||s.waiting?(d(),u("span",z)):p("",!0),n.lastPeriodUpdateNeeded?p("",!0):(d(),u("span",G,"Claim")),n.lastPeriodUpdateNeeded?(d(),u("span",K,"Update Claim Period")):p("",!0)],8,X)]),e[4]||(e[4]=a("hr",null,null,-1)),e[5]||(e[5]=a("h4",{class:"text-center"},"Stats",-1)),a("ul",null,[a("li",null," Your stake: "+r(("getLessDecimals"in t?t.getLessDecimals:$(_))(n.stakeTokenBalance))+" "+r(t.$config.public.lpTokenSymbol)+" ("+r(t.$config.public.stakeTokenSymbol)+" tokens) ",1),a("li",null,[m(" Previous period rewards (total): "+r(("getLessDecimals"in t?t.getLessDecimals:$(_))(n.claimRewardsTotal))+" "+r(t.$config.public.tokenSymbol)+" ",1),e[2]||(e[2]=a("i",{class:"bi bi-info-circle-fill","data-bs-container":"body","data-bs-toggle":"popover","data-bs-placement":"top","data-bs-content":"Claimable now. Note that this is a total number for all stakers together."},null,-1))]),a("li",null,[m(" Current period rewards (so far): "+r(("getLessDecimals"in t?t.getLessDecimals:$(_))(n.futureRewards))+" "+r(t.$config.public.tokenSymbol)+" ",1),e[3]||(e[3]=a("i",{class:"bi bi-info-circle-fill","data-bs-container":"body","data-bs-toggle":"popover","data-bs-placement":"top","data-bs-content":"Accrued rewards so far for all stakers together. Not claimable yet. Will be claimable in the next period."},null,-1))]),a("li",null,"Period length: "+r(n.periodLengthHumanReadable),1),a("li",null,"Current period start date: "+r(n.lastPeriodDateTime),1)]),e[6]||(e[6]=a("p",null,[a("small",null," Important: Claim your rewards once per week, otherwise they will be forfeited. ")],-1))])}const Q=v(H,[["render",J]]),Z={name:"AddLiquidity",data(){return{allowanceWei:BigInt(0),debounce:null,depositAmount:0,ethFieldDisabled:!0,nativeCoinAmount:0,nativeCoinAmountWei:null,timeout:800,waitingApproval:!1,waitingDeposit:!1}},components:{WaitingToast:b},mounted(){this.address&&this.fetchAllowance()},computed:{allowanceTooLow(){return this.allowanceWei<this.depositAmountWei},chatBalanceTooLow(){return this.getChatTokenBalanceWei()<this.depositAmountWei},chatTokenBalance(){return W(this.getChatTokenBalanceWei(),this.$config.public.chatTokenDecimals||18)},depositAmountWei(){return!this.depositAmount||Number(this.depositAmount)===0?BigInt(0):y(String(this.depositAmount))},nativeBalance(){if(this.balanceWei){const t=Number(w(this.balanceWei));return t>0?t.toFixed(2):t.toFixed(6)}return 0},nativeBalanceTooLow(){return this.balanceWei?this.nativeCoinAmountWei>this.balanceWei:!1}},methods:{async approveToken(){this.waitingApproval=!0;let t;try{const e={address:this.$config.public.chatTokenAddress,abi:[{name:"approve",type:"function",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]}],functionName:"approve",args:[this.$config.public.swapRouterAddress,BigInt(this.depositAmountWei)]},i=await this.writeData(e);t=this.toast({component:b,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const c=await this.waitForTxReceipt(i);c.status==="success"?(this.allowanceWei=this.depositAmountWei,this.toast.dismiss(t),this.toast("You have successfully approved tokens. Now proceed with getting LP tokens!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingApproval=!1,this.deposit()):(this.toast.dismiss(t),this.waitingApproval=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(c))}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingApproval=!1}finally{this.toast.dismiss(t),this.waitingApproval=!1}},async deposit(){this.waitingDeposit=!0;const t=Math.floor(Date.now()/1e3)+60*this.swapDeadline,e=y(String(this.nativeCoinAmount)),i=Math.floor(Number(this.slippage)*100),c=e-e*BigInt(i)/BigInt(1e4),s=this.depositAmountWei-this.depositAmountWei*BigInt(i)/BigInt(1e4);let n;try{const o={address:this.$config.public.swapRouterAddress,abi:[{name:"addLiquidityETH",type:"function",stateMutability:"payable",inputs:[{name:"token",type:"address"},{name:"amountTokenDesired",type:"uint256"},{name:"amountTokenMin",type:"uint256"},{name:"amountETHMin",type:"uint256"},{name:"to",type:"address"},{name:"deadline",type:"uint256"}],outputs:[{name:"amountToken",type:"uint256"},{name:"amountETH",type:"uint256"},{name:"liquidity",type:"uint256"}]}],functionName:"addLiquidityETH",args:[this.$config.public.chatTokenAddress,BigInt(this.depositAmountWei),BigInt(s),BigInt(c),this.address,BigInt(t)],value:BigInt(e)},l=await this.writeData(o);n=this.toast({component:b,props:{text:`Adding liquidity to the ${this.$config.public.chatTokenSymbol}-${this.$config.public.tokenSymbol} pool...`}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+l,"_blank").focus()});const f=await this.waitForTxReceipt(l);if(f.status==="success"){this.toast.dismiss(n),this.toast(`You have successfully provided liquidity and received ${this.$config.public.lpTokenSymbol}!`,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+l,"_blank").focus()}),this.allowanceWei=this.allowanceWei-this.depositAmountWei;let k=y(this.chatTokenBalance);this.setChatTokenBalanceWei(k-this.depositAmountWei),this.fetchLpTokenBalance(),this.depositAmount=0,this.nativeCoinAmount=0,this.nativeCoinAmountWei=null}else this.toast.dismiss(n),this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+l,"_blank").focus()}),console.log(f)}catch(o){try{let l=o.message.split("Details:")[1];l=l.split("Version: viem")[0],l=l.replace(/"/g,""),l=l.replace("execution reverted:","Error:"),console.log(l),this.toast(l,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}}finally{this.toast.dismiss(n),this.waitingDeposit=!1}},async fetchAllowance(){try{const t={address:this.$config.public.chatTokenAddress,abi:[{name:"allowance",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"allowance",args:[this.address,this.$config.public.swapRouterAddress]},e=await this.readData(t);e!==null&&(this.allowanceWei=e)}catch(t){console.error("Error fetching allowance:",t)}},async fetchLpTokenBalance(){try{const t={address:this.$config.public.lpTokenAddress,abi:[{name:"balanceOf",type:"function",stateMutability:"view",inputs:[{name:"account",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"balanceOf",args:[this.address]},e=await this.readData(t);e!==null&&this.setLpTokenBalanceWei(e)}catch(t){console.error("Error fetching LP token balance:",t)}},async fetchNativeCoinAmount(){try{const t={address:this.$config.public.swapRouterAddress,abi:[{name:"calculateETHForLiquidity",type:"function",stateMutability:"view",inputs:[{name:"addressToken",type:"address"},{name:"amountToken",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],functionName:"calculateETHForLiquidity",args:[this.$config.public.chatTokenAddress,y(String(this.depositAmount))]},e=await this.readData(t);e!==null&&(this.nativeCoinAmountWei=e,this.nativeCoinAmount=w(this.nativeCoinAmountWei),Number(this.nativeCoinAmountWei)===0&&(this.ethFieldDisabled=!1))}catch(t){console.error("Error fetching native coin amount:",t)}},fetchNativeCoinAmountWithTimeout(){this.debounce&&clearTimeout(this.debounce);const t=this;this.debounce=setTimeout(()=>{t.fetchNativeCoinAmount()},t.timeout)},setMaxInputTokenAmount(){this.depositAmount=this.chatTokenBalance,this.fetchNativeCoinAmount()}},setup(){const{readData:t,writeData:e,waitForTxReceipt:i}=C(),{address:c,balanceWei:s,getChatTokenBalanceWei:n,setChatTokenBalanceWei:o,setLpTokenBalanceWei:l}=D(),{swapDeadline:f,slippage:k}=E(),g=L();return{readData:t,writeData:e,waitForTxReceipt:i,address:c,balanceWei:s,getChatTokenBalanceWei:n,setChatTokenBalanceWei:o,setLpTokenBalanceWei:l,swapDeadline:f,slippage:k,toast:g}},watch:{address(t,e){t&&this.fetchAllowance()}}},tt={class:"text-center"},et={class:"input-group mt-5"},it={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},nt=["disabled"],at={class:"text-muted"},st={class:"input-group mt-5"},ot={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},lt=["disabled"],rt={class:"text-muted"},ct={class:"d-flex justify-content-center mt-4 mb-4"},ut=["disabled"],dt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},pt=["disabled"],mt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},ht={key:2,disabled:"",class:"btn btn-outline-primary",type:"button"},ft={key:0},bt={key:1},gt={class:"text-center"},kt={key:0,class:"text-center"};function wt(t,e,i,c,s,n){return d(),u(R,null,[a("p",tt," No "+r(t.$config.public.lpTokenSymbol)+"? Add liquidity to the "+r(t.$config.public.chatTokenSymbol)+"-"+r(t.$config.public.tokenSymbol)+" pool below to get some. ",1),a("div",et,[a("button",it,r(t.$config.public.chatTokenSymbol),1),T(a("input",{"onUpdate:modelValue":e[0]||(e[0]=o=>s.depositAmount=o),type:"text",class:"form-control",placeholder:"0.00",disabled:s.waitingApproval||s.waitingDeposit,onKeyup:e[1]||(e[1]=(...o)=>n.fetchNativeCoinAmountWithTimeout&&n.fetchNativeCoinAmountWithTimeout(...o))},null,40,nt),[[A,s.depositAmount]]),a("button",{onClick:e[2]||(e[2]=(...o)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...o)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[7]||(e[7]=[a("small",null,"MAX",-1)])])]),a("small",at,[a("em",null,[e[8]||(e[8]=m(" Balance: ",-1)),a("span",{class:"cursor-pointer hover-color",onClick:e[3]||(e[3]=(...o)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...o))},r(n.chatTokenBalance)+" "+r(t.$config.public.chatTokenSymbol),1)])]),a("div",st,[a("button",ot,r(t.$config.public.tokenSymbol),1),T(a("input",{"onUpdate:modelValue":e[4]||(e[4]=o=>s.nativeCoinAmount=o),type:"text",class:"form-control",disabled:s.ethFieldDisabled},null,8,lt),[[A,s.nativeCoinAmount]])]),a("small",rt,[a("em",null,[e[9]||(e[9]=m(" Balance: ",-1)),a("span",null,r(n.nativeBalance)+" "+r(t.$config.public.tokenSymbol),1)])]),a("div",ct,[n.allowanceTooLow&&!n.nativeBalanceTooLow?(d(),u("button",{key:0,disabled:s.waitingApproval,class:"btn btn-outline-primary",type:"button",onClick:e[5]||(e[5]=(...o)=>n.approveToken&&n.approveToken(...o))},[s.waitingApproval?(d(),u("span",dt)):p("",!0),m(" Approve "+r(t.$config.public.chatTokenSymbol)+" token ",1)],8,ut)):p("",!0),!n.allowanceTooLow&&!n.nativeBalanceTooLow?(d(),u("button",{key:1,disabled:s.waitingDeposit,class:"btn btn-outline-primary",type:"button",onClick:e[6]||(e[6]=(...o)=>n.deposit&&n.deposit(...o))},[s.waitingDeposit?(d(),u("span",mt)):p("",!0),m(" Get "+r(t.$config.public.lpTokenSymbol),1)],8,pt)):p("",!0),n.nativeBalanceTooLow||n.chatBalanceTooLow?(d(),u("button",ht,[n.nativeBalanceTooLow&&!n.chatBalanceTooLow?(d(),u("span",ft,r(t.$config.public.tokenSymbol),1)):p("",!0),n.chatBalanceTooLow?(d(),u("span",bt,r(t.$config.public.chatTokenSymbol),1)):p("",!0),e[10]||(e[10]=m(" balance too low ",-1))])):p("",!0)]),a("p",gt,[n.allowanceTooLow?(d(),u("small",kt,[a("em",null," You will need to do 2 transactions: Approve "+r(t.$config.public.chatTokenSymbol)+" token and then Get "+r(t.$config.public.lpTokenSymbol)+". ",1)])):p("",!0)])],64)}const yt=v(Z,[["render",wt]]),Tt={name:"StakingDeposit",props:["loadingStakingData","minDepositWei","maxDepositWei","lpTokenAllowanceWei"],emits:["clearClaimAmount","fetchLockedTimeLeft","updateAllowance"],data(){return{allowanceWei:BigInt(0),depositAmount:0,waitingApproval:!1,waitingDeposit:!1}},components:{AddLiquidity:yt},mounted(){this.allowanceWei=this.lpTokenAllowanceWei||BigInt(0),this.fetchLpTokenBalance()},computed:{allowanceTooLow(){return this.allowanceWei<this.depositAmountWei},depositAmountWei(){return!this.depositAmount||Number(this.depositAmount)===0?BigInt(0):P(String(this.depositAmount),this.$config.public.lpTokenDecimals)},depositTooLow(){return!this.depositAmount||Number(this.depositAmount)===0?!0:this.depositAmountWei<(this.minDepositWei||BigInt(0))},lpTokenBalance(){return W(this.getLpTokenBalanceWei(),this.$config.public.lpTokenDecimals)},minDeposit(){return this.minDepositWei===null||this.minDepositWei===void 0||this.minDepositWei===""||this.minDepositWei==0?0:W(this.minDepositWei,18)}},methods:{async fetchLpTokenBalance(){if(this.address)try{const t={address:this.$config.public.lpTokenAddress,abi:[{name:"balanceOf",type:"function",stateMutability:"view",inputs:[{name:"account",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"balanceOf",args:[this.address]},e=await this.readData(t);e!==null&&this.setLpTokenBalanceWei(e)}catch(t){console.error("Error fetching LP token balance:",t)}},async approveToken(){this.waitingApproval=!0;let t;try{const e={address:this.$config.public.lpTokenAddress,abi:[{name:"approve",type:"function",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]}],functionName:"approve",args:[this.$config.public.stakingContractAddress,BigInt(this.depositAmountWei)]},i=await this.writeData(e);t=this.toast({component:b,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const c=await this.waitForTxReceipt(i);c.status==="success"?(this.$emit("updateAllowance",this.depositAmountWei),this.toast.dismiss(t),this.toast("You have successfully approved tokens. Now proceed with staking!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingApproval=!1,this.deposit()):(this.toast.dismiss(t),this.waitingApproval=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(c))}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingApproval=!1}finally{this.toast.dismiss(t),this.waitingApproval=!1}},async deposit(){this.waitingDeposit=!0;let t;try{const e={address:this.$config.public.stakingContractAddress,abi:[{name:"deposit",type:"function",stateMutability:"nonpayable",inputs:[{name:"_assets",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],functionName:"deposit",args:[BigInt(this.depositAmountWei)]},i=await this.writeData(e);t=this.toast({component:b,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const c=await this.waitForTxReceipt(i);if(c.status==="success"){this.$emit("updateAllowance",BigInt(0));const s=this.getLpTokenBalanceWei();this.setLpTokenBalanceWei(s-this.depositAmountWei);const n=this.getStakeTokenBalanceWei();this.setStakeTokenBalanceWei(n+this.depositAmountWei),this.$emit("clearClaimAmount"),this.$emit("fetchLockedTimeLeft"),this.depositAmount=0,this.toast.dismiss(t),this.toast("You have successfully staked tokens!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingDeposit=!1}else this.toast.dismiss(t),this.waitingDeposit=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(c)}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingDeposit=!1}finally{this.toast.dismiss(t),this.waitingDeposit=!1}},setMaxInputTokenAmount(){this.depositAmount=this.lpTokenBalance}},setup(){const{readData:t,writeData:e,waitForTxReceipt:i}=C(),{address:c,getLpTokenBalanceWei:s,setLpTokenBalanceWei:n,getStakeTokenBalanceWei:o,setStakeTokenBalanceWei:l}=D(),f=L();return{readData:t,writeData:e,waitForTxReceipt:i,address:c,toast:f,getLpTokenBalanceWei:s,setLpTokenBalanceWei:n,getStakeTokenBalanceWei:o,setStakeTokenBalanceWei:l}},watch:{lpTokenAllowanceWei(){this.allowanceWei=this.lpTokenAllowanceWei||BigInt(0)}}},At={class:"text-center"},Wt={class:"input-group mt-5"},vt={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},Ct=["disabled"],Dt={class:"text-muted"},Bt={class:"d-flex justify-content-center mt-4 mb-4"},Lt=["disabled"],St={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},xt=["disabled"],$t={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},_t={class:"text-center"},Mt={key:0,class:"text-center"};function Rt(t,e,i,c,s,n){const o=B("AddLiquidity");return d(),u("div",null,[a("p",At," Stake "+r(t.$config.public.lpTokenSymbol)+" to receive periodic staking rewards in "+r(t.$config.public.tokenSymbol)+" tokens (min deposit: "+r(n.minDeposit)+" "+r(t.$config.public.lpTokenSymbol)+"). ",1),a("div",Wt,[a("button",vt,r(t.$config.public.lpTokenSymbol),1),T(a("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>s.depositAmount=l),type:"text",class:"form-control",placeholder:"0.00",disabled:s.waitingApproval||s.waitingDeposit},null,8,Ct),[[A,s.depositAmount]]),a("button",{onClick:e[1]||(e[1]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[5]||(e[5]=[a("small",null,"MAX",-1)])])]),a("small",Dt,[a("em",null,[e[6]||(e[6]=m(" Balance: ",-1)),a("span",{class:"cursor-pointer hover-color",onClick:e[2]||(e[2]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l))},r(n.lpTokenBalance)+" "+r(t.$config.public.lpTokenSymbol),1)])]),a("div",Bt,[n.allowanceTooLow?(d(),u("button",{key:0,disabled:s.waitingApproval||n.depositTooLow,class:"btn btn-outline-primary",type:"button",onClick:e[3]||(e[3]=(...l)=>n.approveToken&&n.approveToken(...l))},[i.loadingStakingData||s.waitingApproval?(d(),u("span",St)):p("",!0),e[7]||(e[7]=m(" Approve token ",-1))],8,Lt)):p("",!0),n.allowanceTooLow?p("",!0):(d(),u("button",{key:1,disabled:s.waitingDeposit||n.depositTooLow,class:"btn btn-outline-primary",type:"button",onClick:e[4]||(e[4]=(...l)=>n.deposit&&n.deposit(...l))},[i.loadingStakingData||s.waitingDeposit?(d(),u("span",$t)):p("",!0),e[8]||(e[8]=m(" Stake ",-1))],8,xt))]),a("p",_t,[n.allowanceTooLow?(d(),u("small",Mt,[...e[9]||(e[9]=[a("em",null," You will need to do 2 transactions: Approve token and then Stake. ",-1)])])):p("",!0)]),e[10]||(e[10]=a("hr",{class:"mb-5"},null,-1)),h(o)])}const It=v(Tt,[["render",Rt]]),Et={name:"RemoveLiquidity",data(){return{allowanceWei:BigInt(0),depositAmount:0,waitingApproval:!1,waitingDeposit:!1}},components:{WaitingToast:b},mounted(){this.address&&this.fetchAllowance()},computed:{allowanceTooLow(){return this.allowanceWei<this.depositAmountWei},lpTokenBalance(){return W(this.lpTokenBalanceWei||BigInt(0),this.$config.public.lpTokenDecimals||18)},depositAmountWei(){return!this.depositAmount||Number(this.depositAmount)===0?BigInt(0):y(String(this.depositAmount))},lpTokenBalanceWei(){return this.getLpTokenBalanceWei()}},methods:{async approveToken(){this.waitingApproval=!0;let t;try{const e={address:this.$config.public.lpTokenAddress,abi:[{name:"approve",type:"function",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]}],functionName:"approve",args:[this.$config.public.swapRouterAddress,BigInt(this.depositAmountWei)]},i=await this.writeData(e);t=this.toast({component:b,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const c=await this.waitForTxReceipt(i);c.status==="success"?(this.allowanceWei=this.depositAmountWei,this.toast.dismiss(t),this.toast("You have successfully approved tokens. Now proceed with removing liquidity!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingApproval=!1,this.removeLiquidity()):(this.toast.dismiss(t),this.waitingApproval=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(c))}catch(e){console.error(e),this.waitingApproval=!1;try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}}finally{this.toast.dismiss(t),this.waitingApproval=!1}},async removeLiquidity(){this.waitingDeposit=!0;let t;try{const e={address:this.$config.public.swapRouterAddress,abi:[{name:"calculateETHAndTokensToReceive",type:"function",stateMutability:"view",inputs:[{name:"_lpToken",type:"address"},{name:"_lpAmount",type:"uint256"}],outputs:[{name:"amountToken",type:"uint256"},{name:"amountETH",type:"uint256"}]}],functionName:"calculateETHAndTokensToReceive",args:[this.$config.public.chatTokenAddress,BigInt(this.depositAmountWei)]},i=await this.readData(e);if(!i)throw new Error("Failed to calculate amounts");const[c,s]=i,n=Math.floor(Date.now()/1e3)+60*this.swapDeadline,o=Math.floor(Number(this.slippage)*100),l=s-s*BigInt(o)/BigInt(1e4),f=c-c*BigInt(o)/BigInt(1e4),k={address:this.$config.public.swapRouterAddress,abi:[{name:"removeLiquidityETH",type:"function",stateMutability:"nonpayable",inputs:[{name:"token",type:"address"},{name:"liquidity",type:"uint256"},{name:"amountTokenMin",type:"uint256"},{name:"amountETHMin",type:"uint256"},{name:"to",type:"address"},{name:"deadline",type:"uint256"}],outputs:[{name:"amountToken",type:"uint256"},{name:"amountETH",type:"uint256"}]}],functionName:"removeLiquidityETH",args:[this.$config.public.chatTokenAddress,BigInt(this.depositAmountWei),BigInt(f),BigInt(l),this.address,BigInt(n)]},g=await this.writeData(k);t=this.toast({component:b,props:{text:`Removing liquidity from the ${this.$config.public.lpTokenSymbol}-${this.$config.public.tokenSymbol} pool...`}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+g,"_blank").focus()});const S=await this.waitForTxReceipt(g);if(S.status==="success"){this.toast.dismiss(t),this.toast(`You have successfully removed liquidity and received ${this.$config.public.lpTokenSymbol} & ${this.$config.public.tokenSymbol}!`,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+g,"_blank").focus()}),this.allowanceWei=this.allowanceWei-this.depositAmountWei;const N=this.getLpTokenBalanceWei()-this.depositAmountWei;this.setLpTokenBalanceWei(N),this.depositAmount=0}else this.toast.dismiss(t),this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+g,"_blank").focus()}),console.log(S)}catch(e){console.error(e);try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}}finally{this.toast.dismiss(t),this.waitingDeposit=!1}},async fetchAllowance(){try{const t={address:this.$config.public.lpTokenAddress,abi:[{name:"allowance",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"allowance",args:[this.address,this.$config.public.swapRouterAddress]},e=await this.readData(t);e&&(this.allowanceWei=e)}catch(t){console.error("Failed to fetch allowance:",t)}},setMaxInputTokenAmount(){this.depositAmount=this.lpTokenBalance}},setup(){const{readData:t,writeData:e,waitForTxReceipt:i}=C(),{address:c,getLpTokenBalanceWei:s,setLpTokenBalanceWei:n}=D(),{slippage:o,swapDeadline:l}=E(),f=L();return{address:c,slippage:o,swapDeadline:l,toast:f,readData:t,writeData:e,waitForTxReceipt:i,getLpTokenBalanceWei:s,setLpTokenBalanceWei:n}},watch:{address(t,e){t&&this.fetchAllowance()}}},Nt={class:"text-center"},Pt={class:"input-group mt-5"},Ut={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},qt=["disabled"],Ft={class:"text-muted"},Ht={class:"d-flex justify-content-center mt-4 mb-4"},Vt=["disabled"],jt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Yt=["disabled"],Ot={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Xt={class:"text-center"},zt={key:0,class:"text-center"};function Gt(t,e,i,c,s,n){return d(),u(R,null,[a("p",Nt," Remove liquidity and get back "+r(t.$config.public.chatTokenSymbol)+" & "+r(t.$config.public.tokenSymbol)+" tokens. ",1),a("div",Pt,[a("button",Ut,r(t.$config.public.lpTokenSymbol),1),T(a("input",{"onUpdate:modelValue":e[0]||(e[0]=o=>s.depositAmount=o),type:"text",class:"form-control",placeholder:"0.00",disabled:s.waitingApproval||s.waitingDeposit},null,8,qt),[[A,s.depositAmount]]),a("button",{onClick:e[1]||(e[1]=(...o)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...o)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[5]||(e[5]=[a("small",null,"MAX",-1)])])]),a("small",Ft,[a("em",null,[e[6]||(e[6]=m(" Balance: ",-1)),a("span",{class:"cursor-pointer hover-color",onClick:e[2]||(e[2]=(...o)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...o))},r(n.lpTokenBalance)+" "+r(t.$config.public.lpTokenSymbol),1)])]),a("div",Ht,[n.allowanceTooLow?(d(),u("button",{key:0,disabled:s.waitingApproval,class:"btn btn-outline-primary",type:"button",onClick:e[3]||(e[3]=(...o)=>n.approveToken&&n.approveToken(...o))},[s.waitingApproval?(d(),u("span",jt)):p("",!0),m(" Approve "+r(t.$config.public.lpTokenSymbol),1)],8,Vt)):p("",!0),n.allowanceTooLow?p("",!0):(d(),u("button",{key:1,disabled:s.waitingDeposit,class:"btn btn-outline-primary",type:"button",onClick:e[4]||(e[4]=(...o)=>n.removeLiquidity&&n.removeLiquidity(...o))},[s.waitingDeposit?(d(),u("span",Ot)):p("",!0),e[7]||(e[7]=m(" Remove liquidity ",-1))],8,Yt))]),a("p",Xt,[n.allowanceTooLow?(d(),u("small",zt,[a("em",null," You will need to do 2 transactions: Approve "+r(t.$config.public.lpTokenSymbol)+" and then Remove liquidity. ",1)])):p("",!0)])],64)}const Kt=v(Et,[["render",Gt]]),Jt={name:"StakingWithdrawal",props:["loadingStakingData","lockedTimeLeft","minDepositWei"],emits:["clearClaimAmount"],data(){return{withdrawalAmount:0,waitingWithdrawal:!1}},components:{RemoveLiquidity:Kt},mounted(){},computed:{isWithdrawalAmountNullOrEmpty(){return this.withdrawalAmount===null||this.withdrawalAmount===""||this.withdrawalAmount==0||Number(this.withdrawalAmount)===0},lockedSecondsHumanReadable(){const t=Number(this.lockedTimeLeft),e=Math.floor(t/60),i=Math.floor(e/60),c=Math.floor(i/24);return c>0?`${c+1} days`:i>0?`${i+1} hours`:e>0?`${e+1} minutes`:`${t+1} seconds`},minDeposit(){return W(this.minDepositWei||BigInt(0),this.$config.public.lpTokenDecimals||18)},stakeTokenBalance(){return W(this.getStakeTokenBalanceWei(),this.$config.public.stakeTokenDecimals||18)},withdrawalAmountWei(){return!this.withdrawalAmount||Number(this.withdrawalAmount)===0?BigInt(0):y(String(this.withdrawalAmount))},withdrawalIncorrect(){return Number(this.lockedTimeLeft)>0?{error:!0,message:"Your staked tokens are still locked for "+this.lockedSecondsHumanReadable+"."}:this.withdrawalAmountWei>this.getStakeTokenBalanceWei?{error:!0,message:"The amount exceeds your staked token balance."}:this.withdrawalAmountWei<this.getStakeTokenBalanceWei&&this.getStakeTokenBalanceWei-this.withdrawalAmountWei<(this.minDepositWei||BigInt(0))?{error:!0,message:"You cannot unstake this amount because the staked balance left will be less than the minimum required staking amount ("+String(Number(this.minDeposit))+" tokens)."}:{error:!1,message:""}}},methods:{async withdrawal(){this.waitingWithdrawal=!0;let t;try{const e={address:this.$config.public.stakingContractAddress,abi:[{name:"withdraw",type:"function",stateMutability:"nonpayable",inputs:[{name:"_assets",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],functionName:"withdraw",args:[BigInt(this.withdrawalAmountWei)]},i=await this.writeData(e);t=this.toast({component:b,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const c=await this.waitForTxReceipt(i);c.status==="success"?(this.addToStakeTokenBalanceWei(-this.withdrawalAmountWei),this.$emit("clearClaimAmount"),this.toast.dismiss(t),this.toast("You have successfully unstaked tokens!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingWithdrawal=!1):(this.toast.dismiss(t),this.waitingWithdrawal=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(c))}catch(e){console.error(e);try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),i=i.replace("PeriodicEthRewards: ",""),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingWithdrawal=!1}finally{this.toast.dismiss(t),this.waitingWithdrawal=!1}},setMaxInputTokenAmount(){this.withdrawalAmount=this.stakeTokenBalance}},setup(){const{readData:t,writeData:e,waitForTxReceipt:i}=C(),{address:c,getStakeTokenBalanceWei:s,addToStakeTokenBalanceWei:n}=D(),o=L();return{readData:t,writeData:e,waitForTxReceipt:i,address:c,toast:o,getStakeTokenBalanceWei:s,addToStakeTokenBalanceWei:n}}},Qt={class:"text-center"},Zt={class:"input-group mt-5"},te={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},ee=["disabled"],ie={class:"text-muted"},ne={class:"d-flex justify-content-center mt-4 mb-4"},ae=["disabled"],se={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},oe={key:0,class:"alert alert-warning text-center text-dark",role:"alert"};function le(t,e,i,c,s,n){const o=B("RemoveLiquidity");return d(),u("div",null,[a("p",Qt," Unstake "+r(t.$config.public.stakeTokenSymbol)+" to receive back "+r(t.$config.public.lpTokenSymbol)+" (it will also auto-claim any remaining rewards). ",1),a("div",Zt,[a("button",te,r(t.$config.public.stakeTokenSymbol),1),T(a("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>s.withdrawalAmount=l),type:"text",class:"form-control",placeholder:"0.00",disabled:s.waitingWithdrawal},null,8,ee),[[A,s.withdrawalAmount]]),a("button",{onClick:e[1]||(e[1]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[4]||(e[4]=[a("small",null,"MAX",-1)])])]),a("small",ie,[a("em",null,[e[5]||(e[5]=m(" Balance: ",-1)),a("span",{class:"cursor-pointer hover-color",onClick:e[2]||(e[2]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l))},r(n.stakeTokenBalance)+" "+r(t.$config.public.stakeTokenSymbol),1)])]),a("div",ne,[a("button",{disabled:s.waitingWithdrawal||n.withdrawalIncorrect.error||n.isWithdrawalAmountNullOrEmpty,class:"btn btn-outline-primary",type:"button",onClick:e[3]||(e[3]=(...l)=>n.withdrawal&&n.withdrawal(...l))},[i.loadingStakingData||s.waitingWithdrawal?(d(),u("span",se)):p("",!0),e[6]||(e[6]=m(" Unstake ",-1))],8,ae)]),n.withdrawalIncorrect.error?(d(),u("div",oe,r(n.withdrawalIncorrect.message),1)):p("",!0),e[7]||(e[7]=a("hr",null,null,-1)),h(o)])}const re=v(Jt,[["render",le]]),ce={name:"Stake",data(){return{claimAmountWei:0,claimRewardsTotalWei:0,currentTab:"deposit",futureRewardsWei:0,lastClaimPeriod:0,loadingStakingData:!1,lockedTimeLeft:0,minDepositWei:0,maxDepositWei:0,periodLength:0,lpTokenAllowanceWei:0}},components:{StakingClaim:Q,StakingDeposit:It,StakingWithdrawal:re},mounted(){this.currentTab=localStorage.getItem("stakeCurrentTab"),this.currentTab||(this.currentTab="deposit"),this.address&&this.fetchStakingData()},methods:{changeCurrentTab(t){this.currentTab=t,localStorage.setItem("stakeCurrentTab",t)},clearClaimAmount(){this.claimAmountWei=0},async fetchClaimRewardsTotal(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"claimRewardsTotal",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"claimRewardsTotal"});this.claimRewardsTotalWei=t||0}catch(t){console.error("Error fetching claim rewards total:",t),this.claimRewardsTotalWei=0}},async fetchFutureRewards(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"futureRewards",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"futureRewards"});this.futureRewardsWei=t||0}catch(t){console.error("Error fetching future rewards:",t),this.futureRewardsWei=0}},async fetchLockedTimeLeft(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[{type:"address",name:"_user"}],name:"getLockedTimeLeft",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"getLockedTimeLeft",args:[this.address]});this.lockedTimeLeft=t||0}catch(t){console.error("Error fetching locked time left:",t),this.lockedTimeLeft=0}},async fetchPreviewClaim(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[{type:"address",name:"_claimer"}],name:"previewClaim",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"previewClaim",args:[this.address]});this.claimAmountWei=t||0}catch(t){console.error("Error fetching preview claim:",t),this.claimAmountWei=0}},async fetchLpTokenBalance(){try{const t=await this.readData({address:this.$config.public.lpTokenAddress,abi:[{inputs:[{type:"address",name:"_owner"}],name:"balanceOf",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"balanceOf",args:[this.address]});this.setLpTokenBalanceWei(t||BigInt(0))}catch(t){console.error("Error fetching LP token balance:",t),this.setLpTokenBalanceWei(BigInt(0))}},async fetchLpTokenAllowance(){try{const t=await this.readData({address:this.$config.public.lpTokenAddress,abi:[{inputs:[{type:"address",name:"_owner"},{type:"address",name:"_spender"}],name:"allowance",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"allowance",args:[this.address,this.$config.public.stakingContractAddress]});this.lpTokenAllowanceWei=t||0}catch(t){console.error("Error fetching LP token allowance:",t),this.lpTokenAllowanceWei=0}},async fetchStakeTokenBalance(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[{type:"address",name:"_owner"}],name:"balanceOf",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"balanceOf",args:[this.address]});this.setStakeTokenBalanceWei(t||BigInt(0))}catch(t){console.error("Error fetching stake token balance:",t),this.setStakeTokenBalanceWei(BigInt(0))}},async fetchMinDeposit(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"minDeposit",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"minDeposit"});this.minDepositWei=t||0}catch(t){console.error("Error fetching min deposit:",t),this.minDepositWei=0}},async fetchLastClaimPeriod(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"lastClaimPeriod",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"lastClaimPeriod"});this.lastClaimPeriod=t||0}catch(t){console.error("Error fetching last claim period:",t),this.lastClaimPeriod=0}},async fetchPeriodLength(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"periodLength",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"periodLength"});this.periodLength=t||0}catch(t){console.error("Error fetching period length:",t),this.periodLength=0}},async fetchMaxDeposit(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"maxDeposit",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"maxDeposit"});this.maxDepositWei=t||0}catch(t){console.error("Error fetching max deposit:",t),this.maxDepositWei=0}},async fetchStakingData(){this.loadingStakingData=!0;try{await this.fetchPreviewClaim(),await this.fetchLpTokenBalance(),await this.fetchLpTokenAllowance(),await this.fetchStakeTokenBalance(),await this.fetchLockedTimeLeft(),await this.fetchMinDeposit(),this.loadingStakingData=!1,await this.fetchLastClaimPeriod(),await this.fetchPeriodLength(),await this.fetchMaxDeposit(),await this.fetchClaimRewardsTotal(),await this.fetchFutureRewards()}catch(t){console.error("Error fetching staking data:",t),this.loadingStakingData=!1}},updateAllowance(t){this.lpTokenAllowanceWei=Number(t)},updateLastClaimPeriod(){this.lastClaimPeriod=Math.floor(Date.now()/1e3),this.fetchPreviewClaim(),this.fetchClaimRewardsTotal(),this.fetchFutureRewards()},updateStakeTokenBalance(t){const e=this.getStakeTokenBalanceWei();this.setStakeTokenBalanceWei(e+t)}},watch:{address(){this.address&&this.fetchStakingData()}},setup(){const{readData:t}=C(),{address:e,getLpTokenBalanceWei:i,setLpTokenBalanceWei:c,getStakeTokenBalanceWei:s,setStakeTokenBalanceWei:n}=D();return{readData:t,address:e,getLpTokenBalanceWei:i,setLpTokenBalanceWei:c,getStakeTokenBalanceWei:s,setStakeTokenBalanceWei:n}}},ue={class:"card border scroll-500"},de={class:"card-body"},pe={class:"fs-3"},me={class:"nav nav-tabs nav-fill"},he={class:"nav-item"},fe={class:"nav-item"},be={class:"nav-item"},ge={class:"tab-content mt-3"},ke={key:0},we={class:"d-flex justify-content-center mt-5"},ye={class:"col-12 col-lg-8"},Te={key:1},Ae={class:"d-flex justify-content-center mt-5"},We={class:"col-12 col-lg-8"},ve={key:2},Ce={class:"d-flex justify-content-center mt-5"},De={class:"col-12 col-lg-8"};function Be(t,e,i,c,s,n){const o=U,l=q,f=F,k=B("StakingDeposit"),g=B("StakingClaim"),S=B("StakingWithdrawal");return d(),u(R,null,[h(f,null,{default:I(()=>[h(o,null,{default:I(()=>[m("Stake and Earn | "+r(t.$config.public.projectMetadataTitle),1)]),_:1}),h(l,{property:"og:title",content:"Stake and Earn"}),h(l,{name:"description",content:"Stake and earn "+t.$config.public.tokenSymbol+" on "+t.$config.public.projectName+"!"},null,8,["content"]),h(l,{property:"og:image",content:t.$config.public.projectUrl+t.$config.public.previewImageStake},null,8,["content"]),h(l,{property:"og:description",content:"Stake and earn "+t.$config.public.tokenSymbol+" on "+t.$config.public.projectName+"!"},null,8,["content"]),h(l,{name:"twitter:image",content:t.$config.public.projectUrl+t.$config.public.previewImageStake},null,8,["content"]),h(l,{name:"twitter:description",content:"Stake and earn "+t.$config.public.tokenSymbol+" on "+t.$config.public.projectName+"!"},null,8,["content"])]),_:1}),a("div",ue,[a("div",de,[a("p",pe,[a("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:e[0]||(e[0]=x=>t.$router.back())})]),a("ul",me,[a("li",he,[a("button",{class:M(["nav-link",s.currentTab==="deposit"?"active":""]),onClick:e[1]||(e[1]=x=>n.changeCurrentTab("deposit"))}," Stake ",2)]),a("li",fe,[a("button",{class:M(["nav-link",s.currentTab==="claim"?"active":""]),onClick:e[2]||(e[2]=x=>n.changeCurrentTab("claim"))}," Claim ",2)]),a("li",be,[a("button",{class:M(["nav-link",s.currentTab==="withdraw"?"active":""]),onClick:e[3]||(e[3]=x=>n.changeCurrentTab("withdraw"))}," Unstake ",2)])]),a("div",ge,[s.currentTab==="deposit"?(d(),u("div",ke,[a("div",we,[a("div",ye,[h(k,{loadingStakingData:s.loadingStakingData,minDepositWei:s.minDepositWei,maxDepositWei:s.maxDepositWei,lpTokenAllowanceWei:s.lpTokenAllowanceWei,onClearClaimAmount:n.clearClaimAmount,onFetchLockedTimeLeft:n.fetchLockedTimeLeft,onUpdateAllowance:n.updateAllowance},null,8,["loadingStakingData","minDepositWei","maxDepositWei","lpTokenAllowanceWei","onClearClaimAmount","onFetchLockedTimeLeft","onUpdateAllowance"])])])])):p("",!0),s.currentTab==="claim"?(d(),u("div",Te,[a("div",Ae,[a("div",We,[h(g,{loadingStakingData:s.loadingStakingData,claimAmountWei:s.claimAmountWei,claimRewardsTotalWei:s.claimRewardsTotalWei,futureRewardsWei:s.futureRewardsWei,lastClaimPeriod:s.lastClaimPeriod,minDepositWei:s.minDepositWei,periodLength:s.periodLength,onClearClaimAmount:n.clearClaimAmount,onUpdateLastClaimPeriod:n.updateLastClaimPeriod},null,8,["loadingStakingData","claimAmountWei","claimRewardsTotalWei","futureRewardsWei","lastClaimPeriod","minDepositWei","periodLength","onClearClaimAmount","onUpdateLastClaimPeriod"])])])])):p("",!0),s.currentTab==="withdraw"?(d(),u("div",ve,[a("div",Ce,[a("div",De,[h(S,{loadingStakingData:s.loadingStakingData,lockedTimeLeft:s.lockedTimeLeft,minDepositWei:s.minDepositWei,onClearClaimAmount:n.clearClaimAmount},null,8,["loadingStakingData","lockedTimeLeft","minDepositWei","onClearClaimAmount"])])])])):p("",!0)])])])],64)}const Se=v(ce,[["render",Be]]);export{Se as default};
