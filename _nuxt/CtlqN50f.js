import{_ as B,W as g,i as S,l as b,m as k,n as T,c as u,o as d,a as s,t as a,p as W,v,g as p,q as E,s as N,d as m,x,y as $,z as _,A as q,B as V,C as A,j as f,D as C,F as P,E as F,r as L,b as h,w as U,T as j,M as Y,H as O,G as R}from"#entry";const X={name:"StakingClaim",props:["loadingStakingData","claimAmountWei","claimRewardsTotalWei","futureRewardsWei","lastClaimPeriod","minDepositWei","periodLength"],emits:["clearClaimAmount","updateLastClaimPeriod"],data(){return{claimers:[],waiting:!1}},components:{WaitingToast:g},computed:{claimAmount(){return this.claimAmountWei===null||this.claimAmountWei===void 0||this.claimAmountWei===""||this.claimAmountWei==0?0:T(BigInt(this.claimAmountWei))},claimRewardsTotal(){return this.claimRewardsTotalWei===null||this.claimRewardsTotalWei===void 0||this.claimRewardsTotalWei===""||this.claimRewardsTotalWei==0?0:T(BigInt(this.claimRewardsTotalWei))},futureRewards(){return this.futureRewardsWei===null||this.futureRewardsWei===void 0||this.futureRewardsWei===""||this.futureRewardsWei==0?0:T(BigInt(this.futureRewardsWei))},lastPeriodDateTime(){if(this.lastClaimPeriod===null||this.lastClaimPeriod===void 0||this.lastClaimPeriod===""||this.lastClaimPeriod==0)return"Not available";try{const t=Number(this.lastClaimPeriod),e=new Date(t*1e3),i=new Intl.DateTimeFormat("en",{month:"short"}).format(e);return e.getDate()+" "+i+" "+e.getFullYear()+" "+e.getHours()+":"+e.getMinutes().toString().padStart(2,"0")}catch(t){return console.error("Error formatting lastPeriodDateTime:",t),"Invalid date"}},lastPeriodUpdateNeeded(){if(this.lastClaimPeriod===null||this.lastClaimPeriod===void 0||this.lastClaimPeriod===""||this.lastClaimPeriod==0||this.periodLength===null||this.periodLength===void 0||this.periodLength===""||this.periodLength==0)return!1;try{const t=Number(this.lastClaimPeriod),e=Number(this.periodLength);return Math.floor(Date.now()/1e3)-(t+e)>0}catch(t){return console.error("Error calculating lastPeriodUpdateNeeded:",t),!1}},minDeposit(){return this.minDepositWei===null||this.minDepositWei===void 0||this.minDepositWei===""||this.minDepositWei==0?0:T(BigInt(this.minDepositWei))},periodLengthHumanReadable(){if(this.periodLength===null||this.periodLength===void 0||this.periodLength===""||this.periodLength==0)return null;const t=Number(this.periodLength),e=Math.floor(t/60),i=Math.floor(e/60),r=Math.floor(i/24);return r>0?`${r} days`:i>0?`${i} hours`:e>0?`${e} minutes`:`${t} seconds`},stakeTokenBalance(){return 0}},methods:{async claim(){this.waiting=!0;let t;try{const e={address:this.$config.public.stakingContractAddress,abi:[{name:"claimRewards",type:"function",stateMutability:"nonpayable",inputs:[],outputs:[{name:"",type:"uint256",internalType:"uint256"}]}],functionName:"claimRewards",args:[]},i=await b(e);t=this.toast({component:g,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const r=await k(i);r.status==="success"?(this.$emit("clearClaimAmount"),this.$emit("updateLastClaimPeriod"),this.toast.dismiss(t),this.toast("You have successfully claimed rewards!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waiting=!1):(this.toast.dismiss(t),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(r))}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(t),this.waiting=!1}}},setup(){return{toast:S()}}},G={class:"text-center"},z={class:"input-group mt-5"},K={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},J={class:"d-flex justify-content-center mt-4 mb-4"},Q=["disabled"],Z={key:0,class:"spinner-border spinner-border-sm me-2",role:"status","aria-hidden":"true"},tt={key:1},et={key:2};function it(t,e,i,r,o,n){return d(),u("div",null,[s("p",G," Claim "+a(t.$config.public.tokenSymbol)+" rewards for the previous period. Make sure to visit this page once per week to claim your rewards! ",1),s("div",z,[s("button",K,a(t.$config.public.tokenSymbol),1),W(s("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>n.claimAmount=l),type:"text",class:"form-control",disabled:""},null,512),[[v,n.claimAmount]])]),s("div",J,[s("button",{disabled:o.waiting,class:"btn btn-outline-primary",type:"button",onClick:e[1]||(e[1]=(...l)=>n.claim&&n.claim(...l))},[i.loadingStakingData||o.waiting?(d(),u("span",Z)):p("",!0),n.lastPeriodUpdateNeeded?p("",!0):(d(),u("span",tt,"Claim")),n.lastPeriodUpdateNeeded?(d(),u("span",et,"Update Claim Period")):p("",!0)],8,Q)]),e[4]||(e[4]=s("hr",null,null,-1)),e[5]||(e[5]=s("h4",{class:"text-center"},"Stats",-1)),s("ul",null,[s("li",null," Your stake: "+a(("getLessDecimals"in t?t.getLessDecimals:E(N))(n.stakeTokenBalance))+" "+a(t.$config.public.lpTokenSymbol)+" ("+a(t.$config.public.stakeTokenSymbol)+" tokens) ",1),s("li",null,[m(" Previous period rewards (total): "+a(("getLessDecimals"in t?t.getLessDecimals:E(N))(n.claimRewardsTotal))+" "+a(t.$config.public.tokenSymbol)+" ",1),e[2]||(e[2]=s("i",{class:"bi bi-info-circle-fill","data-bs-container":"body","data-bs-toggle":"popover","data-bs-placement":"top","data-bs-content":"Claimable now. Note that this is a total number for all stakers together."},null,-1))]),s("li",null,[m(" Current period rewards (so far): "+a(("getLessDecimals"in t?t.getLessDecimals:E(N))(n.futureRewards))+" "+a(t.$config.public.tokenSymbol)+" ",1),e[3]||(e[3]=s("i",{class:"bi bi-info-circle-fill","data-bs-container":"body","data-bs-toggle":"popover","data-bs-placement":"top","data-bs-content":"Accrued rewards so far for all stakers together. Not claimable yet. Will be claimable in the next period."},null,-1))]),s("li",null,"Period length: "+a(n.periodLengthHumanReadable),1),s("li",null,"Current period start date: "+a(n.lastPeriodDateTime),1)]),e[6]||(e[6]=s("p",null,[s("small",null," Important: Claim your rewards once per week, otherwise they will be forfeited. ")],-1))])}const nt=B(X,[["render",it]]),st={name:"AddLiquidity",data(){return{allowanceWei:BigInt(0),balanceWei:null,debounce:null,depositAmount:0,ethFieldDisabled:!0,nativeCoinAmount:0,nativeCoinAmountWei:null,timeout:800,waitingApproval:!1,waitingDeposit:!1}},components:{WaitingToast:g},mounted(){this.address&&this.fetchAllowance()},computed:{allowanceTooLow(){return this.allowanceWei<this.depositAmountWei},chatBalanceTooLow(){return this.getChatTokenBalanceWei()<this.depositAmountWei},chatTokenBalance(){return C(this.getChatTokenBalanceWei(),this.$config.public.chatTokenDecimals||18)},depositAmountWei(){return!this.depositAmount||Number(this.depositAmount)===0?BigInt(0):A(String(this.depositAmount))},nativeBalance(){if(this.balanceWei){const t=Number(T(this.balanceWei));return t>0?t.toFixed(2):t.toFixed(6)}return 0},nativeBalanceTooLow(){return this.balanceWei?this.nativeCoinAmountWei>this.balanceWei:!1}},methods:{async approveToken(){this.waitingApproval=!0;let t;try{const e={address:this.$config.public.chatTokenAddress,abi:[{name:"approve",type:"function",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]}],functionName:"approve",args:[this.$config.public.swapRouterAddress,BigInt(this.depositAmountWei)]},i=await b(e);t=this.toast({component:g,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const r=await k(i);r.status==="success"?(this.allowanceWei=this.depositAmountWei,this.toast.dismiss(t),this.toast("You have successfully approved tokens. Now proceed with getting LP tokens!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingApproval=!1,this.deposit()):(this.toast.dismiss(t),this.waitingApproval=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(r))}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingApproval=!1}finally{this.toast.dismiss(t),this.waitingApproval=!1}},async deposit(){this.waitingDeposit=!0;const t=Math.floor(Date.now()/1e3)+60*this.swapDeadline,e=A(String(this.nativeCoinAmount)),i=Math.floor(Number(this.slippage)*100),r=e-e*BigInt(i)/BigInt(1e4),o=this.depositAmountWei-this.depositAmountWei*BigInt(i)/BigInt(1e4);let n;try{const l={address:this.$config.public.swapRouterAddress,abi:[{name:"addLiquidityETH",type:"function",stateMutability:"payable",inputs:[{name:"token",type:"address"},{name:"amountTokenDesired",type:"uint256"},{name:"amountTokenMin",type:"uint256"},{name:"amountETHMin",type:"uint256"},{name:"to",type:"address"},{name:"deadline",type:"uint256"}],outputs:[{name:"amountToken",type:"uint256"},{name:"amountETH",type:"uint256"},{name:"liquidity",type:"uint256"}]}],functionName:"addLiquidityETH",args:[this.$config.public.chatTokenAddress,BigInt(this.depositAmountWei),BigInt(o),BigInt(r),this.address,BigInt(t)],value:BigInt(e)},c=await b(l);n=this.toast({component:g,props:{text:`Adding liquidity to the ${this.$config.public.chatTokenSymbol}-${this.$config.public.tokenSymbol} pool...`}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+c,"_blank").focus()});const w=await k(c);if(w.status==="success"){this.toast.dismiss(n),this.toast(`You have successfully provided liquidity and received ${this.$config.public.lpTokenSymbol}!`,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+c,"_blank").focus()}),this.allowanceWei=this.allowanceWei-this.depositAmountWei;let D=A(this.chatTokenBalance);this.setChatTokenBalanceWei(D-this.depositAmountWei),this.fetchLpTokenBalance(),this.depositAmount=0,this.nativeCoinAmount=0,this.nativeCoinAmountWei=null}else this.toast.dismiss(n),this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+c,"_blank").focus()}),console.log(w)}catch(l){try{let c=l.message.split("Details:")[1];c=c.split("Version: viem")[0],c=c.replace(/"/g,""),c=c.replace("execution reverted:","Error:"),console.log(c),this.toast(c,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}}finally{this.toast.dismiss(n),this.waitingDeposit=!1}},async fetchAllowance(){try{const t={address:this.$config.public.chatTokenAddress,abi:[{name:"allowance",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"allowance",args:[this.address,this.$config.public.swapRouterAddress]},e=await f(t);e!==null&&(this.allowanceWei=e)}catch(t){console.error("Error fetching allowance:",t)}},async fetchLpTokenBalance(){try{const t={address:this.$config.public.lpTokenAddress,abi:[{name:"balanceOf",type:"function",stateMutability:"view",inputs:[{name:"account",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"balanceOf",args:[this.address]},e=await f(t);e!==null&&this.setLpTokenBalanceWei(e)}catch(t){console.error("Error fetching LP token balance:",t)}},async fetchNativeCoinAmount(){try{const t={address:this.$config.public.swapRouterAddress,abi:[{name:"calculateETHForLiquidity",type:"function",stateMutability:"view",inputs:[{name:"addressToken",type:"address"},{name:"amountToken",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],functionName:"calculateETHForLiquidity",args:[this.$config.public.chatTokenAddress,A(String(this.depositAmount))]},e=await f(t);e!==null&&(this.nativeCoinAmountWei=e,this.nativeCoinAmount=T(this.nativeCoinAmountWei),Number(this.nativeCoinAmountWei)===0&&(this.ethFieldDisabled=!1))}catch(t){console.error("Error fetching native coin amount:",t)}},setMaxInputTokenAmount(){this.depositAmount=this.chatTokenBalance,this.fetchNativeCoinAmount()},fetchNativeCoinAmountWithTimeout(){this.debounce&&clearTimeout(this.debounce);const t=this;this.debounce=setTimeout(()=>{t.fetchNativeCoinAmount()},t.timeout)},async getUserNativeCoinBalanceWei(){this.address&&(this.balanceWei=await V(this.address))}},setup(){const t=x(),{address:e}=$({config:t}),{getChatTokenBalanceWei:i,setChatTokenBalanceWei:r,setLpTokenBalanceWei:o}=_(),{swapDeadline:n,slippage:l}=q(),c=S();return{address:e,getChatTokenBalanceWei:i,setChatTokenBalanceWei:r,setLpTokenBalanceWei:o,swapDeadline:n,slippage:l,toast:c}},watch:{address(t,e){t&&this.fetchAllowance()}}},ot={class:"text-center"},at={class:"input-group mt-5"},lt={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},rt=["disabled"],ct={class:"text-muted"},ut={class:"input-group mt-5"},dt={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},pt=["disabled"],mt={class:"text-muted"},ht={class:"d-flex justify-content-center mt-4 mb-4"},ft=["disabled"],gt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},bt=["disabled"],kt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},wt={key:2,disabled:"",class:"btn btn-outline-primary",type:"button"},yt={key:0},Tt={key:1},At={class:"text-center"},Wt={key:0,class:"text-center"};function vt(t,e,i,r,o,n){return d(),u(P,null,[s("p",ot," No "+a(t.$config.public.lpTokenSymbol)+"? Add liquidity to the "+a(t.$config.public.chatTokenSymbol)+"-"+a(t.$config.public.tokenSymbol)+" pool below to get some. ",1),s("div",at,[s("button",lt,a(t.$config.public.chatTokenSymbol),1),W(s("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>o.depositAmount=l),type:"text",class:"form-control",placeholder:"0.00",disabled:o.waitingApproval||o.waitingDeposit,onKeyup:e[1]||(e[1]=(...l)=>n.fetchNativeCoinAmountWithTimeout&&n.fetchNativeCoinAmountWithTimeout(...l))},null,40,rt),[[v,o.depositAmount]]),s("button",{onClick:e[2]||(e[2]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[7]||(e[7]=[s("small",null,"MAX",-1)])])]),s("small",ct,[s("em",null,[e[8]||(e[8]=m(" Balance: ",-1)),s("span",{class:"cursor-pointer hover-color",onClick:e[3]||(e[3]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l))},a(n.chatTokenBalance)+" "+a(t.$config.public.chatTokenSymbol),1)])]),s("div",ut,[s("button",dt,a(t.$config.public.tokenSymbol),1),W(s("input",{"onUpdate:modelValue":e[4]||(e[4]=l=>o.nativeCoinAmount=l),type:"text",class:"form-control",disabled:o.ethFieldDisabled},null,8,pt),[[v,o.nativeCoinAmount]])]),s("small",mt,[s("em",null,[e[9]||(e[9]=m(" Balance: ",-1)),s("span",null,a(n.nativeBalance)+" "+a(t.$config.public.tokenSymbol),1)])]),s("div",ht,[n.allowanceTooLow&&!n.nativeBalanceTooLow?(d(),u("button",{key:0,disabled:o.waitingApproval,class:"btn btn-outline-primary",type:"button",onClick:e[5]||(e[5]=(...l)=>n.approveToken&&n.approveToken(...l))},[o.waitingApproval?(d(),u("span",gt)):p("",!0),m(" Approve "+a(t.$config.public.chatTokenSymbol)+" token ",1)],8,ft)):p("",!0),!n.allowanceTooLow&&!n.nativeBalanceTooLow?(d(),u("button",{key:1,disabled:o.waitingDeposit,class:"btn btn-outline-primary",type:"button",onClick:e[6]||(e[6]=(...l)=>n.deposit&&n.deposit(...l))},[o.waitingDeposit?(d(),u("span",kt)):p("",!0),m(" Get "+a(t.$config.public.lpTokenSymbol),1)],8,bt)):p("",!0),n.nativeBalanceTooLow||n.chatBalanceTooLow?(d(),u("button",wt,[n.nativeBalanceTooLow&&!n.chatBalanceTooLow?(d(),u("span",yt,a(t.$config.public.tokenSymbol),1)):p("",!0),n.chatBalanceTooLow?(d(),u("span",Tt,a(t.$config.public.chatTokenSymbol),1)):p("",!0),e[10]||(e[10]=m(" balance too low ",-1))])):p("",!0)]),s("p",At,[n.allowanceTooLow?(d(),u("small",Wt,[s("em",null," You will need to do 2 transactions: Approve "+a(t.$config.public.chatTokenSymbol)+" token and then Get "+a(t.$config.public.lpTokenSymbol)+". ",1)])):p("",!0)])],64)}const Ct=B(st,[["render",vt]]),Bt={name:"StakingDeposit",props:["loadingStakingData","minDepositWei","maxDepositWei","lpTokenAllowanceWei"],emits:["clearClaimAmount","fetchLockedTimeLeft","updateAllowance"],data(){return{allowanceWei:BigInt(0),depositAmount:0,waitingApproval:!1,waitingDeposit:!1}},components:{AddLiquidity:Ct},mounted(){this.allowanceWei=this.lpTokenAllowanceWei||BigInt(0),this.fetchLpTokenBalance()},computed:{allowanceTooLow(){return this.allowanceWei<this.depositAmountWei},depositAmountWei(){return!this.depositAmount||Number(this.depositAmount)===0?BigInt(0):F(String(this.depositAmount),this.$config.public.lpTokenDecimals)},depositTooLow(){return!this.depositAmount||Number(this.depositAmount)===0?!0:this.depositAmountWei<(this.minDepositWei||BigInt(0))},lpTokenBalance(){return C(this.getLpTokenBalanceWei(),this.$config.public.lpTokenDecimals)},minDeposit(){return this.minDepositWei===null||this.minDepositWei===void 0||this.minDepositWei===""||this.minDepositWei==0?0:C(this.minDepositWei,18)}},methods:{async fetchLpTokenBalance(){if(this.address)try{const t={address:this.$config.public.lpTokenAddress,abi:[{name:"balanceOf",type:"function",stateMutability:"view",inputs:[{name:"account",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"balanceOf",args:[this.address]},e=await f(t);e!==null&&this.setLpTokenBalanceWei(e)}catch(t){console.error("Error fetching LP token balance:",t)}},async approveToken(){this.waitingApproval=!0;let t;try{const e={address:this.$config.public.lpTokenAddress,abi:[{name:"approve",type:"function",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]}],functionName:"approve",args:[this.$config.public.stakingContractAddress,BigInt(this.depositAmountWei)]},i=await b(e);t=this.toast({component:g,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const r=await k(i);r.status==="success"?(this.$emit("updateAllowance",this.depositAmountWei),this.toast.dismiss(t),this.toast("You have successfully approved tokens. Now proceed with staking!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingApproval=!1,this.deposit()):(this.toast.dismiss(t),this.waitingApproval=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(r))}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingApproval=!1}finally{this.toast.dismiss(t),this.waitingApproval=!1}},async deposit(){this.waitingDeposit=!0;let t;try{const e={address:this.$config.public.stakingContractAddress,abi:[{name:"deposit",type:"function",stateMutability:"nonpayable",inputs:[{name:"_assets",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],functionName:"deposit",args:[BigInt(this.depositAmountWei)]},i=await b(e);t=this.toast({component:g,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const r=await k(i);if(r.status==="success"){this.$emit("updateAllowance",BigInt(0));const o=this.getLpTokenBalanceWei();this.setLpTokenBalanceWei(o-this.depositAmountWei);const n=this.getStakeTokenBalanceWei();this.setStakeTokenBalanceWei(n+this.depositAmountWei),this.$emit("clearClaimAmount"),this.$emit("fetchLockedTimeLeft"),this.depositAmount=0,this.toast.dismiss(t),this.toast("You have successfully staked tokens!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingDeposit=!1}else this.toast.dismiss(t),this.waitingDeposit=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(r)}catch(e){try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingDeposit=!1}finally{this.toast.dismiss(t),this.waitingDeposit=!1}},setMaxInputTokenAmount(){this.depositAmount=this.lpTokenBalance}},setup(){const t=x(),{address:e}=$({config:t}),{getLpTokenBalanceWei:i,setLpTokenBalanceWei:r,getStakeTokenBalanceWei:o,setStakeTokenBalanceWei:n}=_(),l=S();return{address:e,toast:l,getLpTokenBalanceWei:i,setLpTokenBalanceWei:r,getStakeTokenBalanceWei:o,setStakeTokenBalanceWei:n}},watch:{lpTokenAllowanceWei(){this.allowanceWei=this.lpTokenAllowanceWei||BigInt(0)}}},Dt={class:"text-center"},Lt={class:"input-group mt-5"},St={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},xt=["disabled"],$t={class:"text-muted"},_t={class:"d-flex justify-content-center mt-4 mb-4"},Mt=["disabled"],It={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Et=["disabled"],Nt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Rt={class:"text-center"},Pt={key:0,class:"text-center"};function Ut(t,e,i,r,o,n){const l=L("AddLiquidity");return d(),u("div",null,[s("p",Dt," Stake "+a(t.$config.public.lpTokenSymbol)+" to receive periodic staking rewards in "+a(t.$config.public.tokenSymbol)+" tokens (min deposit: "+a(n.minDeposit)+" "+a(t.$config.public.lpTokenSymbol)+"). ",1),s("div",Lt,[s("button",St,a(t.$config.public.lpTokenSymbol),1),W(s("input",{"onUpdate:modelValue":e[0]||(e[0]=c=>o.depositAmount=c),type:"text",class:"form-control",placeholder:"0.00",disabled:o.waitingApproval||o.waitingDeposit},null,8,xt),[[v,o.depositAmount]]),s("button",{onClick:e[1]||(e[1]=(...c)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...c)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[5]||(e[5]=[s("small",null,"MAX",-1)])])]),s("small",$t,[s("em",null,[e[6]||(e[6]=m(" Balance: ",-1)),s("span",{class:"cursor-pointer hover-color",onClick:e[2]||(e[2]=(...c)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...c))},a(n.lpTokenBalance)+" "+a(t.$config.public.lpTokenSymbol),1)])]),s("div",_t,[n.allowanceTooLow?(d(),u("button",{key:0,disabled:o.waitingApproval||n.depositTooLow,class:"btn btn-outline-primary",type:"button",onClick:e[3]||(e[3]=(...c)=>n.approveToken&&n.approveToken(...c))},[i.loadingStakingData||o.waitingApproval?(d(),u("span",It)):p("",!0),e[7]||(e[7]=m(" Approve token ",-1))],8,Mt)):p("",!0),n.allowanceTooLow?p("",!0):(d(),u("button",{key:1,disabled:o.waitingDeposit||n.depositTooLow,class:"btn btn-outline-primary",type:"button",onClick:e[4]||(e[4]=(...c)=>n.deposit&&n.deposit(...c))},[i.loadingStakingData||o.waitingDeposit?(d(),u("span",Nt)):p("",!0),e[8]||(e[8]=m(" Stake ",-1))],8,Et))]),s("p",Rt,[n.allowanceTooLow?(d(),u("small",Pt,[...e[9]||(e[9]=[s("em",null," You will need to do 2 transactions: Approve token and then Stake. ",-1)])])):p("",!0)]),e[10]||(e[10]=s("hr",{class:"mb-5"},null,-1)),h(l)])}const qt=B(Bt,[["render",Ut]]),Ht={name:"RemoveLiquidity",data(){return{allowanceWei:BigInt(0),depositAmount:0,waitingApproval:!1,waitingDeposit:!1}},components:{WaitingToast:g},mounted(){this.address&&this.fetchAllowance()},computed:{allowanceTooLow(){return this.allowanceWei<this.depositAmountWei},lpTokenBalance(){return C(this.lpTokenBalanceWei||BigInt(0),this.$config.public.lpTokenDecimals||18)},depositAmountWei(){return!this.depositAmount||Number(this.depositAmount)===0?BigInt(0):A(String(this.depositAmount))},lpTokenBalanceWei(){return this.getLpTokenBalanceWei()}},methods:{async approveToken(){this.waitingApproval=!0;let t;try{const e={address:this.$config.public.lpTokenAddress,abi:[{name:"approve",type:"function",stateMutability:"nonpayable",inputs:[{name:"spender",type:"address"},{name:"amount",type:"uint256"}],outputs:[{name:"",type:"bool"}]}],functionName:"approve",args:[this.$config.public.swapRouterAddress,BigInt(this.depositAmountWei)]},i=await b(e);t=this.toast({component:g,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const r=await k(i);r.status==="success"?(this.allowanceWei=this.depositAmountWei,this.toast.dismiss(t),this.toast("You have successfully approved tokens. Now proceed with removing liquidity!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingApproval=!1,this.removeLiquidity()):(this.toast.dismiss(t),this.waitingApproval=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(r))}catch(e){console.error(e),this.waitingApproval=!1;try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}}finally{this.toast.dismiss(t),this.waitingApproval=!1}},async removeLiquidity(){this.waitingDeposit=!0;let t;try{const e={address:this.$config.public.swapRouterAddress,abi:[{name:"calculateETHAndTokensToReceive",type:"function",stateMutability:"view",inputs:[{name:"_lpToken",type:"address"},{name:"_lpAmount",type:"uint256"}],outputs:[{name:"amountToken",type:"uint256"},{name:"amountETH",type:"uint256"}]}],functionName:"calculateETHAndTokensToReceive",args:[this.$config.public.chatTokenAddress,BigInt(this.depositAmountWei)]},i=await f(e);if(!i)throw new Error("Failed to calculate amounts");const[r,o]=i,n=Math.floor(Date.now()/1e3)+60*this.swapDeadline,l=Math.floor(Number(this.slippage)*100),c=o-o*BigInt(l)/BigInt(1e4),w=r-r*BigInt(l)/BigInt(1e4),D={address:this.$config.public.swapRouterAddress,abi:[{name:"removeLiquidityETH",type:"function",stateMutability:"nonpayable",inputs:[{name:"token",type:"address"},{name:"liquidity",type:"uint256"},{name:"amountTokenMin",type:"uint256"},{name:"amountETHMin",type:"uint256"},{name:"to",type:"address"},{name:"deadline",type:"uint256"}],outputs:[{name:"amountToken",type:"uint256"},{name:"amountETH",type:"uint256"}]}],functionName:"removeLiquidityETH",args:[this.$config.public.chatTokenAddress,BigInt(this.depositAmountWei),BigInt(w),BigInt(c),this.address,BigInt(n)]},y=await b(D);t=this.toast({component:g,props:{text:`Removing liquidity from the ${this.$config.public.lpTokenSymbol}-${this.$config.public.tokenSymbol} pool...`}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+y,"_blank").focus()});const M=await k(y);if(M.status==="success"){this.toast.dismiss(t),this.toast(`You have successfully removed liquidity and received ${this.$config.public.lpTokenSymbol} & ${this.$config.public.tokenSymbol}!`,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+y,"_blank").focus()}),this.allowanceWei=this.allowanceWei-this.depositAmountWei;const H=this.getLpTokenBalanceWei()-this.depositAmountWei;this.setLpTokenBalanceWei(H),this.depositAmount=0}else this.toast.dismiss(t),this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+y,"_blank").focus()}),console.log(M)}catch(e){console.error(e);try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}}finally{this.toast.dismiss(t),this.waitingDeposit=!1}},async fetchAllowance(){try{const t={address:this.$config.public.lpTokenAddress,abi:[{name:"allowance",type:"function",stateMutability:"view",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]}],functionName:"allowance",args:[this.address,this.$config.public.swapRouterAddress]},e=await f(t);e&&(this.allowanceWei=e)}catch(t){console.error("Failed to fetch allowance:",t)}},setMaxInputTokenAmount(){this.depositAmount=this.lpTokenBalance}},setup(){const t=x(),{address:e}=$({config:t}),{getLpTokenBalanceWei:i,setLpTokenBalanceWei:r}=_(),{slippage:o,swapDeadline:n}=q(),l=S();return{address:e,slippage:o,swapDeadline:n,toast:l,getLpTokenBalanceWei:i,setLpTokenBalanceWei:r}},watch:{address(t,e){t&&this.fetchAllowance()}}},Vt={class:"text-center"},Ft={class:"input-group mt-5"},jt={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},Yt=["disabled"],Ot={class:"text-muted"},Xt={class:"d-flex justify-content-center mt-4 mb-4"},Gt=["disabled"],zt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Kt=["disabled"],Jt={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},Qt={class:"text-center"},Zt={key:0,class:"text-center"};function te(t,e,i,r,o,n){return d(),u(P,null,[s("p",Vt," Remove liquidity and get back "+a(t.$config.public.chatTokenSymbol)+" & "+a(t.$config.public.tokenSymbol)+" tokens. ",1),s("div",Ft,[s("button",jt,a(t.$config.public.lpTokenSymbol),1),W(s("input",{"onUpdate:modelValue":e[0]||(e[0]=l=>o.depositAmount=l),type:"text",class:"form-control",placeholder:"0.00",disabled:o.waitingApproval||o.waitingDeposit},null,8,Yt),[[v,o.depositAmount]]),s("button",{onClick:e[1]||(e[1]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[5]||(e[5]=[s("small",null,"MAX",-1)])])]),s("small",Ot,[s("em",null,[e[6]||(e[6]=m(" Balance: ",-1)),s("span",{class:"cursor-pointer hover-color",onClick:e[2]||(e[2]=(...l)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...l))},a(n.lpTokenBalance)+" "+a(t.$config.public.lpTokenSymbol),1)])]),s("div",Xt,[n.allowanceTooLow?(d(),u("button",{key:0,disabled:o.waitingApproval,class:"btn btn-outline-primary",type:"button",onClick:e[3]||(e[3]=(...l)=>n.approveToken&&n.approveToken(...l))},[o.waitingApproval?(d(),u("span",zt)):p("",!0),m(" Approve "+a(t.$config.public.lpTokenSymbol),1)],8,Gt)):p("",!0),n.allowanceTooLow?p("",!0):(d(),u("button",{key:1,disabled:o.waitingDeposit,class:"btn btn-outline-primary",type:"button",onClick:e[4]||(e[4]=(...l)=>n.removeLiquidity&&n.removeLiquidity(...l))},[o.waitingDeposit?(d(),u("span",Jt)):p("",!0),e[7]||(e[7]=m(" Remove liquidity ",-1))],8,Kt))]),s("p",Qt,[n.allowanceTooLow?(d(),u("small",Zt,[s("em",null," You will need to do 2 transactions: Approve "+a(t.$config.public.lpTokenSymbol)+" and then Remove liquidity. ",1)])):p("",!0)])],64)}const ee=B(Ht,[["render",te]]),ie={name:"StakingWithdrawal",props:["loadingStakingData","lockedTimeLeft","minDepositWei"],emits:["clearClaimAmount"],data(){return{withdrawalAmount:0,waitingWithdrawal:!1}},components:{RemoveLiquidity:ee},mounted(){},computed:{isWithdrawalAmountNullOrEmpty(){return this.withdrawalAmount===null||this.withdrawalAmount===""||this.withdrawalAmount==0||Number(this.withdrawalAmount)===0},lockedSecondsHumanReadable(){const t=Number(this.lockedTimeLeft),e=Math.floor(t/60),i=Math.floor(e/60),r=Math.floor(i/24);return r>0?`${r+1} days`:i>0?`${i+1} hours`:e>0?`${e+1} minutes`:`${t+1} seconds`},minDeposit(){return C(this.minDepositWei||BigInt(0),this.$config.public.lpTokenDecimals||18)},stakeTokenBalance(){return C(this.getStakeTokenBalanceWei(),this.$config.public.stakeTokenDecimals||18)},withdrawalAmountWei(){return!this.withdrawalAmount||Number(this.withdrawalAmount)===0?BigInt(0):A(String(this.withdrawalAmount))},withdrawalIncorrect(){return Number(this.lockedTimeLeft)>0?{error:!0,message:"Your staked tokens are still locked for "+this.lockedSecondsHumanReadable+"."}:this.withdrawalAmountWei>this.getStakeTokenBalanceWei?{error:!0,message:"The amount exceeds your staked token balance."}:this.withdrawalAmountWei<this.getStakeTokenBalanceWei&&this.getStakeTokenBalanceWei-this.withdrawalAmountWei<(this.minDepositWei||BigInt(0))?{error:!0,message:"You cannot unstake this amount because the staked balance left will be less than the minimum required staking amount ("+String(Number(this.minDeposit))+" tokens)."}:{error:!1,message:""}}},methods:{async withdrawal(){this.waitingWithdrawal=!0;let t;try{const e={address:this.$config.public.stakingContractAddress,abi:[{name:"withdraw",type:"function",stateMutability:"nonpayable",inputs:[{name:"_assets",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}],functionName:"withdraw",args:[BigInt(this.withdrawalAmountWei)]},i=await b(e);t=this.toast({component:g,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()});const r=await k(i);r.status==="success"?(this.addToStakeTokenBalanceWei(-this.withdrawalAmountWei),this.$emit("clearClaimAmount"),this.toast.dismiss(t),this.toast("You have successfully unstaked tokens!",{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),this.waitingWithdrawal=!1):(this.toast.dismiss(t),this.waitingWithdrawal=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+i,"_blank").focus()}),console.log(r))}catch(e){console.error(e);try{let i=e.message.split("Details:")[1];i=i.split("Version: viem")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),i=i.replace("PeriodicEthRewards: ",""),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waitingWithdrawal=!1}finally{this.toast.dismiss(t),this.waitingWithdrawal=!1}},setMaxInputTokenAmount(){this.withdrawalAmount=this.stakeTokenBalance}},setup(){const t=x(),{address:e}=$({config:t}),{getStakeTokenBalanceWei:i,addToStakeTokenBalanceWei:r}=_(),o=S();return{address:e,toast:o,getStakeTokenBalanceWei:i,addToStakeTokenBalanceWei:r}}},ne={class:"text-center"},se={class:"input-group mt-5"},oe={class:"btn btn-primary",type:"button","aria-expanded":"false",disabled:""},ae=["disabled"],le={class:"text-muted"},re={class:"d-flex justify-content-center mt-4 mb-4"},ce=["disabled"],ue={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},de={key:0,class:"alert alert-warning text-center text-dark",role:"alert"};function pe(t,e,i,r,o,n){const l=L("RemoveLiquidity");return d(),u("div",null,[s("p",ne," Unstake "+a(t.$config.public.stakeTokenSymbol)+" to receive back "+a(t.$config.public.lpTokenSymbol)+" (it will also auto-claim any remaining rewards). ",1),s("div",se,[s("button",oe,a(t.$config.public.stakeTokenSymbol),1),W(s("input",{"onUpdate:modelValue":e[0]||(e[0]=c=>o.withdrawalAmount=c),type:"text",class:"form-control",placeholder:"0.00",disabled:o.waitingWithdrawal},null,8,ae),[[v,o.withdrawalAmount]]),s("button",{onClick:e[1]||(e[1]=(...c)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...c)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...e[4]||(e[4]=[s("small",null,"MAX",-1)])])]),s("small",le,[s("em",null,[e[5]||(e[5]=m(" Balance: ",-1)),s("span",{class:"cursor-pointer hover-color",onClick:e[2]||(e[2]=(...c)=>n.setMaxInputTokenAmount&&n.setMaxInputTokenAmount(...c))},a(n.stakeTokenBalance)+" "+a(t.$config.public.stakeTokenSymbol),1)])]),s("div",re,[s("button",{disabled:o.waitingWithdrawal||n.withdrawalIncorrect.error||n.isWithdrawalAmountNullOrEmpty,class:"btn btn-outline-primary",type:"button",onClick:e[3]||(e[3]=(...c)=>n.withdrawal&&n.withdrawal(...c))},[i.loadingStakingData||o.waitingWithdrawal?(d(),u("span",ue)):p("",!0),e[6]||(e[6]=m(" Unstake ",-1))],8,ce)]),n.withdrawalIncorrect.error?(d(),u("div",de,a(n.withdrawalIncorrect.message),1)):p("",!0),e[7]||(e[7]=s("hr",null,null,-1)),h(l)])}const me=B(ie,[["render",pe]]),he={name:"Stake",data(){return{claimAmountWei:0,claimRewardsTotalWei:0,currentTab:"deposit",futureRewardsWei:0,lastClaimPeriod:0,loadingStakingData:!1,lockedTimeLeft:0,minDepositWei:0,maxDepositWei:0,periodLength:0,lpTokenAllowanceWei:0}},components:{StakingClaim:nt,StakingDeposit:qt,StakingWithdrawal:me},mounted(){this.currentTab=localStorage.getItem("stakeCurrentTab"),this.currentTab||(this.currentTab="deposit"),this.address&&this.fetchStakingData()},methods:{changeCurrentTab(t){this.currentTab=t,localStorage.setItem("stakeCurrentTab",t)},clearClaimAmount(){this.claimAmountWei=0},async fetchClaimRewardsTotal(){try{const t=await f({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"claimRewardsTotal",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"claimRewardsTotal"});this.claimRewardsTotalWei=t||0}catch(t){console.error("Error fetching claim rewards total:",t),this.claimRewardsTotalWei=0}},async fetchFutureRewards(){try{const t=await f({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"futureRewards",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"futureRewards"});this.futureRewardsWei=t||0}catch(t){console.error("Error fetching future rewards:",t),this.futureRewardsWei=0}},async fetchLockedTimeLeft(){try{const t=await f({address:this.$config.public.stakingContractAddress,abi:[{inputs:[{type:"address",name:"_user"}],name:"getLockedTimeLeft",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"getLockedTimeLeft",args:[this.address]});this.lockedTimeLeft=t||0}catch(t){console.error("Error fetching locked time left:",t),this.lockedTimeLeft=0}},async fetchPreviewClaim(){try{const t=await f({address:this.$config.public.stakingContractAddress,abi:[{inputs:[{type:"address",name:"_claimer"}],name:"previewClaim",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"previewClaim",args:[this.address]});this.claimAmountWei=t||0}catch(t){console.error("Error fetching preview claim:",t),this.claimAmountWei=0}},async fetchLpTokenBalance(){try{const t=await f({address:this.$config.public.lpTokenAddress,abi:[{inputs:[{type:"address",name:"_owner"}],name:"balanceOf",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"balanceOf",args:[this.address]});this.setLpTokenBalanceWei(t||BigInt(0))}catch(t){console.error("Error fetching LP token balance:",t),this.setLpTokenBalanceWei(BigInt(0))}},async fetchLpTokenAllowance(){try{const t=await this.readData({address:this.$config.public.lpTokenAddress,abi:[{inputs:[{type:"address",name:"_owner"},{type:"address",name:"_spender"}],name:"allowance",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"allowance",args:[this.address,this.$config.public.stakingContractAddress]});this.lpTokenAllowanceWei=t||0}catch(t){console.error("Error fetching LP token allowance:",t),this.lpTokenAllowanceWei=0}},async fetchStakeTokenBalance(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[{type:"address",name:"_owner"}],name:"balanceOf",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"balanceOf",args:[this.address]});this.setStakeTokenBalanceWei(t||BigInt(0))}catch(t){console.error("Error fetching stake token balance:",t),this.setStakeTokenBalanceWei(BigInt(0))}},async fetchMinDeposit(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"minDeposit",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"minDeposit"});this.minDepositWei=t||0}catch(t){console.error("Error fetching min deposit:",t),this.minDepositWei=0}},async fetchLastClaimPeriod(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"lastClaimPeriod",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"lastClaimPeriod"});this.lastClaimPeriod=t||0}catch(t){console.error("Error fetching last claim period:",t),this.lastClaimPeriod=0}},async fetchPeriodLength(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"periodLength",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"periodLength"});this.periodLength=t||0}catch(t){console.error("Error fetching period length:",t),this.periodLength=0}},async fetchMaxDeposit(){try{const t=await this.readData({address:this.$config.public.stakingContractAddress,abi:[{inputs:[],name:"maxDeposit",outputs:[{type:"uint256",name:""}],stateMutability:"view",type:"function"}],functionName:"maxDeposit"});this.maxDepositWei=t||0}catch(t){console.error("Error fetching max deposit:",t),this.maxDepositWei=0}},async fetchStakingData(){this.loadingStakingData=!0;try{await this.fetchPreviewClaim(),await this.fetchLpTokenBalance(),await this.fetchLpTokenAllowance(),await this.fetchStakeTokenBalance(),await this.fetchLockedTimeLeft(),await this.fetchMinDeposit(),this.loadingStakingData=!1,await this.fetchLastClaimPeriod(),await this.fetchPeriodLength(),await this.fetchMaxDeposit(),await this.fetchClaimRewardsTotal(),await this.fetchFutureRewards()}catch(t){console.error("Error fetching staking data:",t),this.loadingStakingData=!1}},updateAllowance(t){this.lpTokenAllowanceWei=Number(t)},updateLastClaimPeriod(){this.lastClaimPeriod=Math.floor(Date.now()/1e3),this.fetchPreviewClaim(),this.fetchClaimRewardsTotal(),this.fetchFutureRewards()},updateStakeTokenBalance(t){const e=this.getStakeTokenBalanceWei();this.setStakeTokenBalanceWei(e+t)}},watch:{address(){this.address&&this.fetchStakingData()}},setup(){const t=x(),{address:e}=$({config:t}),{getLpTokenBalanceWei:i,setLpTokenBalanceWei:r,getStakeTokenBalanceWei:o,setStakeTokenBalanceWei:n}=_();return{address:e,getLpTokenBalanceWei:i,setLpTokenBalanceWei:r,getStakeTokenBalanceWei:o,setStakeTokenBalanceWei:n}}},fe={class:"card border scroll-500"},ge={class:"card-body"},be={class:"fs-3"},ke={class:"nav nav-tabs nav-fill"},we={class:"nav-item"},ye={class:"nav-item"},Te={class:"nav-item"},Ae={class:"tab-content mt-3"},We={key:0},ve={class:"d-flex justify-content-center mt-5"},Ce={class:"col-12 col-lg-8"},Be={key:1},De={class:"d-flex justify-content-center mt-5"},Le={class:"col-12 col-lg-8"},Se={key:2},xe={class:"d-flex justify-content-center mt-5"},$e={class:"col-12 col-lg-8"};function _e(t,e,i,r,o,n){const l=j,c=Y,w=O,D=L("StakingDeposit"),y=L("StakingClaim"),M=L("StakingWithdrawal");return d(),u(P,null,[h(w,null,{default:U(()=>[h(l,null,{default:U(()=>[m("Stake and Earn | "+a(t.$config.public.projectMetadataTitle),1)]),_:1}),h(c,{property:"og:title",content:"Stake and Earn"}),h(c,{name:"description",content:"Stake and earn "+t.$config.public.tokenSymbol+" on "+t.$config.public.projectName+"!"},null,8,["content"]),h(c,{property:"og:image",content:t.$config.public.projectUrl+t.$config.public.previewImageStake},null,8,["content"]),h(c,{property:"og:description",content:"Stake and earn "+t.$config.public.tokenSymbol+" on "+t.$config.public.projectName+"!"},null,8,["content"]),h(c,{name:"twitter:image",content:t.$config.public.projectUrl+t.$config.public.previewImageStake},null,8,["content"]),h(c,{name:"twitter:description",content:"Stake and earn "+t.$config.public.tokenSymbol+" on "+t.$config.public.projectName+"!"},null,8,["content"])]),_:1}),s("div",fe,[s("div",ge,[s("p",be,[s("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:e[0]||(e[0]=I=>t.$router.back())})]),s("ul",ke,[s("li",we,[s("button",{class:R(["nav-link",o.currentTab==="deposit"?"active":""]),onClick:e[1]||(e[1]=I=>n.changeCurrentTab("deposit"))}," Stake ",2)]),s("li",ye,[s("button",{class:R(["nav-link",o.currentTab==="claim"?"active":""]),onClick:e[2]||(e[2]=I=>n.changeCurrentTab("claim"))}," Claim ",2)]),s("li",Te,[s("button",{class:R(["nav-link",o.currentTab==="withdraw"?"active":""]),onClick:e[3]||(e[3]=I=>n.changeCurrentTab("withdraw"))}," Unstake ",2)])]),s("div",Ae,[o.currentTab==="deposit"?(d(),u("div",We,[s("div",ve,[s("div",Ce,[h(D,{loadingStakingData:o.loadingStakingData,minDepositWei:o.minDepositWei,maxDepositWei:o.maxDepositWei,lpTokenAllowanceWei:o.lpTokenAllowanceWei,onClearClaimAmount:n.clearClaimAmount,onFetchLockedTimeLeft:n.fetchLockedTimeLeft,onUpdateAllowance:n.updateAllowance},null,8,["loadingStakingData","minDepositWei","maxDepositWei","lpTokenAllowanceWei","onClearClaimAmount","onFetchLockedTimeLeft","onUpdateAllowance"])])])])):p("",!0),o.currentTab==="claim"?(d(),u("div",Be,[s("div",De,[s("div",Le,[h(y,{loadingStakingData:o.loadingStakingData,claimAmountWei:o.claimAmountWei,claimRewardsTotalWei:o.claimRewardsTotalWei,futureRewardsWei:o.futureRewardsWei,lastClaimPeriod:o.lastClaimPeriod,minDepositWei:o.minDepositWei,periodLength:o.periodLength,onClearClaimAmount:n.clearClaimAmount,onUpdateLastClaimPeriod:n.updateLastClaimPeriod},null,8,["loadingStakingData","claimAmountWei","claimRewardsTotalWei","futureRewardsWei","lastClaimPeriod","minDepositWei","periodLength","onClearClaimAmount","onUpdateLastClaimPeriod"])])])])):p("",!0),o.currentTab==="withdraw"?(d(),u("div",Se,[s("div",xe,[s("div",$e,[h(M,{loadingStakingData:o.loadingStakingData,lockedTimeLeft:o.lockedTimeLeft,minDepositWei:o.minDepositWei,onClearClaimAmount:n.clearClaimAmount},null,8,["loadingStakingData","lockedTimeLeft","minDepositWei","onClearClaimAmount"])])])])):p("",!0)])])])],64)}const Ie=B(he,[["render",_e]]);export{Ie as default};
