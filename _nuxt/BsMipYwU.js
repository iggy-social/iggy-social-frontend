import{_ as A,a6 as w,a3 as S,W as k,S as R,C as I,l as N,j as E,i as M,z as F,$ as D,Q as C,a7 as U,r as T,c,o as l,a as s,g as u,n as f,v as b,d as g,t as p,F as _,R as L,f as v,b as m,w as x,T as V,M as W,H as j,E as B}from"#entry";import{t as H}from"./RD6MkrwO.js";const P={name:"SendTokensComponent",props:["recipient","tokens"],data(){return{filterTextInput:"",hasBlankCharacter:!1,inputReceiver:null,inputToken:null,inputTokenAmount:null,inputTokenBalance:null,recipientAddress:null,tokenList:[],waiting:!1}},components:{ConnectWalletButton:I,SwitchChainButton:R,WaitingToast:k},mounted(){this.inputReceiver=this.recipient,this.processRecipient(this.recipient),this.findBlankCharacter(),this.tokenList=this.tokens.tokens,this.selectInputToken(this.tokenList[0])},computed:{filteredTokensInput(){const i=new RegExp(this.filterTextInput,"i");return this.tokenList.filter(t=>i.test(t.symbol))},formatInputTokenBalance(){return this.inputTokenBalance?this.inputTokenBalance==0?0:this.inputTokenBalance>100?Number.parseFloat(Number(this.inputTokenBalance).toFixed(2)):Number.parseFloat(Number(this.inputTokenBalance).toFixed(8)):0},inputAmountLessThanBalance(){return this.inputTokenAmount&&this.inputTokenBalance?Number(this.inputTokenAmount)<=Number(this.inputTokenBalance):!1},isSupportedChain(){return this.chainId==this.$config.public.supportedChainId}},methods:{getTokenBalance:S,hasTextBlankCharacters:w,findBlankCharacter(){this.hasBlankCharacter=!1,this.hasBlankCharacter=w(this.inputReceiver)},async processRecipient(i){if(i)if(U(i))this.recipientAddress=i;else{const t=String(i).trim().toLowerCase().replace(this.$config.public.tldName,""),e={address:this.$config.public.punkTldAddress,abi:[{name:"getDomainHolder",type:"function",stateMutability:"view",inputs:[{name:"domain",type:"string"}],outputs:[{name:"",type:"address"}]}],functionName:"getDomainHolder",args:[t]};try{this.recipientAddress=await this.readData(e)}catch(n){console.error("Error fetching domain holder:",n),this.recipientAddress=null}}},async selectInputToken(i){if(this.inputToken=i,this.inputTokenAmount=null,this.isActivated)try{this.inputTokenBalance=await this.getTokenBalance(i,this.address)}catch(t){console.error("Failed to fetch token balance:",t),this.inputTokenBalance="0";let e="Could not fetch token balance. Showing 0 balance.";t&&typeof t=="object"&&"message"in t&&typeof t.message=="string"&&(t.message.includes("ContractFunctionExecutionError")?e="Token contract call failed. This might mean the contract has restrictions or you have 0 balance.":t.message.includes("ContractFunctionRevertedError")&&(e="Token contract reverted. This usually means the user has 0 balance or the contract has restrictions.")),this.toast(e,{type:"info"})}},async send(){if(this.inputReceiver.includes(".")&&!this.inputReceiver.endsWith(this.$config.public.tldName))return this.toast.error("Invalid domain name. Only "+this.$config.public.tldName+" domains are supported.");if(this.waiting=!0,await this.processRecipient(this.inputReceiver),this.recipientAddress==C)return this.waiting=!1,this.toast.error("This domain name does not exist");this.inputToken.address==C?this.sendNativeTokens():this.sendErc20Tokens()},async sendErc20Tokens(){const i={address:this.inputToken.address,abi:D,functionName:"transfer",args:[this.recipientAddress,F(this.inputTokenAmount,this.inputToken.decimals)]};let t;try{const e=await this.writeData(i);t=this.toast({component:k,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e,"_blank").focus()});const n=await this.waitForTxReceipt(e);n.status==="success"||n.status===1?(this.toast.dismiss(t),this.toast("You have successfully sent "+String(this.inputTokenAmount)+" "+this.inputToken.symbol+" to "+this.inputReceiver,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e,"_blank").focus()}),this.subtractInputTokenBalance(),this.waiting=!1):(this.toast.dismiss(t),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e,"_blank").focus()}),console.log(n))}catch(e){console.error(e);try{let n=e.message.split("Details:")[1];n=n.split("Version: viem")[0],n=n.replace(/"/g,""),n=n.replace("execution reverted:","Error:"),console.log(n),this.toast(n,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(t),this.waiting=!1}},async sendNativeTokens(){let i;try{const t=await this.sendNativeCoin(this.recipientAddress,this.inputTokenAmount);i=this.toast({component:k,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t,"_blank").focus()});const e=await this.waitForTxReceipt(t);e.status==="success"||e.status===1?(this.toast.dismiss(i),this.toast("You have successfully sent "+String(this.inputTokenAmount)+" "+this.inputToken.symbol+" to "+this.inputReceiver,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t,"_blank").focus()}),this.subtractInputTokenBalance(),this.waiting=!1):(this.toast.dismiss(i),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t,"_blank").focus()}),console.log(e))}catch(t){console.error(t);try{let e=t.message.split("Details:")[1];e=e.split("Version: viem")[0],e=e.replace(/"/g,""),e=e.replace("execution reverted:","Error:"),console.log(e),this.toast(e,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}finally{this.toast.dismiss(i),this.waiting=!1}},setMaxInputTokenAmount(){this.inputTokenAmount=String(this.inputTokenBalance)},subtractInputTokenBalance(){this.inputTokenBalance=Number(this.inputTokenBalance)-Number(this.inputTokenAmount)}},setup(){const{address:i,chainId:t,isActivated:e}=N(),{readData:n,sendNativeCoin:a,waitForTxReceipt:o,writeData:d}=E(),h=M();return{address:i,chainId:t,isActivated:e,toast:h,readData:n,sendNativeCoin:a,waitForTxReceipt:o,writeData:d}},watch:{async isActivated(){this.address&&this.inputToken&&(this.inputTokenBalance=await this.getTokenBalance(this.inputToken,this.address))}}},Q={class:"mb-3"},q={class:"input-group"},z={key:0,class:"input-group-text",id:"basic-addon3"},Y={key:0,class:"form-text",id:"basic-addon4"},K={class:"input-group mb-1 mt-3"},O={class:"btn btn-primary dropdown-toggle",type:"button","data-bs-toggle":"dropdown","aria-expanded":"false"},X={class:"dropdown-menu p-2"},G=["onClick"],J={class:"cursor-pointer hover-color"},Z={class:"d-flex justify-content-center mt-4"},$={key:1,disabled:!0,class:"btn btn-outline-primary",type:"button"},tt=["disabled"],et={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},nt={key:3,disabled:!0,class:"btn btn-outline-primary",type:"button"};function st(i,t,e,n,a,o){const d=T("ConnectWalletButton"),h=T("SwitchChainButton");return l(),c("div",null,[s("div",Q,[s("div",q,[a.hasBlankCharacter?(l(),c("span",z,[...t[7]||(t[7]=[s("i",{class:"bi bi-exclamation-triangle-fill"},null,-1)])])):u("",!0),f(s("input",{"onUpdate:modelValue":t[0]||(t[0]=r=>a.inputReceiver=r),type:"text",class:"form-control",id:"basic-url","aria-describedby":"basic-addon3 basic-addon4",placeholder:"Enter recipient's domain name or address",onKeyup:t[1]||(t[1]=(...r)=>o.findBlankCharacter&&o.findBlankCharacter(...r))},null,544),[[b,a.inputReceiver]])]),a.hasBlankCharacter?(l(),c("div",Y,[t[8]||(t[8]=s("i",{class:"bi bi-exclamation-triangle-fill"},null,-1)),g(" This domain name contains a blank character: "+p(encodeURIComponent(a.inputReceiver))+". Proceed with caution. ",1)])):u("",!0)]),s("div",K,[s("button",O,p(a.inputToken?.symbol),1),s("ul",X,[f(s("input",{class:"form-control mb-2",placeholder:"Filter tokens","onUpdate:modelValue":t[2]||(t[2]=r=>a.filterTextInput=r)},null,512),[[b,a.filterTextInput]]),(l(!0),c(_,null,L(o.filteredTokensInput,r=>(l(),c("li",{key:r.address,class:"cursor-pointer"},[s("span",{onClick:y=>o.selectInputToken(r),class:"dropdown-item"},p(r.symbol)+" ("+p(r.name)+")",9,G)]))),128))]),f(s("input",{"onUpdate:modelValue":t[3]||(t[3]=r=>a.inputTokenAmount=r),type:"text",class:"form-control",placeholder:"0.00"},null,512),[[b,a.inputTokenAmount]]),s("button",{onClick:t[4]||(t[4]=(...r)=>o.setMaxInputTokenAmount&&o.setMaxInputTokenAmount(...r)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},[...t[9]||(t[9]=[s("small",null,"MAX",-1)])])]),s("small",{onClick:t[5]||(t[5]=(...r)=>o.setMaxInputTokenAmount&&o.setMaxInputTokenAmount(...r))},[t[10]||(t[10]=s("em",null,"Balance: ",-1)),s("em",J,p(o.formatInputTokenBalance)+" "+p(a.inputToken?.symbol),1)]),s("div",Z,[n.isActivated?u("",!0):(l(),v(d,{key:0,customClass:"btn-outline-primary",btnText:"Connect wallet"})),n.isActivated&&!a.inputTokenAmount&&o.isSupportedChain?(l(),c("button",$," Send tokens ")):u("",!0),n.isActivated&&a.inputTokenAmount&&o.inputAmountLessThanBalance&&o.isSupportedChain?(l(),c("button",{key:2,disabled:a.waiting||!a.inputToken||!a.inputTokenAmount||!n.isActivated||!o.inputAmountLessThanBalance||!a.inputReceiver||!o.isSupportedChain,class:"btn btn-outline-primary",type:"button",onClick:t[6]||(t[6]=(...r)=>o.send&&o.send(...r))},[a.waiting?(l(),c("span",et)):u("",!0),t[11]||(t[11]=g(" Send tokens ",-1))],8,tt)):u("",!0),n.isActivated&&a.inputTokenAmount&&!o.inputAmountLessThanBalance&&o.isSupportedChain?(l(),c("button",nt," Balance too low ")):u("",!0),n.isActivated&&!o.isSupportedChain?(l(),v(h,{key:4})):u("",!0)])])}const it=A(P,[["render",st]]),ot={name:"SendTokens",components:{SendTokensComponent:it},computed:{getQueryRecipient(){return(this._.provides[B]||this.$route).query.to?(this._.provides[B]||this.$route).query.to:null}},setup(){return{tokens:H}}},at={class:"scroll-500"},rt={class:"card border"},lt={class:"card-body mb-3"},ct={class:"fs-3"},ut={class:"d-flex justify-content-center mt-5"},pt={class:"col-12 col-lg-8"};function dt(i,t,e,n,a,o){const d=V,h=W,r=j,y=T("SendTokensComponent");return l(),c(_,null,[m(r,null,{default:x(()=>[m(d,null,{default:x(()=>[g("Send tokens | "+p(i.$config.public.projectMetadataTitle),1)]),_:1}),m(h,{property:"og:title",content:"Send tokens | "+i.$config.public.projectMetadataTitle},null,8,["content"])]),_:1}),s("div",at,[s("div",rt,[s("div",lt,[s("p",ct,[s("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:t[0]||(t[0]=ht=>i.$router.back())})]),t[1]||(t[1]=s("h3",{class:"mt-3"},"Send tokens",-1)),s("div",ut,[s("div",pt,[m(y,{tokens:n.tokens,recipient:o.getQueryRecipient},null,8,["tokens","recipient"])])])])])])],64)}const ft=A(ot,[["render",dt]]);export{ft as default};
