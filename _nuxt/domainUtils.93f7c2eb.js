import{I as f,g as o}from"./Image.4a762895.js";import{I as c,C as m,u}from"./ethers.5e9a97a6.js";import{f as g,s as h}from"./storageUtils.37096451.js";import{a as l,o as p,b as w,ac as d}from"./entry.02f14eb1.js";const P={name:"ProfileImage",props:["domain","image"],components:{Image:f},data(){return{imgPath:null,defaultImage:"/img/user/anon.svg"}},created(){this.imgPath=this.defaultImage},mounted(){this.fetchProfilePicture()},computed:{domainName(){return this.domain?this.domain.replace(this.$config.tldName,""):null}},methods:{async fetchProfilePicture(){if(this.image){const t=await o(this.image);if(t.success)return this.imgPath=t.url}if(this.domainName){const t=g(window,this.domainName,"img",this.$config.expiryPfps);if(t){const e=await o(t.image);if(e.success)return this.imgPath=e.url}else{let e=this.$getFallbackProvider(this.$config.supportedChainId);this.isActivated&&this.chainId===this.$config.supportedChainId&&(e=this.signer);const i=new c(["function getDomainData(string calldata _domainName) public view returns(string memory) "]),n=new m(this.$config.punkTldAddress,i,e);try{const a=await n.getDomainData(String(this.domainName).toLowerCase());if(a){const s=JSON.parse(a);if(s?.image){const r=await o(s.image);if(r.success)return this.imgPath=r.url,h(window,this.domainName,{image:s.image},"img")}}}catch(a){console.error("Error fetching domain data:",a)}}}return this.imgPath=this.defaultImage}},setup(){const{signer:t,chainId:e,isActivated:i}=u();return{signer:t,chainId:e,isActivated:i}},watch:{domain(t,e){t!=e&&this.fetchProfilePicture()},image(t,e){t!=e&&(this.imgPath="https://placeholder.pics/svg/300/32BBFF/ffffff/loading",this.fetchProfilePicture())}}},I=["src","alt"];function D(t,e,i,n,a,s){return p(),w("img",{src:a.imgPath,alt:s.domainName,class:"rounded-circle"},null,8,I)}const $=l(P,[["render",D]]);async function y(t,e){const i=d();let n=e;const a=new c(["function defaultNames(address) view returns (string)"]);return await new m(i.punkTldAddress,a,n).defaultNames(t)}async function A(t,e){const i=d();let n=e;t.includes(i.tldName)&&(t=t.replace(i.tldName,""));const a=new c(["function getDomainHolder(string memory) public view returns(address)"]);return await new m(i.punkTldAddress,a,n).getDomainHolder(t)}export{$ as P,A as a,y as g};
