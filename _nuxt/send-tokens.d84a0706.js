import{H as R,T as E,M as N}from"./components.356fe1b9.js";import{t as M}from"./tokens.8eeff16c.js";import{I as U,C as k,l as y,u as L}from"./ethers.8328e202.js";import{a as I,aq as W,ad as w,ae as V,r as T,o as c,b as l,f as n,l as u,af as f,ag as b,i as g,t as p,F as S,aj as F,c as C,e as d,w as B}from"./entry.4c969726.js";import{a as j,E as x}from"./balanceUtils.12f63e93.js";import{h as v}from"./textUtils.7a2f6a9b.js";import{W as A}from"./WaitingToast.460d017b.js";import{C as H,S as D}from"./SwitchChainButton.868a1ec4.js";import"./composables.e96dca6d.js";const P={name:"SendTokensComponent",props:["recipient","tokens"],data(){return{filterTextInput:"",hasBlankCharacter:!1,inputReceiver:null,inputToken:null,inputTokenAmount:null,inputTokenBalance:null,recipientAddress:null,tokenList:[],waiting:!1}},components:{ConnectWalletButton:H,SwitchChainButton:D},mounted(){this.inputReceiver=this.recipient,this.processRecipient(this.recipient),this.findBlankCharacter(),this.tokenList=this.tokens.tokens,this.selectInputToken(this.tokenList[0])},computed:{filteredTokensInput(){const e=new RegExp(this.filterTextInput,"i");return this.tokenList.filter(t=>e.test(t.symbol))},formatInputTokenBalance(){return this.inputTokenBalance?this.inputTokenBalance==0?0:this.inputTokenBalance>100?Number(this.inputTokenBalance).toFixed(2):Number(this.inputTokenBalance).toFixed(4):0},inputAmountLessThanBalance(){return this.inputTokenAmount&&this.inputTokenBalance?Number(this.inputTokenAmount)<=Number(this.inputTokenBalance):!1},isSupportedChain(){return this.chainId==this.$config.public.supportedChainId}},methods:{getTokenBalance:j,hasTextBlankCharacters:v,findBlankCharacter(){this.hasBlankCharacter=!1,this.hasBlankCharacter=v(this.inputReceiver)},async processRecipient(e){if(e)if(W(e))this.recipientAddress=e;else{const t=String(e).trim().toLowerCase().replace(this.$config.public.tldName,"");let i=this.$getFallbackProvider(this.$config.public.supportedChainId);this.isActivated&&this.chainId===this.$config.public.supportedChainId&&(i=this.signer);const r=new U(["function getDomainHolder(string) view returns (address)"]),s=new k(this.$config.public.punkTldAddress,r,i);this.recipientAddress=await s.getDomainHolder(t)}},async selectInputToken(e){this.inputToken=e,this.inputTokenAmount=null,this.signer&&(this.inputTokenBalance=await this.getTokenBalance(e,this.address,this.signer))},async send(){if(this.inputReceiver.includes(".")&&!this.inputReceiver.endsWith(this.$config.public.tldName))return this.toast.error("Invalid domain name. Only "+this.$config.public.tldName+" domains are supported.");if(this.waiting=!0,await this.processRecipient(this.inputReceiver),this.recipientAddress==w)return this.waiting=!1,this.toast.error("This domain name does not exist");this.inputToken.address==w?this.sendNativeCoin():this.sendErc20Tokens()},async sendErc20Tokens(){const e=new k(this.inputToken.address,x,this.signer);try{const t=await e.transfer(this.recipientAddress,y(this.inputTokenAmount,this.inputToken.decimals)),i=this.toast({component:A,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t.hash,"_blank").focus()}),r=await t.wait();r.status===1?(this.toast.dismiss(i),this.toast("You have successfully sent "+String(this.inputTokenAmount)+" "+this.inputToken.symbol+" to "+this.inputReceiver,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t.hash,"_blank").focus()}),this.subtractInputTokenBalance(),this.waiting=!1):(this.toast.dismiss(i),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+t.hash,"_blank").focus()}),console.log(r))}catch(t){console.error(t);try{let i=t.message.split("reason=")[1];i=i.split(", method=")[0],i=i.replace(/"/g,""),i=i.replace("execution reverted:","Error:"),console.log(i),this.toast(i,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}},async sendNativeCoin(){new k(this.inputToken.address,x,this.signer);try{const e=await this.signer.sendTransaction({to:this.recipientAddress,value:y(this.inputTokenAmount,this.inputToken.decimals)}),t=this.toast({component:A,props:{text:"Please wait for your transaction to confirm. Click on this notification to see transaction in the block explorer."}},{type:"info",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e.hash,"_blank").focus()}),i=await e.wait();i.status===1?(this.toast.dismiss(t),this.toast("You have successfully sent "+String(this.inputTokenAmount)+" "+this.inputToken.symbol+" to "+this.inputReceiver,{type:"success",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e.hash,"_blank").focus()}),this.subtractInputTokenBalance(),this.waiting=!1):(this.toast.dismiss(t),this.waiting=!1,this.toast("Transaction has failed.",{type:"error",onClick:()=>window.open(this.$config.public.blockExplorerBaseUrl+"/tx/"+e.hash,"_blank").focus()}),console.log(i))}catch(e){console.error(e);try{let t=e.message.split("reason=")[1];t=t.split(", method=")[0],t=t.replace(/"/g,""),t=t.replace("execution reverted:","Error:"),console.log(t),this.toast(t,{type:"error"})}catch{this.toast("Transaction has failed.",{type:"error"})}this.waiting=!1}},setMaxInputTokenAmount(){this.inputTokenAmount=String(this.inputTokenBalance)},subtractInputTokenBalance(){this.inputTokenBalance=Number(this.inputTokenBalance)-Number(this.inputTokenAmount)}},setup(){const{address:e,chainId:t,isActivated:i,signer:r}=L(),s=V();return{address:e,chainId:t,isActivated:i,signer:r,toast:s}},watch:{async isActivated(){this.address&&(this.inputTokenBalance=await this.getTokenBalance(this.inputToken,this.address,this.signer))}}},q={class:"mb-3"},Q={class:"input-group"},Y={key:0,class:"input-group-text",id:"basic-addon3"},K=n("i",{class:"bi bi-exclamation-triangle-fill"},null,-1),O=[K],X={key:0,class:"form-text",id:"basic-addon4"},Z=n("i",{class:"bi bi-exclamation-triangle-fill"},null,-1),z={class:"input-group mb-1 mt-3"},G={class:"btn btn-primary dropdown-toggle",type:"button","data-bs-toggle":"dropdown","aria-expanded":"false"},J={class:"dropdown-menu p-2"},$=["onClick"],tt=n("small",null,"MAX",-1),et=[tt],nt=n("em",null,"Balance: ",-1),st={class:"cursor-pointer hover-color"},it={class:"d-flex justify-content-center mt-4"},ot={key:1,disabled:!0,class:"btn btn-outline-primary",type:"button"},at=["disabled"],rt={key:0,class:"spinner-border spinner-border-sm mx-1",role:"status","aria-hidden":"true"},ct={key:3,disabled:!0,class:"btn btn-outline-primary",type:"button"};function lt(e,t,i,r,s,o){const h=T("ConnectWalletButton"),m=T("SwitchChainButton");return c(),l("div",null,[n("div",q,[n("div",Q,[s.hasBlankCharacter?(c(),l("span",Y,O)):u("",!0),f(n("input",{"onUpdate:modelValue":t[0]||(t[0]=a=>s.inputReceiver=a),type:"text",class:"form-control",id:"basic-url","aria-describedby":"basic-addon3 basic-addon4",placeholder:"Enter recipient's domain name or address",onKeyup:t[1]||(t[1]=(...a)=>o.findBlankCharacter&&o.findBlankCharacter(...a))},null,544),[[b,s.inputReceiver]])]),s.hasBlankCharacter?(c(),l("div",X,[Z,g(" This domain name contains a blank character: "+p(encodeURIComponent(s.inputReceiver))+". Proceed with caution. ",1)])):u("",!0)]),n("div",z,[n("button",G,p(s.inputToken?.symbol),1),n("ul",J,[f(n("input",{class:"form-control mb-2",placeholder:"Filter tokens","onUpdate:modelValue":t[2]||(t[2]=a=>s.filterTextInput=a)},null,512),[[b,s.filterTextInput]]),(c(!0),l(S,null,F(o.filteredTokensInput,a=>(c(),l("li",{key:a.address,class:"cursor-pointer"},[n("span",{onClick:_=>o.selectInputToken(a),class:"dropdown-item"},p(a.symbol)+" ("+p(a.name)+")",9,$)]))),128))]),f(n("input",{"onUpdate:modelValue":t[3]||(t[3]=a=>s.inputTokenAmount=a),type:"text",class:"form-control",placeholder:"0.00"},null,512),[[b,s.inputTokenAmount]]),n("button",{onClick:t[4]||(t[4]=(...a)=>o.setMaxInputTokenAmount&&o.setMaxInputTokenAmount(...a)),class:"btn btn-outline-secondary",type:"button",id:"button-addon2"},et)]),n("small",{onClick:t[5]||(t[5]=(...a)=>o.setMaxInputTokenAmount&&o.setMaxInputTokenAmount(...a))},[nt,n("em",st,p(o.formatInputTokenBalance)+" "+p(s.inputToken?.symbol),1)]),n("div",it,[r.isActivated?u("",!0):(c(),C(h,{key:0,class:"btn btn-outline-primary",btnText:"Connect wallet"})),r.isActivated&&!s.inputTokenAmount&&o.isSupportedChain?(c(),l("button",ot," Send tokens ")):u("",!0),r.isActivated&&s.inputTokenAmount&&o.inputAmountLessThanBalance&&o.isSupportedChain?(c(),l("button",{key:2,disabled:s.waiting||!s.inputToken||!s.inputTokenAmount||!r.isActivated||!o.inputAmountLessThanBalance||!s.inputReceiver||!o.isSupportedChain,class:"btn btn-outline-primary",type:"button",onClick:t[6]||(t[6]=(...a)=>o.send&&o.send(...a))},[s.waiting?(c(),l("span",rt)):u("",!0),g(" Send tokens ")],8,at)):u("",!0),r.isActivated&&s.inputTokenAmount&&!o.inputAmountLessThanBalance&&o.isSupportedChain?(c(),l("button",ct," Balance too low ")):u("",!0),r.isActivated&&!o.isSupportedChain?(c(),C(m,{key:4})):u("",!0)])])}const ut=I(P,[["render",lt]]),pt={name:"SendTokens",components:{SendTokensComponent:ut},computed:{getQueryRecipient(){return this.$route.query.to?this.$route.query.to:null}},setup(){return{tokens:M}}},dt={class:"scroll-500"},ht={class:"card border"},mt={class:"card-body mb-3"},kt={class:"fs-3"},ft=n("h3",{class:"mt-3"},"Send tokens",-1),bt={class:"d-flex justify-content-center mt-5"},Tt={class:"col-12 col-lg-8"};function gt(e,t,i,r,s,o){const h=E,m=N,a=R,_=T("SendTokensComponent");return c(),l(S,null,[d(a,null,{default:B(()=>[d(h,null,{default:B(()=>[g("Send tokens | "+p(e.$config.public.projectMetadataTitle),1)]),_:1}),d(m,{property:"og:title",content:"Send tokens | "+e.$config.public.projectMetadataTitle},null,8,["content"])]),_:1}),n("div",dt,[n("div",ht,[n("div",mt,[n("p",kt,[n("i",{class:"bi bi-arrow-left-circle cursor-pointer",onClick:t[0]||(t[0]=_t=>e.$router.back())})]),ft,n("div",bt,[n("div",Tt,[d(_,{tokens:r.tokens,recipient:o.getQueryRecipient},null,8,["tokens","recipient"])])])])])])],64)}const Rt=I(pt,[["render",gt]]);export{Rt as default};
